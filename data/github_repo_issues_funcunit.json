[{"repo_name": "bitovi/funcunit", "issue_id": 1, "url": "https://github.com/bitovi/funcunit/issues/1", "title": "Syn removes href of clicked link, even if it's just an id reference.", "contents": "Syn.click() removes the href attribute of \"a\" elements and replaces it with \"javascript://\" (see  http://github.com/pinhook/funcunit/blob/master/synthetic/mouse.js#L162). This causes problems for any event handler that looks at the href attribute of a click event's target element. For instance, I have a tab view that links tabs with the corresponding content based on the tab's href, and Syn is unable to switch from one tab to the next because it interferes with this attribute.\nI'm not sure I understand the purpose of this code, but should the replacement occur unconditionally, or should it perhaps leave id reference hrefs alone?", "createdAt": "2010-07-30T19:47:54Z", "updatedAt": "2011-04-22T20:17:52Z", "closedAt": "2011-04-22T20:17:52Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "jupiterjs", "company": null}, {"login": "cburgdorf", "company": "thoughtram GmbH"}, {"login": "akume", "company": null}], "comments_count": 5, "comments_data": [{"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2010-08-30T21:38:09Z", "contents": "I am going to fix this at some point.  Thanks for this issue.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "cburgdorf", "authorAssociation": "NONE", "createdAt": "2011-01-17T13:37:00Z", "contents": "I am also affected by this. I'm using a context menu plugin that makes use of link tags with hrefs named as the actions (#delete, #open etc.) but after syn fires a click on that element, the href gets replaced with: \"javascript://\"\nChances are high, that something here causes it:\nhttps://github.com/jupiterjs/syn/blob/master/mouse.js#L182\nHowever, its unlikely that I will be able to fix it myself :-(", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2011-01-17T14:54:29Z", "contents": "Just to give some insight into this problem.  Browsers like Opera, when synthetically clicking on a link, will open it up in another window.  This is a bug in Opera, but it's not something we can exactly feature test for.\nI might have to change the attr, but overwrite getAttribute temporarily to allow scripts to still use href.  But this might not even work.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "akume", "authorAssociation": "NONE", "createdAt": "2011-02-16T03:32:31Z", "contents": "this issue also affects me because i'm using jquery tabs() and it uses the href to link to a corresponding div.  could you explain your solution of overwriting getAttribute a bit more?  thanks.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2011-04-22T20:17:50Z", "contents": "fixed https://github.com/jupiterjs/syn/commit/2acb3693a0f8cea49a2dbc8060d97c4378401de7", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 2, "url": "https://github.com/bitovi/funcunit/issues/2", "title": "Syn Click in IE8", "contents": "See this example, and compare IE with Firefox/Chrome/etc.: http://jsfiddle.net/BCfNV/8/\nThe Syn click callback is fired, but the events are not.\nGot any ideas?", "createdAt": "2010-08-30T20:49:08Z", "updatedAt": "2010-10-07T15:07:01Z", "closedAt": "2010-10-07T15:07:01Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "arian", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "arian", "company": "Symbaloo"}, {"login": "jupiterjs", "company": null}, {"login": "cpojer", "company": "Facebook"}], "comments_count": 10, "comments_data": [{"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2010-08-30T21:14:53Z", "contents": "This is happening outside of jsfiddle?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2010-08-30T21:37:04Z", "contents": "Ah, if I do the test without Mootools, and changing onload to load, it works.  Mootools must be overwriting something that Syn depends on.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "arian", "authorAssociation": "NONE", "createdAt": "2010-08-30T23:49:13Z", "contents": "aah, dammit, i'll keep searching, hope I can find it where it collides... or do you have an idea (where to start)?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2010-08-31T00:14:16Z", "contents": "it's got to be fireEvent or attachEvent", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "arian", "authorAssociation": "NONE", "createdAt": "2010-08-31T11:27:04Z", "contents": "MooTools overwrites the IE element fireEvent\ntherefore we should get the old fireEvent, for example with this right after (function($){\nvar fireEvent = document.createElement('div').fireEvent;\n\nand then use this in Syn.dispatch:\nreturn element.sourceIndex <= 0 || fireEvent.call(element, 'on'+type, event)\n\nI think this fixes our errors with MooTools in our Specs runner, you might consider to use this too of course :)", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "arian", "authorAssociation": "NONE", "createdAt": "2010-08-31T11:34:14Z", "contents": "probably a better solution is:\nvar fireEvent = document.documentElement.fireEvent;", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2010-08-31T13:20:05Z", "contents": "Why is mootools overwriting this?\nI can probably make this change, but I don't want to get in the habit of coding around the quirks of other libraries. If syn is being wrapped by mootools, it's probably possible to pass it unmodified elements.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "cpojer", "authorAssociation": "NONE", "createdAt": "2010-08-31T15:37:11Z", "contents": "MooTools chose to overwrite the native IE fireEvent method years ago and we are not able to change that in the current version for compatibility reasons. Please note that this is the only native method in any browser that we are overwriting on the Element.prototype. If you could make this one single change, we would greatly appreciate it. We really don't want to start maintaining our own fork of Syn.js\nThank you", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2010-08-31T15:54:21Z", "contents": "Ok, I will make the change.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "cpojer", "authorAssociation": "NONE", "createdAt": "2010-09-04T11:11:35Z", "contents": "We have investigated the problem some more and it is better not to change this in Syn.js :) Thank you for your time looking into the issue.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 4, "url": "https://github.com/bitovi/funcunit/issues/4", "title": "simulated click on anchor tag - wrong behavior", "contents": "First I'd like to say thanks for releasing the Syn.js library. Actually I have been working on something similar myself but have only achieved a fraction of the Syn.js.\nI have noticed a bug when simulating a click on an anchor tag tag that has both an href attribute and an event handler listening to the onclick attribute, which prevents the default behaviour (e.g. follwing the link) and does some JavaScript magic instead.\n[a id=\"buggy\" href=\"http://www.example.com/images/001.png\"]Open Image in Lightbox[/a]\ndocument.getElementById(\"buggy\").addEvent(\"onclick\", function() {\n//open image in lightbox\nevent.preventDefault();\n});\nFor a real world example, see:\nhttp://www.digitalia.be/software/slimbox2\nA synthetic Syn.js-Click will load the href in the current window, which is wrong. Unfortunately, there seems to be no way of knowing, that there is an event handler registered for the onclick event, unless it has been assigned using the oldschool onclick attribute.\nWhat are your thoughts on this?\nBest,\nChris", "createdAt": "2010-10-07T14:26:55Z", "updatedAt": "2011-04-22T20:23:28Z", "closedAt": "2011-04-22T20:23:28Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "Christian2M", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "Christian2M", "company": null}, {"login": "jupiterjs", "company": null}], "comments_count": 2, "comments_data": [{"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2010-10-07T15:06:38Z", "contents": "Does this work if you use addEventListener?\nSyn should not be performing the default behavior if preventDefault is called on the element.\nCan you supply a failing case with purse DOM methods?  Something like:\nclick\ndocument.getElementById('foo').addEventListener('click',function(ev){\nev.preventDefault()\n})\nSyn.click({},'foo', function(){\nalert(window.locatoin.hash == '#bar')\n})\nThanks!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2011-04-22T20:23:23Z", "contents": "this is fixed with https://github.com/jupiterjs/syn/commit/2acb3693a0f8cea49a2dbc8060d97c4378401de7", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 5, "url": "https://github.com/bitovi/funcunit/issues/5", "title": "Frames that don't exist yet.", "contents": "FuncUnit needs to handle if a frame doesn't exist yet.", "createdAt": "2010-11-12T16:09:47Z", "updatedAt": "2011-10-05T05:20:19Z", "closedAt": "2011-10-05T05:20:19Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "jupiterjs", "company": null}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 1, "comments_data": [{"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2011-10-04T21:17:33Z", "contents": "This is still broken, gonna add a test and fix it", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 7, "url": "https://github.com/bitovi/funcunit/issues/7", "title": "Type empty value cause exception", "contents": "If I do,\nS('#Email').type('');\nIt would fail with:\noptions is undefined\nLine 9688, funcunit.js", "createdAt": "2010-12-11T14:35:32Z", "updatedAt": "2010-12-11T19:11:17Z", "closedAt": "2010-12-11T19:11:17Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexbeletsky", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "alexbeletsky", "company": "@blogfoster, @socialsearchio "}, {"login": "jupiterjs", "company": null}], "comments_count": 2, "comments_data": [{"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2010-12-11T18:52:45Z", "contents": "That's not actually a bug.  You can't type nothing.  Remember, type is different than val.  It types a sequence of characters.  You can't type no characters.  If the user wanted to remove all characters from an element, the user would click the element and then click \\b a bunch of times.  For example:\n.type('\\b\\b\\b\\b') would work.\nThey could also do\n.type('[ctrl]a[ctrl-up]\\b')\nwhich would select all text and delete it.\nI guess this might be a source of confusion for funcunit authors.  We should probably update the docs and maybe hardcode the select-remove-all functionality for typing nothing.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexbeletsky", "authorAssociation": "NONE", "createdAt": "2010-12-11T19:11:17Z", "contents": "OK, it is clear now..\nI think this one could be closed.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 8, "url": "https://github.com/bitovi/funcunit/issues/8", "title": "Simulated click on Select.Option doesn't behaves right", "contents": "When I simulate a selection it keeps the list open and it seems it doesnt fire a change event.\nI doe it like that:\nS('#myselect option[value=1]').click()", "createdAt": "2011-01-17T10:46:14Z", "updatedAt": "2011-01-17T15:16:17Z", "closedAt": "2011-01-17T22:47:41Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "cburgdorf", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "cburgdorf", "company": "thoughtram GmbH"}, {"login": "jupiterjs", "company": null}], "comments_count": 4, "comments_data": [{"authorLogin": "cburgdorf", "authorAssociation": "NONE", "createdAt": "2011-01-17T10:54:56Z", "contents": "However, it works if you use a dblclick:\nS('#myselect option[value=1]').dblclick()", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2011-01-17T14:47:41Z", "contents": "Can you give an example?  Is this in every browser?  FuncUnit has tests that do work correctly (produce a change).", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2011-01-17T14:50:44Z", "contents": "http://javascriptmvc.com/funcunit/syn/qunit.html?funcunit/syn%20module:%20Selecting%20a%20select%20element\nThat is the first test in:\nhttps://github.com/jupiterjs/syn/blob/master/test/qunit/syn_test.js", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "cburgdorf", "authorAssociation": "NONE", "createdAt": "2011-01-17T15:16:17Z", "contents": "Ok, I checked it once again. The change does fire. However in Chrome it keeps the list open. However its still firing a change which I first thought wasnt.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 9, "url": "https://github.com/bitovi/funcunit/issues/9", "title": "Exists checks for size (might be not what someone expects)", "contents": "I noticed that exists() checks for size bigger than 0. However I would expect that it just checks if a selector returns something or not.", "createdAt": "2011-01-17T12:37:27Z", "updatedAt": "2011-01-17T15:05:00Z", "closedAt": "2011-01-17T22:46:14Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "cburgdorf", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "cburgdorf", "company": "thoughtram GmbH"}, {"login": "jupiterjs", "company": null}], "comments_count": 2, "comments_data": [{"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2011-01-17T14:46:14Z", "contents": "I'm not sure what you mean.  Checking for size > 0 is \"checking if a selector returns something or not\".  Size returns the number of elements found by a selector", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "cburgdorf", "authorAssociation": "NONE", "createdAt": "2011-01-17T15:05:00Z", "contents": "Ooops. Now you explained it I feel ashamed about what I thought it does. Never mind ;-)", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 11, "url": "https://github.com/bitovi/funcunit/issues/11", "title": "Typo on doc page http://funcunit.com/#&who=FuncUnit", "contents": "In the example where it says:\n     setup: function() {\n    // opens the page you want to test\n    $.open(\"app.html\");\n  }\n\nIt should say:\n  setup: function() {\n    // opens the page you want to test\n    S.open(\"app.html\");\n  }", "createdAt": "2011-02-08T15:49:04Z", "updatedAt": "2011-04-22T20:19:18Z", "closedAt": "2011-04-22T20:19:18Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "dcoletta", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "dcoletta", "company": null}, {"login": "jupiterjs", "company": null}], "comments_count": 1, "comments_data": [{"authorLogin": "", "authorAssociation": "NONE", "createdAt": "2011-04-22T20:19:18Z", "contents": "fixed, thanks", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 12, "url": "https://github.com/bitovi/funcunit/issues/12", "title": "Integrate with JSTestDriver", "contents": "Is FuncUnit compatible with http://code.google.com/p/js-test-driver/? I looked through http://javascriptmvc.com/docs/FuncUnit.html#&who=FuncUnit but couldn't see any mention.\nThanks for your time.", "createdAt": "2011-05-12T14:07:54Z", "updatedAt": "2012-11-09T06:37:27Z", "closedAt": "2012-11-09T06:37:27Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "JamieMason", "authorAssociation": "NONE", "participants_count": 5, "participants_data": [{"login": "JamieMason", "company": "Fold Left Ltd"}, {"login": "lastzero", "company": "@photoprism @symlex"}, {"login": "idris", "company": "Truebill"}, {"login": "moschel", "company": "Jupiter JS Consulting"}, {"login": "justinbmeyer", "company": "Bitovi"}], "comments_count": 10, "comments_data": [{"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2011-05-12T20:35:05Z", "contents": "It can be done, Brian is looking into this. Right now, there is no support.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "JamieMason", "authorAssociation": "NONE", "createdAt": "2011-05-13T09:14:46Z", "contents": "great, thanks!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "idris", "authorAssociation": "NONE", "createdAt": "2011-09-14T05:59:01Z", "contents": "Any updates on this? Would be really nice to get FuncUnit tests running as part of our CI", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2011-09-14T06:12:19Z", "contents": "If you just need xUnit compatible output, you can use my plugin: https://github.com/smashedpumpkin/jsmvc-extras/blob/master/liquid/xunit/xunit.js", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2011-09-14T06:38:03Z", "contents": "Yes, we got funcunit integrated with phantomJS, which is actually much better than JSTestdriver for automation and CI.  I'm in the process of documenting it.  We're using it at a client for CI integration and its awesome.  Stay tuned in the next couple weeks for the new release.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "JamieMason", "authorAssociation": "NONE", "createdAt": "2011-09-14T08:23:10Z", "contents": "@MosheL - That sounds really cool man, but I think a PhantomJS setup would mean you could only test your code on Webkit, right? Could you discover failing tests due to differing browser implementations of Date() for example?\n@smashedpumpkin - Thanks a lot, on my way to check that out now.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2011-09-30T19:08:23Z", "contents": "I think we'll work on this for 3.3, but not for the upcoming 3.2 release", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "JamieMason", "authorAssociation": "NONE", "createdAt": "2011-10-04T09:19:02Z", "contents": "I just noticed 2 things today, http://code.google.com/p/js-test-driver has been updated (1.3.3) and Google have another JS Unit Testing Framework out as well http://code.google.com/p/google-js-test that FuncUnit could be integrated with.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2011-10-18T05:43:00Z", "contents": "I'm linking to this on JavaScriptMVC where we manage high-level goals for the framework.\ndonejs/donejs#21", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-11-09T06:37:27Z", "contents": "We're not going to do this for 3.3.  We'll re-evaluate what makes sense for FuncUnit for 4.0.  One goal for the future will be for the FuncUnit API to be accessible from any unit testing system, including jstestdriver.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": {"id": "MDk6TWlsZXN0b25lNDI2MTQ=", "title": "JMVC 3.3", "description": "", "createdAt": "2011-09-30T19:08:41Z", "dueOn": null, "number": 1, "closed": true}}, {"repo_name": "bitovi/funcunit", "issue_id": 14, "url": "https://github.com/bitovi/funcunit/issues/14", "title": "Button click on non-existent button causes selenium to freeze test", "contents": "This is a show stopper at the moment, because it causes hudson build scripts to freeze and never finish\nIssue reported here:\nhttp://forum.javascriptmvc.com/topic/timeout-differences-for-funcunit-browser-and-funcunit-selenium#32525000000520013\nBasically, if I have a test where I attempt to click on a button that doesn't exist the test simply freezes\nUsing Default Settings\nBROWSER *firefox =====\nMODULE setup\n--Selenium negative test for button that does not exist--\nsteal.js INFO: Opening //\nsteal.js INFO: Clicking .button-doesnot-exist\n// Just stops here and doesn't timeout\ntest(\"Selenium negative test for button that does not exist\",function(){\nS('.button-doesnot-exist').click(function(){\n//never gets here\n})\n})", "createdAt": "2011-06-04T01:01:48Z", "updatedAt": "2011-09-14T06:40:35Z", "closedAt": "2011-09-14T06:40:35Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "jnisenson", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "jnisenson", "company": null}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 1, "comments_data": [{"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2011-09-14T06:40:35Z", "contents": "This is fixed in latest.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 18, "url": "https://github.com/bitovi/funcunit/issues/18", "title": "Restore async methods within callbacks", "contents": "Make it possible to add an async method (action or wait) inside a callback.\nAsync methods inside a callback should be added to the start of the queue.\nIf the callback ends and there are no actions or waits, it should wipe out anything added to the queue.", "createdAt": "2011-10-05T19:49:36Z", "updatedAt": "2011-10-06T02:54:02Z", "closedAt": "2011-10-06T02:54:02Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "moschel", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 19, "url": "https://github.com/bitovi/funcunit/issues/19", "title": "noConflict", "contents": "Set $.noConflict in extreme mode so any other jQuery in the page won't be affected.", "createdAt": "2011-10-05T19:50:21Z", "updatedAt": "2011-10-05T23:49:34Z", "closedAt": "2011-10-05T23:49:34Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "moschel", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 20, "url": "https://github.com/bitovi/funcunit/issues/20", "title": "Remove jquerymx dependency", "contents": "Just include funcunit's jquery.  Check if there are any other jquerymx dependencies and remove them.", "createdAt": "2011-10-05T19:50:48Z", "updatedAt": "2011-10-05T21:35:22Z", "closedAt": "2011-10-05T21:35:22Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "moschel", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 21, "url": "https://github.com/bitovi/funcunit/issues/21", "title": "Add S.if", "contents": "S.if(checker1, fn1, checker2, fn2, errorFn)\nUseful for running conditional code in funcunit.", "createdAt": "2011-10-05T19:51:35Z", "updatedAt": "2011-10-06T03:24:51Z", "closedAt": "2011-10-06T03:24:51Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "moschel", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 22, "url": "https://github.com/bitovi/funcunit/issues/22", "title": "Don't overwrite confirm, etc", "contents": "Detect if the app page already overwrite confirm, prompt, or alert.  Only overwrite those methods in FuncUnit if that isn't the case.", "createdAt": "2011-10-05T19:52:40Z", "updatedAt": "2011-10-05T20:54:13Z", "closedAt": "2011-10-05T20:54:13Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "moschel", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}, {"login": "amcdnl", "company": null}], "comments_count": 1, "comments_data": [{"authorLogin": "amcdnl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2011-10-05T20:54:13Z", "contents": "added native code detection technique to protect funcunit from overriding user defined confirm/alert/prompts", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 23, "url": "https://github.com/bitovi/funcunit/issues/23", "title": "Fix traverser -> waits", "contents": "S(\":contains('Holler')\")\n.closest(\"#foo\")\n.find(\".combo\")\n.hasClass(\"combo\", false)\nThis doesn't work as expected.  Currently, waits are re-running their queries with this.selector every time the check is made.\nS(this.selector).  But, traversers aren't modifying the selector.\nWhat needs to happen is we store the last traverser method AND the previous collection, and rerun the traverser on the previous collection.\nOR\nwe can simply not re-run queries for anything except .size waits (exists, missing, etc) and not support the case where you call a traverser followed by a .size wait", "createdAt": "2011-10-05T20:04:43Z", "updatedAt": "2011-10-05T21:06:08Z", "closedAt": "2011-10-05T21:06:08Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "moschel", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 1, "comments_data": [{"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2011-10-05T20:33:07Z", "contents": "option 2 is fine for now", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 24, "url": "https://github.com/bitovi/funcunit/issues/24", "title": "Better error messaging when pop-ups get blocked", "contents": "We need to generate more helpful error messages when pop-up windows are blocked by the browser. Some Funcunit tests are failing with an obscure error (Uncaught TypeError: Object [object HTMLDocument] has no method 'getAttributeNode', http://jmvc.local/funcunit/syn/synthetic.js:332) when an attempt is made to focus an invisible document, because it was a blocked pop-up.", "createdAt": "2011-12-16T02:33:49Z", "updatedAt": "2012-11-09T06:38:10Z", "closedAt": "2012-11-09T06:38:10Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "polgfred", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "polgfred", "company": null}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 3, "comments_data": [{"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2011-12-16T03:09:29Z", "contents": "I'm confused why this error isn't being thrown in open.js:\nFuncUnit.win = window.open(url, \"funcunit\",  \"height=1000,toolbar=yes,status=yes,width=\"+width/2+\",left=\"+width/2);\nif(!FuncUnit.win){\nthrow \"Could not open a popup window.  Your popup blocker is probably on.  Please turn it off and try again\";\n}", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2011-12-16T04:11:18Z", "contents": "http://stackoverflow.com/questions/668286/detect-blocked-popup-in-chrome", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-11-09T06:38:10Z", "contents": "We're not going to fix this for 3.3, people just need to know to turn off their popup blocker.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 25, "url": "https://github.com/bitovi/funcunit/issues/25", "title": "No output message from envjs when installing JMVC from Git", "contents": "Hi,\nI've just installed JavascriptMVC from Git, following the tutorial : http://javascriptmvc.com/docs.html#!developwithgit\nI created a new cookbook app : ./js jquery/generate/app cookbook\nThen I ran the following command :\n$ ./js funcunit/run envjs cookbook/qunit.html\nOpening file:///tmp/tmp_project/static/cookbook/qunit.html\nstarting steal.browser.envjs\n$\nThere is no output message from envjs.\nI tried with the Zip file - http://javascriptmvc.com/builder.html - the output is not the same :\n$ ./js funcunit/run envjs cookbook/qunit.html\nUsing Default Settings\nstarting steal.browser.envjs\ncookbook\ncookbook testing works\n[x] an assert is run\nTime: 20 seconds, Memory: 55.13 MB\nOK (1 tests, 1 assertions)\n$\nThank you for your support\nJon", "createdAt": "2012-01-12T10:05:15Z", "updatedAt": "2012-01-13T18:14:01Z", "closedAt": "2012-01-13T18:14:01Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "jon301", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "jon301", "company": null}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 1, "comments_data": [{"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-01-13T18:14:01Z", "contents": "fixed, thanks for reporting", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 26, "url": "https://github.com/bitovi/funcunit/issues/26", "title": "selenium does not end/exit well when has failure", "contents": "It's fine when all tests are successful. You may replicate it by forcing a failure on your provided sample funcunit test. Thanks!", "createdAt": "2012-01-20T10:35:09Z", "updatedAt": "2012-02-02T07:11:02Z", "closedAt": "2012-02-02T07:11:02Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "jacquelynjg", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "jacquelynjg", "company": null}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 4, "comments_data": [{"authorLogin": "jacquelynjg", "authorAssociation": "NONE", "createdAt": "2012-01-23T05:24:56Z", "contents": "I also tried to create cookbook app and run funcunit test (js funcunit/run selenium http://localhost.com/worldracers/cookbook/funcunit.html).\nThe default generated test when finishes, closes the browser, shows test summary and exits selenium console. But when I insert a line like \"ok(false);\" to funcunit/cookbook_test.js to force failure, the test finishes, show test summary but browsers are not being closed, as well as the selenium console.\nHere's a link to last selenium logs...\nhttp://dl.dropbox.com/u/26980083/selenium_result_20120123.png", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-01-23T05:48:40Z", "contents": "taking a look at this tomorrow, thanks for reporting", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "jacquelynjg", "authorAssociation": "NONE", "createdAt": "2012-02-01T05:04:52Z", "contents": "hi! any update on this?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-02-02T07:11:02Z", "contents": "I just tried this in mac and windows, both worked fine.  After inserting ok(false), the test finishes, shows an error, closes firefox, and the selenium console.\nCan you pull latest and try again?  Are you trying this on a particular release or on master branch?  If its still breaking you'll have to give me a little more detail on what exactly you're doing.  I'm gonna close this for now until you can reproduce.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 27, "url": "https://github.com/bitovi/funcunit/issues/27", "title": "Need a way to wait for animations to finish", "contents": "When dealing with applications with animations, it would be useful to have a wait that waits for all current animations to be finished before proceeding with the rest of the test.\nRight now, the instance of jQuery that is running the test (S) and the version running in the app ($) have separate animation queues. This means S(':animated') will always be empty and so S(':animated').missing() will return immediately even though the application still has elements in the animation queue.", "createdAt": "2012-01-25T22:20:02Z", "updatedAt": "2012-03-22T06:02:47Z", "closedAt": "2012-03-22T06:02:47Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "ccummings", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "ccummings", "company": "Aquil.io"}, {"login": "ralphholzmann", "company": "@classpass "}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 2, "comments_data": [{"authorLogin": "ralphholzmann", "authorAssociation": "CONTRIBUTOR", "createdAt": "2012-01-25T22:22:01Z", "contents": "Perhaps you could hook up to the deferred returned by jQuery's animate?\nOn Jan 25, 2012, at 4:20 PM, Curtis Cummings wrote:\n\nWhen dealing with applications with animations, it would be useful to have a wait that waits for all current animations to be finished before proceeding with the rest of the test.\nRight now, the instance of jQuery that is running the test (S) and the version running in the app ($) have separate animation queues. This means S(':animated') will always be empty and so S(':animated').missing() will return immediately even though the application still has elements in the animation queue.\n\nReply to this email directly or view it on GitHub:\n#27", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-03-22T06:02:47Z", "contents": "Just added an S.animationsDone() method that does this.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 28, "url": "https://github.com/bitovi/funcunit/issues/28", "title": "Prompt does not trigger", "contents": "I run funcunit in FF 9.0.1 and Chrome 16. It opens a new window for running the tests just fine.\nIn that window, if I type \"prompt('Question')\" in the javascript console it does nothing.\n(I ended up there because I was trying to test a script with a prompt within)", "createdAt": "2012-01-28T18:02:55Z", "updatedAt": "2012-01-30T06:51:33Z", "closedAt": "2012-01-30T06:51:33Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "jerkan", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "jerkan", "company": null}, {"login": "justinbmeyer", "company": "Bitovi"}], "comments_count": 4, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2012-01-28T21:48:08Z", "contents": "That's expected. FuncUnit overwrites prompt.\nSent from my iPhone\nOn Jan 28, 2012, at 12:02 PM, jerkanreply@reply.github.com wrote:\n\nI run funcunit in FF 9.0.1 and Chrome 16. It opens a new window for running the tests just fine.\nIn that window, if I type \"prompt('Question')\" in the javascript console it does nothing.\n(I ended up there because I was trying to test a script with a prompt within)\n\nReply to this email directly or view it on GitHub:\n#28", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "jerkan", "authorAssociation": "NONE", "createdAt": "2012-01-29T09:33:51Z", "contents": "Really? Then, I am confused.\nFuncunit has a confirm method to simulate clicking on browser's native confirm dialog (according to documentation).\nThen, can't prompt dialog be tested?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2012-01-29T16:49:38Z", "contents": "It can be tested. It just tests that it was called, but you do not see it. Alert, prompt, etc freeze js, so it has to overwrite them.\nSent from my iPhone\nOn Jan 29, 2012, at 3:33 AM, jerkanreply@reply.github.com wrote:\n\nReally? Then, I am confused.\nFuncunit has a confirm method to simulate clicking on browser's native confirm dialog (according to documentation).\nThen, can't prompt dialog be tested?\n\nReply to this email directly or view it on GitHub:\n#28 (comment)", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "jerkan", "authorAssociation": "NONE", "createdAt": "2012-01-30T06:51:33Z", "contents": "Interesting.\nThanks.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 29, "url": "https://github.com/bitovi/funcunit/issues/29", "title": "Clicking multiple select boxes crashes Chrome", "contents": "If you use .click() to change the option of a select box in Chrome, the options will remain visible until you manually trigger a blur. The options remain visible through S.open calls.\nIf you use .click() to change the option of multiple select boxes, Chrome will crash. I've created a test in my own fork of FuncUnit that consistently shows this behavior.\nI created a similar test in syn, but clicking multiple select boxes worked in all browsers. It's possible this issue manifests itself in FuncUnit because we are operating on a window other than our own?\nFuncUnit Test: https://github.com/ccummings/funcunit/commit/6885d07101c7a05c812b4580527f512bf85ed0fa\nSyn Test: https://github.com/ccummings/syn/commit/8a09ef267696465250c57a2c3ee12ca79e32c9a4", "createdAt": "2012-03-02T23:06:40Z", "updatedAt": "2012-11-14T02:17:42Z", "closedAt": "2012-11-14T02:17:42Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "ccummings", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "ccummings", "company": "Aquil.io"}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 3, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2012-03-02T23:18:54Z", "contents": "This was a problem in webkit (and checked for) but Chrome must have adopted this bug.\nSyn should be using the right frame's methods to do the click.  It must not be.  Can you add a test to syn that does this on an iframe?  There are other syn tests that use an iframe you can use as an example", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "ccummings", "authorAssociation": "CONTRIBUTOR", "createdAt": "2012-03-03T05:02:29Z", "contents": "I added the iframe test and it causes Chrome to crash consistently.\nhttps://github.com/ccummings/syn/commit/be555886de5cb0207e7ef7b9b85572bc7874b8fb", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-11-14T02:17:42Z", "contents": "Pulled this test, it doesn't crash chrome anymore, it actually passes just fine.  I guess Chrome and/or Webkit patched this issue.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 30, "url": "https://github.com/bitovi/funcunit/issues/30", "title": "qunit is updated to 1.4 and provides more informative fail information", "contents": "Are you going to updated funcunit to display the same fail information?\nFor example:\nExpected: 'hello world'\nResult: 'hello donkey'\nDif: 'hello'\nSource: ...", "createdAt": "2012-03-09T15:46:53Z", "updatedAt": "2012-11-17T00:54:33Z", "closedAt": "2012-11-14T03:28:47Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "inspiraller", "authorAssociation": "NONE", "participants_count": 4, "participants_data": [{"login": "inspiraller", "company": "ST Creative ltd"}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "moschel", "company": "Jupiter JS Consulting"}, {"login": "daniel-franz", "company": null}], "comments_count": 9, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2012-03-09T23:47:14Z", "contents": "It already does this right?\nSent from my iPhone\nOn Mar 9, 2012, at 7:46 AM, stevereply@reply.github.com wrote:\n\nAre you going to updated funcunit to display the same fail information?\nFor example:\nExpected: 'hello world'\nResult: 'hello donkey'\nDif: 'hello'\nSource: ...\n\nReply to this email directly or view it on GitHub:\n#30", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "inspiraller", "authorAssociation": "NONE", "createdAt": "2012-03-10T06:36:09Z", "contents": "HI Justin\nNot currently. All I see is actual: '' and result '', all on the same line, and It's quite difficult to read so I've been adding my own console logging in. I tried hacking into the funcunit.js and wrapping span tags around the results, but unfortunately because everything is parsed it encodes the greater and less than signs so no html is outputed. I don't want to get into regexing the differences because that would be messy.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2012-03-10T16:28:38Z", "contents": "Can you give an example because I don't see the same thing?\nSent from my iPhone\nOn Mar 9, 2012, at 10:36 PM, stevereply@reply.github.com wrote:\n\nHI Justin\nNot currently. All I see is actual: '' and result '', all on the same line, and It's quite difficult to read so I've been adding my own console logging in. I tried hacking into the funcunit.js and wrapping span tags around the results, but unfortunately because everything is parsed it encodes the greater and less than signs so no html is outputed. I don't want to get into regexing the differences because that would be messy.\n\nReply to this email directly or view it on GitHub:\n#30 (comment)", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "inspiraller", "authorAssociation": "NONE", "createdAt": "2012-03-10T19:52:55Z", "contents": "STEPS\n\nvisit site: http://v3.javascriptmvc.com/builder.html\nClick: Download FuncUnit 1.0 production\nunzip: Extract funcunit.js out into my desktop\ncreate funcunit_test.htm on my desktop:\n\n<html>\n<body>\n<div id=\"qunitPanel\">\n<h1 id=\"qunit-header\">QUnit Test Suite</h1>\n<h2 id=\"qunit-banner\"></h2>\n<div id=\"qunit-testrunner-toolbar\"></div>\n<h2 id=\"qunit-userAgent\"></h2>\n<ol id=\"qunit-tests\"></ol>\n<div id=\"qunit-fixture\">test markup</div>\n</div>\n<script type=\"text/javascript\" src=\"funcunit.js\"></script>\n<script type=\"text/javascript\">\ntest('hello world',function(){\nequal('hello world','hello donkey','test hello world');\n});\n</script>\n</body>\n</html>\n\nopen functunit_test.htm in browser\nclick: 'hello world'\noutput:\ntest hello world, expected: \"hello donkey\" result: \"hello world\"\n\nNotice it is not in a table, as it qunit layout v1.4, and here it is more difficult\nto debug when reading in one line, and comparing strings or anything else.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2012-03-11T00:21:40Z", "contents": "So the problem isn't that it's not showing the output difference, it's that it is harder to read.\nSent from my iPhone\nOn Mar 10, 2012, at 11:52 AM, stevereply@reply.github.com wrote:\n\nSTEPS\n\nvisit site: http://v3.javascriptmvc.com/builder.html\nClick: Download FuncUnit 1.0 production\nunzip: Extract funcunit.js out into my desktop\ncreate funcunit_test.htm on my desktop:\n\n<html>\n<body>\n<div id=\"qunitPanel\">\n<h1 id=\"qunit-header\">QUnit Test Suite</h1>\n<h2 id=\"qunit-banner\"></h2>\n<div id=\"qunit-testrunner-toolbar\"></div>\n<h2 id=\"qunit-userAgent\"></h2>\n<ol id=\"qunit-tests\"></ol>\n<div id=\"qunit-fixture\">test markup</div>\n</div>\n<script type=\"text/javascript\" src=\"funcunit.js\"></script>\n<script type=\"text/javascript\">\ntest('hello world',function(){\nequal('hello world','hello donkey','test hello world');\n});\n</script>\n</body>\n</html>\n\nopen functunit_test.htm in browser\nclick: 'hello world'\noutput:\ntest hello world, expected: \"hello donkey\" result: \"hello world\"\n\nNotice it is not in a table, as it qunit layout v1.4, and here it is more difficult\nto debug when reading in one line, and comparing strings or anything else.\n\nReply to this email directly or view it on GitHub:\n#30 (comment)", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "inspiraller", "authorAssociation": "NONE", "createdAt": "2012-03-11T18:57:30Z", "contents": "yes. Apologies if I wasn't clearer. Have I entered this into the wrong category? I suppose it's more of a development enquiry as opposed to an actual bug.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-11-09T07:03:17Z", "contents": "This is actually trickier than it appears.  We have to:\n\nupdate all equal to be equals\nfind a way to fix zero assertion tests (this breaks now in latest qunit)", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daniel-franz", "authorAssociation": "NONE", "createdAt": "2012-11-14T05:55:30Z", "contents": "Is 1.10 tested with Rhino/Envjs? As commented at the commit, I think \"throws\" will break it.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-11-17T00:54:33Z", "contents": "You were right, but @daffl fixed it: 1c9c8ac", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 31, "url": "https://github.com/bitovi/funcunit/issues/31", "title": "Can't get phantomjs testing to fail", "contents": "There seems to be a problem with the -e flag when trying to do funcunit tests on phantomjs.\nSteps to reproduce:\n\ngenerate an app\nchange the APPNAME/test/funcunit/APPNAME_test.js to test equals(1, 0).\nrun ./js -e funcunit/open/phantomjs APPNAME/funcunit.html\nwatch the test fail\ncreate this small bash-script to test the exit status\n\n#!/bin/bash\n./js -e funcunit/open/phantomjs rtorrent/funcunit.html\necho \"Exit status\" $?\nExpected output\n...\nFAILURES!\n...\nExit status SOMETHING_NOT_ZERO\n\nActual output\n...\nFAILURES!\n...\nExit status 0", "createdAt": "2012-05-02T16:15:26Z", "updatedAt": "2012-11-12T15:55:50Z", "closedAt": "2012-11-12T15:55:50Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "ansjob", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "ansjob", "company": "Palantir Technologies"}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 1, "comments_data": [{"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-11-12T15:55:50Z", "contents": "fixed by 1bb7eb1#commitcomment-2139072", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 32, "url": "https://github.com/bitovi/funcunit/issues/32", "title": "funcunit build.js script broken", "contents": "The standalone build script for funcunit is broken and has been for quite some time. See http://forum.javascriptmvc.com/topic/right-stand-alone-version-of-funcunit.\nIt appears that this script was deleted entirely in commit 45f5373, but there is no replacement, the README still references it, and it's still in the latest production download.", "createdAt": "2012-05-09T14:26:50Z", "updatedAt": "2013-11-01T18:58:30Z", "closedAt": "2013-11-01T18:58:30Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "csosborn", "authorAssociation": "NONE", "participants_count": 4, "participants_data": [{"login": "csosborn", "company": "CTRL-labs"}, {"login": "moschel", "company": "Jupiter JS Consulting"}, {"login": "programcsharp", "company": "@OwnerRez "}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 5, "comments_data": [{"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-05-09T16:01:23Z", "contents": "You're right.  The complicated part of the build was usually changing the selenium jar's files and re-zipping it.  We no longer do that so now its just copying/moving files around and making a zip.  I can whip something up in the next day or two that replicates that (we've been doing it manually).  I'm curious what you need this for?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "csosborn", "authorAssociation": "NONE", "createdAt": "2012-05-09T16:17:29Z", "contents": "I'd like to be able to use Funcunit by just including it in an html page, essentially making use of it's Qunit enhancements but without Selenium/PhantomJS and ideally without the Steal dependency. I'm trying to use it in a Spring Java app, and I would at least like to postpone any effort to reconcile Steal and Jawr until I know Funcunit meets my needs.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "csosborn", "authorAssociation": "NONE", "createdAt": "2012-05-09T16:21:52Z", "contents": "I've been trying to manually stitch together a standalone funcunit.js but it doesn't actually work, so apparently I'm doing something wrong. Does funcunit need its own copy of jquery even if there is one already present?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "programcsharp", "authorAssociation": "NONE", "createdAt": "2013-05-22T16:17:28Z", "contents": "Any changes on this? I want to be able to drop funcunit in to an existing project and start using it, but the massive level of dependencies makes that unworkable.\nIt'd be nice to be able to reference a built funcunit.js in a .html and just start writing tests. I don't need selenium -- phantomjs should work fine.\nIf you can give me some direction on what needs to be done, I'd be happy to put together a build script that wraps everything up together.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T18:58:30Z", "contents": "Closing, as of FuncUnit 2.0.x, funcunit is available via a single dist download with the following dependencies:\njQuery on the runner page\nQUnit or Jasmine\nStandalone build is available via funcunit.com, bower install funcunit or running grunt build from the cloned repo.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 33, "url": "https://github.com/bitovi/funcunit/issues/33", "title": "change handler on controller sub-element not being triggered in tests", "contents": "It appears that if you have a change handler defined for an element in your controller, that handler will be called when run directly, but will not be called when run through Funcunit.\nSee gist (git://gist.github.com/2938064.git) with altered \"recipe\" example that manifests the bug.", "createdAt": "2012-06-15T18:38:43Z", "updatedAt": "2012-11-14T02:13:40Z", "closedAt": "2012-11-14T02:13:40Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "edhille", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "edhille", "company": null}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 35, "url": "https://github.com/bitovi/funcunit/issues/35", "title": "Clipboard emulation", "contents": "Possibility for FuncUnit/Syn to emulate clipboard functionality (as mentioned in this thread).\nSo when typing ([ctrl]c[ctrl-up] or ([ctrl]x[ctrl-up] get the current selection (when cutting remove it) and store it in a dummy clipboard. When ([ctrl]c[ctrl-up] is being typed insert is as the value in the element that currently has the focus.", "createdAt": "2012-10-08T23:38:04Z", "updatedAt": "2012-11-12T06:47:46Z", "closedAt": "2012-11-12T06:47:46Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "daffl", "company": "@feathersjs and @bidalihq"}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 1, "comments_data": [{"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2012-10-09T00:10:03Z", "contents": "Hm, looks as if something like that has been implemented here:\nhttps://github.com/jupiterjs/syn/blob/master/key.js#L402", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 36, "url": "https://github.com/bitovi/funcunit/issues/36", "title": "offset/position can't execute callback after success", "contents": "hi,\ni'm using javascriptmvc-3.2.4 to create test for my app.\nthis is my code:\nS(\"#main li:nth-child(2)\").offset({top:0,left:-755},function(){\nalert('!');\nok(S(\"#main li:nth-child(2)\").offset().left<0);\nok(S(\"#main li:nth-child(3)\").offset().left<755);\nequal(S(\"#myTab_btns li:nth-child(2)\").hasClass('hot'),false);\nequal(S(\"#myTab_btns li:nth-child(3)\").hasClass('hot'),true);\n});\nthe callback func doesn't work. i test other waits func, they work fine.\ndoes my writing is wrong, or it's a bug?", "createdAt": "2012-10-25T06:08:11Z", "updatedAt": "2012-11-14T00:00:31Z", "closedAt": "2012-11-13T23:59:18Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "", "authorAssociation": "NONE", "participants_count": 1, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 2, "comments_data": [{"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-11-09T06:35:33Z", "contents": "I think you're saying offset isn't working correctly as a wait condition?  One reason might be that exact pixel numbers are hard to match.  Instead, I'd add a callback that checks for some pixel thresholds.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2012-11-14T00:00:31Z", "contents": "I added a test to show how .offset should be used as a wait (with a callback).  It doesn't really make sense to support an API where you can pass an object argument and both params have to match exactly.  That will create very brittle tests.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 37, "url": "https://github.com/bitovi/funcunit/issues/37", "title": "syn submodule refers to invalid SHA", "contents": "It appears that the syn submodule is pointing to https://github.com/bitovi/syn/tree/0fea0bb91c7843287aa55c40578ab2a6f3bbcf40, which isn't checked in.\nThis causes recursion, checkouts, and deployments to fail :(", "createdAt": "2012-12-18T23:02:24Z", "updatedAt": "2012-12-19T01:58:04Z", "closedAt": "2012-12-19T01:58:04Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "onyxrev", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "onyxrev", "company": "Dan Connor Consulting"}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 38, "url": "https://github.com/bitovi/funcunit/issues/38", "title": "safari with selenium broken", "contents": "This fixes it in open.js\n           if(FuncUnit.win && FuncUnit.win.document == null){\n                    setTimeout(arguments.callee, 500)\n                    return;\n                }\n         }catch(e){", "createdAt": "2012-12-21T01:03:25Z", "updatedAt": "2013-02-07T02:24:04Z", "closedAt": "2013-02-07T02:24:04Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "justinbmeyer", "company": "Bitovi"}, {"login": "moschel", "company": "Jupiter JS Consulting"}], "comments_count": 2, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2012-12-21T01:05:06Z", "contents": "Oh, I also updated to the latest selenium.  http://selenium.googlecode.com/files/selenium-server-standalone-2.28.0.jar", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "moschel", "authorAssociation": "MEMBER", "createdAt": "2013-02-07T02:24:04Z", "contents": "this was fixed with the last release", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 39, "url": "https://github.com/bitovi/funcunit/issues/39", "title": "Add text selection to funcunit drag", "contents": "We would like funcunit's \"drag\" event to select text and nodes in the browser, just like when you click and drag with your mouse.  Ideally it should use/populate each browser's native selection framework.", "createdAt": "2013-02-01T21:02:30Z", "updatedAt": "2016-10-31T23:13:04Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "ekubacki", "authorAssociation": "NONE", "participants_count": 4, "participants_data": [{"login": "ekubacki", "company": null}, {"login": "imjoshdean", "company": "Trunk Club"}, {"login": "alexisabril", "company": "Aquil.io"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "imjoshdean", "authorAssociation": "NONE", "createdAt": "2013-05-26T19:33:56Z", "contents": "Sorry for the delay in response.\nWhile this sounds like a very cool idea, it is something that we aren't going to be able to go full force on by ourselves. If you or someone else would like to start work on it, we would be more than happy to advise and assist on the development of adding text selection to drag.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-19T20:02:23Z", "contents": "Feature dependent on Syn.drag(). Adding issue: bitovi/syn#21\nMarking this issue for v2.1 as a feature.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["enhancement", "p4"], "milestone": {"id": "MDk6TWlsZXN0b25lNDUyMDY3", "title": "v2.1", "description": "", "createdAt": "2013-10-10T19:43:01Z", "dueOn": null, "number": 2, "closed": false}}, {"repo_name": "bitovi/funcunit", "issue_id": 41, "url": "https://github.com/bitovi/funcunit/issues/41", "title": "is there a way to use it with testem/testacular?", "contents": "", "createdAt": "2013-03-08T10:51:38Z", "updatedAt": "2013-05-25T23:05:24Z", "closedAt": "2013-05-25T23:05:24Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "stereobooster", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "stereobooster", "company": null}, {"login": "asavoy", "company": null}, {"login": "imjoshdean", "company": "Trunk Club"}], "comments_count": 2, "comments_data": [{"authorLogin": "asavoy", "authorAssociation": "NONE", "createdAt": "2013-04-10T04:56:51Z", "contents": "I've integrated testem with funcunit's qunit tests, it just requires two files to be configured:\ntestem.json\n{\n  \"test_page\": \"testem/test_suite.html\",\n  \"src_files\": [\n    \"**/qunit.js\"\n  ],\n  \"src_files_ignore\": [\n    \"documentjs/**/qunit.js\",\n    \"funcunit/**/qunit.js\",\n    \"jquery/**/qunit.js\",\n    \"steal/**/qunit.js\"\n  ]\n}\ntestem/test_suite.html\n<!doctype html>\n<html>\n<head>\n    <title>Testem + QUnit</title>\n    <script type='text/javascript' src='../steal/steal.js'></script>\n    <script type='text/javascript'>\n        // Load funcunit and qunit first, then the testem.js,\n        // then our unit tests.\n        var testFiles = [];\n        {{#serve_files}}\n        testFiles.push('{{src}}');\n        {{/serve_files}}\n\n        steal('funcunit', 'funcunit/qunit')\n            .then('/testem.js')\n            .then.apply(null, testFiles);\n    </script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../funcunit/qunit/qunit.css\" />\n</head>\n<body>\n<h1 id=\"qunit-header\">Tests</h1>\n<h2 id=\"qunit-banner\"></h2>\n<div id=\"qunit-testrunner-toolbar\"></div>\n<h2 id=\"qunit-userAgent\"></h2>\n<ol id=\"qunit-tests\"></ol>\n<div id=\"qunit-fixture\"></div>\n</body>\n</html>", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "imjoshdean", "authorAssociation": "NONE", "createdAt": "2013-05-25T23:05:24Z", "contents": "@asavoy seems to have given a working solution. Closing.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 46, "url": "https://github.com/bitovi/funcunit/issues/46", "title": "funcunit not producing valid junit xml files", "contents": "When running your funcunit tests with following command\n./js funcunit/open/phantomjs funcunit.html -out \"results.xml\" the resulting xml file isn't correct. I has class in it's testcases which has to be classname.\nBy changing\n<testcase class=\"' + xmlEncode(classPrefix FuncUnit.browserName\nto\n<testcase classname=\"' + xmlEncode(classPrefix + FuncUnit.browserName\nin output.js it is fixed and you can use the valid junit xml files with xunit.", "createdAt": "2013-06-27T09:02:05Z", "updatedAt": "2013-11-01T19:06:23Z", "closedAt": "2013-11-01T19:06:23Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "JeroenNouws", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "JeroenNouws", "company": null}, {"login": "lastzero", "company": "@photoprism @symlex"}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 12, "comments_data": [{"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-06-27T09:43:10Z", "contents": "It's a feature, not a bug: The xunit plugin was built for Jenkins.\n\nhttp://stackoverflow.com/questions/4922867/junit-xml-format-specification-that-hudson-supports\nhttp://phpunit.de/manual/3.7/en/logging.html#logging.xml\n\nQuote from http://blog.andho.com/2011-11-05/junit-xml-formatter-for-phpspec-compatible-with-jenkins/\n\nThe next thing I needed was the actual format for the Junit.xml accepted by Jenkins. My first clue was from this stackoverflow question. It had the everything correct except one minor detail. The \u2018classname\u2019 attribute in the \u2018testcase\u2019 tag was supposed to be \u2018class\u2019, which I didn\u2019t know until much later. So obviously Jenkins didn\u2019t - couldn\u2019t - accept this file to show the test results.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "JeroenNouws", "authorAssociation": "NONE", "createdAt": "2013-06-28T08:03:10Z", "contents": "Okay,\nthen maybe you should add it to the documentation of the integration with Jenkins,\nsince there's nothing on it about this feature at this moment.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-06-30T22:10:19Z", "contents": "Yes, maybe that should be written down explicitly - although it's only relevant for people who don't use Jenkins. May I ask what your specific use case is? Are you working on a tool that reads JUnit XML files?\nSince not only this plugin but also popular unit testing frameworks like PHPUnit use class instead of className, it's probably a good idea to support both variants.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "JeroenNouws", "authorAssociation": "NONE", "createdAt": "2013-07-15T13:03:10Z", "contents": "Hey sorry for the late reply,\nI was trying to automate our funcunit testcases and integrate them in jenkins,\nwith the xunit plugin there was a problem reading in the xml files, it kept saying the file was invalid, so no exotic use case though", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-07-15T13:13:45Z", "contents": "Was the file really invalid for Jenkins because of the class vs classname issue or was there another problem (which I think is more likely)?\nFor example: It's easily possible to make XML files invalid by inserting certain binary characters.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "JeroenNouws", "authorAssociation": "NONE", "createdAt": "2013-07-15T13:16:04Z", "contents": "nope,\nit was a very basic xml file, I don't know if it's jenkins or the xunit plugin that's to blame but changing class to classname fixed it", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-07-15T13:21:14Z", "contents": "Ok, so you say you are actually using a Jenkins version that has the \"classname\" vs \"class\" issue fixed. What version is this? Do you know any other unit testing framework which uses \"classname\" instead of \"class\"?\nThe latest PHP Unit release is still using \"class\": http://phpunit.de/manual/3.8/en/logging.html#logging.xml", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "JeroenNouws", "authorAssociation": "NONE", "createdAt": "2013-07-15T13:24:48Z", "contents": "I think it's because xunit was expecting a junit4 xml,\nin this xml you have to use classname according to it's xsd\nhttps://svn.jenkins-ci.org/trunk/hudson/dtkit/dtkit-format/dtkit-junit-model/src/main/resources/com/thalesgroup/dtkit/junit/model/xsd/junit-4.xsd", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-07-15T13:27:41Z", "contents": "Thanks for the link. Seems like junit-7 actually allows the use of \"class\": https://svn.jenkins-ci.org/trunk/hudson/dtkit/dtkit-format/dtkit-junit-model/src/main/resources/com/thalesgroup/dtkit/junit/model/xsd/junit-7.xsd", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-07-15T13:32:33Z", "contents": "Would it be possible to use the latest spec instead of changing the code of the xunit plugin?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "JeroenNouws", "authorAssociation": "NONE", "createdAt": "2013-07-15T13:34:25Z", "contents": "I fixed it over here by changing class to classname, but how do you change to another spec? we're using jenkins 1.484 and xunit 1.60", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:06:23Z", "contents": "Closing this issue as out of scope. FuncUnit has been reduced to a test library plugin(eg: for QUnit, Jasmine) and is recommended to be used with the community supported runners, such as grunt-contrib-qunit.\nNote: FuncUnit has undergone a project redirection detailed here.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 47, "url": "https://github.com/bitovi/funcunit/issues/47", "title": "Funcunit finding within a context", "contents": "According to the documentation on the website you can give a number or string as context and funcunit will look up the frame according to the context supplied.\nHowever in core.js in getContext you create a selector iframe:eq(+context+) or iframe[name='+context+'] this will never work for getting a frame making it frame instead of iframe does the trick.\nSo you might consider changing your documentation or change the code to effectively select frames.", "createdAt": "2013-07-15T13:01:23Z", "updatedAt": "2016-10-31T23:10:34Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "JeroenNouws", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "JeroenNouws", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 48, "url": "https://github.com/bitovi/funcunit/issues/48", "title": "Doc is not up-to-date", "contents": "Hi there,\nI am new to funcunit and it seems to me that documentation that is here (http://javascriptmvc.com/docs/FuncUnit.prototype.visible.html) is not up-to-date. Also the md files that are into this github page have broken links (or non functioning links like [FuncUnit.open open] ).\nCould you update this documentation please ?\nThanks in advance", "createdAt": "2013-08-20T15:15:36Z", "updatedAt": "2013-09-20T14:33:25Z", "closedAt": "2013-09-20T14:27:02Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "lauhub", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "lauhub", "company": null}, {"login": "kryger", "company": "Mobica"}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 4, "comments_data": [{"authorLogin": "kryger", "authorAssociation": "NONE", "createdAt": "2013-09-20T14:14:08Z", "contents": "+1, the documentation is really discouraging, it gives an impression that the project is abandoned. I have some legacy tests for FuncUnit 1.0.1, I'd be eager to upgrade if I knew the project is still alive.\nBy the way, what's the difference between THIS repository (https://github.com/bitovi/funcunit) and https://github.com/bitovi/funcunit.js ? They share large part of the description and file structure, but the other one seems to be more active.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-09-20T14:27:02Z", "contents": "I apologize for the confusion. The funcunit.js repo is the latest, however the docs are still in a \"beta\" stage(but more up to date than funcunit).\nI actually plan on moving the repo to just be \"funcunit\" within the next few days. The latest docs & an easier download is available via http://funcunit.com.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-09-20T14:29:22Z", "contents": "One quick additional note:\nIn v2, we've simplified funcunit to only be the assertion framework. All the rhino runners have been removed. For automating running of tests, we're using a new tool: bitovi/testee.\nThe new api is F() as opposed to S(), but if you have existing tests you can leave S() as I kept an alias for backwards compatibility.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "kryger", "authorAssociation": "NONE", "createdAt": "2013-09-20T14:33:16Z", "contents": "Hi, thanks for your quick reply; I'm happy to hear all this. I'll try to allocate some time to give it a try next week :)\n\ud83d\udc4d", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 49, "url": "https://github.com/bitovi/funcunit/issues/49", "title": "Example 404 in docs", "contents": "http://javascriptmvc.com/docs/FuncUnit.html#section_Runninginbrowser\nHas a 404 - the link that points to http://javascriptmvc.com/docs/funcunit/test/autosuggest/funcunit.html", "createdAt": "2013-08-25T20:51:41Z", "updatedAt": "2013-11-01T19:13:20Z", "closedAt": "2013-11-01T19:13:20Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "zkat", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "zkat", "company": "@npm"}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 1, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:13:20Z", "contents": "Migrating to javascriptmvc.com repo: https://github.com/bitovi/javascriptmvc.com/issues/2", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 50, "url": "https://github.com/bitovi/funcunit/issues/50", "title": "Funcunit sometimes generate invalid XML files", "contents": "Using the ouput option to generate an xml file with test result sometimes create broken xml files. The command I use to generate the results xml is:\n./js funcunit/open/phantomjs myapp/myapp_test.html -out myapp/docs/funcunit.xml\n\nThe problems is related to an invalid tag \"testcase\" inside the \"testsuite\"(s)  record during the process. All the tests are executed but somtimes the report process just add only a closing \"\" tag, this breaks my build when it runs with our CI server (jenkings + xunit plugin). The test script contents is something like:\nsteal('funcunit')\n    // test modules\n    .then('myapp/modules/expression/builder/builder_test.js')\n    .then('myapp/modules/expression/factory/factory_test.js')\n    .then('myapp/modules/expression/variable_selector/variable_selector_test.js')\n    // etc ...\n\nAll tests pass, no errors inside them, no java exceptions, nothing wrong except for broken xml files.\nMy Environment:\n\nUbuntu 12.04 64bit (tested even with 13.04 64bit)\nPhantomJS 1.9.1 (for 64bit platform)\nJenkins 1.505\nXUnit 1.6.1", "createdAt": "2013-09-17T07:41:18Z", "updatedAt": "2013-11-01T19:07:22Z", "closedAt": "2013-11-01T19:07:22Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "th3n3rd", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "th3n3rd", "company": "8x8 Inc"}, {"login": "lastzero", "company": "@photoprism @symlex"}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 5, "comments_data": [{"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-09-17T08:59:36Z", "contents": "The (current) code looks ok to me, after I had a quick look. Do you have an idea why this happens only sometimes and not always? What Java version are you using?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "th3n3rd", "authorAssociation": "NONE", "createdAt": "2013-09-17T09:02:27Z", "contents": "Currently i'm using Java 1.7.0_21, but the problem is really \"random\", just a monent ago i alse found that some \"testcase\" result is duplicated in another \"testsuite\"!!!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "lastzero", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-09-17T09:10:45Z", "contents": "Sounds like some sort for caching issue... My original code was mostly refactored, so I'm not sure why this happens now...", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "th3n3rd", "authorAssociation": "NONE", "createdAt": "2013-09-17T09:22:54Z", "contents": "There is any tool to debug in this situation? I mean put breakpoint etc...? I usually go with browser debugger for javascript XD, but I dunno what to do now....", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:07:22Z", "contents": "Closing this issue as out of scope. FuncUnit has been reduced to a test library plugin(eg: for QUnit, Jasmine) and is recommended to be used with the community supported runners, such as grunt-contrib-qunit.\nNote: FuncUnit has undergone a project redirection detailed here.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 51, "url": "https://github.com/bitovi/funcunit/issues/51", "title": "API improvements", "contents": "Issue by justinbmeyer from Wednesday Sep 04, 2013 at 04:27 GMT\nOriginally opened as https://github.com/bitovi/funcunit.js/issues/14\n\n[ ] The menu is useless.\n[ ] Documentation presentation issues\nThe format of the docs should match CanJS's.  Lets take: http://funcunit.com/docs/FuncUnit.prototype.click.html for example.\n\nits signature click(options [,success]) should be either .click(options [,success]) or funcunit.click(options [,success]).\nsignatures are for terse, explanations.  There are way too many examples.\nLinks are broken.\nSentences should start with a capital letter.", "createdAt": "2013-10-10T19:16:21Z", "updatedAt": "2013-10-10T19:41:58Z", "closedAt": "2013-10-10T19:41:58Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 52, "url": "https://github.com/bitovi/funcunit/issues/52", "title": "Feature list", "contents": "Issue by moschel from Tuesday Sep 03, 2013 at 15:07 GMT\nOriginally opened as https://github.com/bitovi/funcunit.js/issues/5\n\nHomepage needs a brief feature list (why should I use this?) similar to canjs.com", "createdAt": "2013-10-10T19:17:57Z", "updatedAt": "2016-10-31T23:06:30Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "marshallswain", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:30:27Z", "contents": "Migrated issue to funcunit.com repo: https://github.com/bitovi/funcunit.com/issues/1", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p3", "website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 53, "url": "https://github.com/bitovi/funcunit/issues/53", "title": "CI setup", "contents": "Issue by alexisabril from Tuesday Sep 03, 2013 at 16:15 GMT\nOriginally opened as https://github.com/bitovi/funcunit.js/issues/8\n\nCurrently, travis runs for the master branch on every commit with a successful response(bug in testee).\nHowever, the tests are currently failing when run in phantom.", "createdAt": "2013-10-10T19:17:57Z", "updatedAt": "2016-03-23T13:48:41Z", "closedAt": "2016-03-23T13:48:41Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "m-mujica", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "m-mujica", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-03-23T13:48:41Z", "contents": "Closed by #148.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 54, "url": "https://github.com/bitovi/funcunit/issues/54", "title": "Design tweaks", "contents": "Issue by daffl from Tuesday Sep 03, 2013 at 16:21 GMT\nOriginally opened as https://github.com/bitovi/funcunit.js/issues/9\n\nI really like the FuncUnit page design but I think that the flat style from the front page can also be brought over to the API and guides by removing some of the borders and just using background colors. Attached an example screenshot:\n\nWhat do you think @tomgreever?", "createdAt": "2013-10-10T19:17:58Z", "updatedAt": "2013-11-01T19:30:48Z", "closedAt": "2013-11-01T19:30:48Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 2, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-10T19:17:58Z", "contents": "Comment by tomgreever from Tuesday Sep 03, 2013 at 16:27 GMT\n\nI'm ok with that, although maybe a lighter shade more like the sidebar :) I'm more concerned about why the FuncUnit logo isn't white!\nOn Sep 3, 2013, at 11:21 AM, David Luecke notifications@github.com wrote:\n\nI really like the FuncUnit page design but I think that the flat style from the front page can also be brought over to the API and guides by removing some of the borders and just using background colors. Attached an example screenshot:\nWhat do you think @tomgreever?\n\u2014\nReply to this email directly or view it on GitHub.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:30:48Z", "contents": "Migrated issue to funcunit.com repo: https://github.com/bitovi/funcunit.com/issues/2", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 55, "url": "https://github.com/bitovi/funcunit/issues/55", "title": "assertion counters do not show any pass/fails for func unit tests", "contents": "Issue by shcarrico from Monday Sep 09, 2013 at 19:55 GMT\nOriginally opened as https://github.com/bitovi/funcunit.js/issues/17\n\nI propose we add a \"FuncUnit\" assertion and pass/fail it for each test / adapter, so we do not have 0 assertions passing/failing for funcunit tests. Any test w/ a funcunit operation would then have 1 matching assertion of \"FuncUnit Tests\" or something similar, so you can see clearly whether they have passed/failed for that test.", "createdAt": "2013-10-10T19:17:59Z", "updatedAt": "2013-11-05T20:41:56Z", "closedAt": "2013-11-05T20:41:56Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 2, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-10T19:18:00Z", "contents": "Comment by alexisabril from Thursday Sep 19, 2013 at 18:44 GMT\n\nJust noting specifics:\nCurrently FuncUnit does add an assertion for waits(eg: F().visible()), however not for actions.\nWe could potentially have assertions for actions, but I'm not sure how applicable that might be.\nThat being said, the QUnit adapter only shows assertions for waits with messages(which is an issue).", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-05T20:41:55Z", "contents": "After discussion, we're keeping functionality as-is. Providing a message to a wait qualifies the method as an assertion. This is used as the distinction from just macro'ing actions in a test:\n//perhaps these two steps are done in a setup method as opposed to needing an assertion\nF('.foo').exists();\nF('.foo').click();\n//the actual test:\nF('.notification').visible('notification is visible); //message is provided, assertion is invoked as this is what we \"care\" about\nCurrently this only affects QUnit as QUnit requires an assertion in each test(or expects(0)). Jasmine will pass as long as no failing asserts are thrown.\nNote: @shcarrico", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["enhancement", "question"], "milestone": {"id": "MDk6TWlsZXN0b25lNDUyMDY3", "title": "v2.1", "description": "", "createdAt": "2013-10-10T19:43:01Z", "dueOn": null, "number": 2, "closed": false}}, {"repo_name": "bitovi/funcunit", "issue_id": 56, "url": "https://github.com/bitovi/funcunit/issues/56", "title": "Sometimes click() method gives an error.", "contents": "Issue by rinatio from Tuesday Oct 01, 2013 at 18:18 GMT\nOriginally opened as https://github.com/bitovi/funcunit.js/issues/20\n\nAn error says: \"Uncaught TypeError: Cannot read property 'left' of undefined \"", "createdAt": "2013-10-10T19:18:00Z", "updatedAt": "2014-01-16T19:02:49Z", "closedAt": "2013-11-01T19:33:13Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "nconfort", "company": null}], "comments_count": 6, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-10T19:18:01Z", "contents": "Comment by alexisabril from Tuesday Oct 01, 2013 at 18:48 GMT\n\nDo you have a test case showing this issue? I've seen this sometimes with loaders such as Steal/Require, when the setup/teardown methods are called out of order.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-10T19:18:01Z", "contents": "Comment by rinatio from Tuesday Oct 01, 2013 at 19:18 GMT\n\nWe use angular.js in the app itself. There's no steal/require in the app, nor in test page. I'll try to create a showcase tomorrow or this week", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-10T19:18:02Z", "contents": "Comment by alexisabril from Tuesday Oct 01, 2013 at 19:25 GMT\n\nAwesome! I'd love to see this case to provide a fix.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:33:13Z", "contents": "Closing issue as non-descript. @rinatio, feel free to open a new issue once a test case is ready!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "nconfort", "authorAssociation": "NONE", "createdAt": "2014-01-16T17:22:37Z", "contents": "Is there a fix for this? I am getting same issue as original poster image attachment..\nFuncUnit click() works only sometimes.. and I am also trying to select a button that does not have a set ID\nF(\"#topbtnPanel .pdrButton\").click();\nthere is a unique div topbtnPanel and the class of the button is pdrButton.. is this why it isn't clicking 100% of the time?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-01-16T19:02:49Z", "contents": "@nconfort Can you open a new issue, providing a breaking test case, with the markup you're using(jsfiddle, etc are applicable if possible)? Also, which browser/version you're using. Thanks!", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 57, "url": "https://github.com/bitovi/funcunit/issues/57", "title": "Question: how to access jQuery for new opened window", "contents": "Issue by rinatio from Tuesday Oct 01, 2013 at 18:44 GMT\nOriginally opened as https://github.com/bitovi/funcunit.js/issues/21\n\nSometimes I'd like to use jQuery instead of F to execute some code in the \"test app window\" after F.open(). How can I access it? I guess F.win.$ refers to the app's jQuery, not F.jQuery, but F.jQuery executes inside qUnit window. I know I can use\nF.jQuery('selector', F.win.document)\n\nbut is there something simpler? A shortcut?", "createdAt": "2013-10-10T19:18:02Z", "updatedAt": "2016-10-31T23:05:49Z", "closedAt": "2016-10-31T23:05:49Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "simoami", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 5, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-10T19:18:02Z", "contents": "Comment by alexisabril from Tuesday Oct 01, 2013 at 18:49 GMT\n\nWhat code would you like to execute in the test window?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-10T19:18:03Z", "contents": "Comment by rinatio from Tuesday Oct 01, 2013 at 19:14 GMT\n\nThis code:\nF('select[name=\"template\"] option:contains(\"Space Class\")')\n    .prop('selected', true).trigger('change');\n\nGives me an error:\n\nWhile this code:\nF.wait(500, function() {\n    F.win.$('select[name=\"template\"] option:contains(\"Space Class\")')\n        .prop('selected', true).trigger('change')\n})\n\ndoes what I need.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-10T19:18:03Z", "contents": "Comment by alexisabril from Tuesday Oct 01, 2013 at 19:24 GMT\n\nI'm curious to know if using the following code would still work:\nF.wait(500, function() {\nF('select[name=\"template\"] option:contains(\"Space Class\")')\n.prop('selected', true).trigger('change')\n});\nMy suspicion is that the selector isn't found until after 500ms. Also, this touches on the purpose of FuncUnit. Typically we approach this from a user perspective(eg: clicking on an option). A user wouldn't be able to set the property of an option, they would just know to perform some action such as a click, drag, etc.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "simoami", "authorAssociation": "NONE", "createdAt": "2013-12-09T00:21:47Z", "contents": "A user wouldn't be able to set the property of an option, they would just know to perform some action such as a click, drag, etc.\n\nI totally agree with the statement. When I presented FuncUnit to our internal team, some of the questions touched on best practices rather than FuncUnit's capabilities.\n\"The expected behavior should be related to the business value (something that a user would normally be exposed to, such as a report, user interface or message) and NOT something that is deeply buried inside it.\"", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T23:05:49Z", "contents": "Given the age of this latest comment, I'm going to assume that this has been resolved.  If it has not, please re-open.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 58, "url": "https://github.com/bitovi/funcunit/issues/58", "title": "FuncIt IDE no longer working", "contents": "Hi Everybody,\nI am comparatively new to FuncUnit. In my organization we have been using FuncUnit for over a year now. We have been using Funcit IDE to generate test scripts for us. But it no longer seems to be working.Is the Funcit IDE no longer supported? Any help would be appreciated.", "createdAt": "2013-10-15T17:34:44Z", "updatedAt": "2017-07-25T19:06:01Z", "closedAt": "2013-10-15T17:39:24Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "newToFuncUnit", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "newToFuncUnit", "company": null}, {"login": "alexisabril", "company": "Aquil.io"}, {"login": "debajyoti3061", "company": null}], "comments_count": 3, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-10-15T17:39:24Z", "contents": "Hey @newToFuncUnit,\nFuncIt is actually undergoing a massive project overhaul. As the original version was an alpha version(and unsupported), we've stopped hosting the script, however the project itself is still available via: https://github.com/jupiterjs/funcit", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "newToFuncUnit", "authorAssociation": "NONE", "createdAt": "2013-10-15T17:43:48Z", "contents": "Thanks for the quick reply.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "debajyoti3061", "authorAssociation": "NONE", "createdAt": "2017-07-25T19:06:01Z", "contents": "How can i install this on the browser from github?", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 59, "url": "https://github.com/bitovi/funcunit/issues/59", "title": "Trick to verify that a <select> is empty?", "contents": "I need to verify that a <select> element is empty.\nWhen I call F(\"select.mine\").val();  I get null.\nWhen I call F(\"select.mine\").val(null);, I get an exception: \"TypeError: Cannot read property 'timeout' of null\".\nI can do F(\"select.mine option:selected\").missing(); as an alternative, but the the first one looks like a bug. Should .val([expected]) be updated to allow null?", "createdAt": "2013-10-31T18:51:01Z", "updatedAt": "2013-11-01T19:26:57Z", "closedAt": "2013-11-01T18:54:25Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "geekytime", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "geekytime", "company": "@savvyapps "}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 2, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T18:54:25Z", "contents": "FuncUnit does allow for regex validations on waits. So for this, you could the following:\nF('select.mine').val(/null/, 'nothing selected');\nI'm closing this as a non-issue, however I'm noting allowing nulls as possible input value for a future release.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "geekytime", "authorAssociation": "NONE", "createdAt": "2013-11-01T19:26:57Z", "contents": "Sounds good. Thanks!", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 60, "url": "https://github.com/bitovi/funcunit/issues/60", "title": "Possible problems with PhantomJS and F.open()?", "contents": "I've got funcunit almost working with grunt-contrib-jasmine (which runs jasmine tests in PhantomJS and reports back the results via the console), without Selenium, etc.\nI'm pretty sure that the problem I'm running into is with how FuncUnit and PhantomJS handle popup windows. I'm not getting much info back from Phantom, but I am getting this error:\n>> TypeError: 'undefined' is not an object (evaluating 'FuncUnit.win.document.documentElement') at\n>> http:/127.0.0.1:8000/static/bower_components/funcunit/dist/funcunit.js:2648 \n>> http:/127.0.0.1:8000/static/bower_components/funcunit/dist/funcunit.js:2657 \n>> http:/127.0.0.1:8000/static/bower_components/funcunit/dist/funcunit.js:4285 \n\nThere's some discussion about frames vs. popups on this page. Is there something I need to do to switch funcunit into 'modern Node/PhantomJS mode', so it can take advantage of Phantom's window.open(), instead of opening windows in an iframe?\nIs there any other information about trying to run FuncUnit tests via PhantomJS without using the 'official process'?\nThis discussion may also be of interest to anyone following #32.", "createdAt": "2013-11-01T16:18:10Z", "updatedAt": "2013-11-08T20:43:51Z", "closedAt": "2013-11-05T01:33:24Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "geekytime", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "geekytime", "company": "@savvyapps "}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 10, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:01:38Z", "contents": "@geekytime Which version of PhantomJS are you using? Originally, PhantomJS did not support window.open, however latest version do(as such the latest version of FuncUnit doesn't use the Phantom specific conditions).\nAlso, which version of FuncUnit are you using?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "geekytime", "authorAssociation": "NONE", "createdAt": "2013-11-01T19:21:37Z", "contents": "I'm using FuncUnit 2.0.3, and PhantomJS 1.9.1.\nI've been digging through the FuncUnit code trying to track this down. It does indeed make the call to window.open, so it's not an iframe issue.\nThe call to window.open succeeds, and a document exists, but FuncUnit.win.location.href for that window starts as about:blank, where I'd expect it to start with my supplied url. Then, after a few rounds of polling, FuncUnit.win.location.href abruptly changes to undefined, and the document also gets set to undefined.\nThe polling just keeps going after that, I'm guessing until something times out.\nI tried forcibly re-setting FuncUnit.win.location.href = url; after the call to window.open but that didn't help.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:40:57Z", "contents": "Do you have an isolated test case by chance?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "geekytime", "authorAssociation": "NONE", "createdAt": "2013-11-01T19:49:49Z", "contents": "Meh. No. Not handy. I'd have to send you my whole grunt project and everything, which I'm not sure I've got time to do.\nAre these versions of FuncUnit and PhantomJS expected to work properly together? If I create a Jasmine test harness page that runs in Chrome and Firefox, should I be able to simply open the same page in PhantomJS and have it run there, too?\nIs there any other configuration or shimming/polyfilling that I should be doing to make FuncUnit more Phantom-friendly?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "geekytime", "authorAssociation": "NONE", "createdAt": "2013-11-01T19:52:18Z", "contents": "For what it's worth, I've run the same basic tests in CasperJS, so I know my app works in PhantomJS okay...", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-01T19:58:22Z", "contents": "FuncUnit is geared to be Phantom compliant at this point, without any modification to your tests. However, I don't doubt that there could be a bug with specific setups. I'll leave this case open for the moment, in the event we can create an isolated test.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "geekytime", "authorAssociation": "NONE", "createdAt": "2013-11-05T01:24:57Z", "contents": "I created a isolated test case, but it worked fine on my machine. I guess it's too watered down from my real test. When I have time, I'll try adding bits of my app config until I can replicate the problem. Thanks for your patience.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-05T01:33:24Z", "contents": "No worries at all. I'll close this case for the moment, but once you have a failing test, be sure to reference this issue and we'll be sure to take a look.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "geekytime", "authorAssociation": "NONE", "createdAt": "2013-11-08T19:47:39Z", "contents": "I've tried several tricks to create an isolated test case, and I still can't duplicate this issue without my full developer setup. However, I was using PhantomJS for another project without FuncUnit, and I came across a scenario where I had closed a few popup windows, but still had references to the window objects. The window objects had devolved from DOMWindows into simple objects that just looked like: {closed:true}.\nI haven't figured out exactly how it's happening, but I believe this is what is causing my problems with FuncUnit. I think it's got a reference to an object that it thinks is a DOMWindow, but it is actually one of these closed objects.\nI'll keep digging around, but thought this discovery was worth sharing.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-08T20:43:51Z", "contents": "@geekytime No worries! Thanks for the notes. I'm keeping this issue closed for the moment, but I'm noting it for additional testing on our end as well to try and locate the issue.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 61, "url": "https://github.com/bitovi/funcunit/issues/61", "title": "Back to back opens with hash", "contents": "", "createdAt": "2013-11-02T01:20:37Z", "updatedAt": "2016-10-31T22:59:34Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p4"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 62, "url": "https://github.com/bitovi/funcunit/issues/62", "title": "Drag offset", "contents": "", "createdAt": "2013-11-02T01:22:59Z", "updatedAt": "2017-06-20T19:12:00Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "kdillon", "company": "MathWorks"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "kdillon", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-06-20T19:12:00Z", "contents": "My team has also run into this recently.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p4"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 63, "url": "https://github.com/bitovi/funcunit/issues/63", "title": "Cached selectors don't re-query the DOM", "contents": "", "createdAt": "2013-11-02T01:31:11Z", "updatedAt": "2016-10-31T22:52:37Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 4, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "simoami", "company": null}, {"login": "michalbe", "company": "@michalbe"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 3, "comments_data": [{"authorLogin": "simoami", "authorAssociation": "NONE", "createdAt": "2013-12-10T01:09:05Z", "contents": "is this fixed? I think I hit the same issue, where I have:\nF('.buttoncontainer button:enabled').visible().click();\n\nThe button is initially disabled, but doesn't get clicked when it becomes enabled.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-12-10T04:04:44Z", "contents": "@simoami That actually looks like a separate issue. Can you file a new issue with a full description of what you're seeing?\nThe cache issue does involve chaining, however in a different context:\nvar foo = F('.foo'); //some element with class \"foo\" exists on the page, so the collection is length === 1\n$('.foo').remove(); //some action that removes the element from the DOM\nfoo.missing(); //since the element is gone, this should pass the assertion, however the cached collection still has length === 1. missing() and other waits will need to re-query the DOM for $('.foo')", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "simoami", "authorAssociation": "NONE", "createdAt": "2013-12-10T14:58:53Z", "contents": "Hi @alexisabril\nMy bad, false alert here. I was testing FuncUnit against ExtJS and realized that buttons are disabled by a class selector, not but dom attribute...A style class that makes the button look as if it was set to disabled.\nThanks for this great framework.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "p3"], "milestone": {"id": "MDk6TWlsZXN0b25lNDUyMDY3", "title": "v2.1", "description": "", "createdAt": "2013-10-10T19:43:01Z", "dueOn": null, "number": 2, "closed": false}}, {"repo_name": "bitovi/funcunit", "issue_id": 64, "url": "https://github.com/bitovi/funcunit/issues/64", "title": "F.win not found", "contents": "Hi, we are working on simple framework for UI testing based on Jasmine and Funcunit and currently we need to do some tricks in FF profile via karam-firefox-launcher to avoid FuncUnit to fail with 'F.win not found' error.\nYou can look at the failing conditions here:\nhttps://github.com/NastassiaOsipchyk/JsUiFramework\nOr at our trick here:\nkarma-runner/karma-firefox-launcher#14\nI saw some fragment of code that should catch the case when popups are blocked, but it doesn't.\nCould you make some fix so I don't need to trick firefox-launcher or provide some working example how you catch and drive browser?", "createdAt": "2013-11-06T11:00:27Z", "updatedAt": "2013-11-08T09:55:21Z", "closedAt": "2013-11-06T20:27:00Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "andrei-khveras", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "andrei-khveras", "company": "EPAM Systems"}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 2, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-11-06T20:27:00Z", "contents": "Hey @andrei-khveras, this is actually a bit out of FuncUnit's scope. We do attempt to open a new window when F.open() is used, however if a browser setting/pop up blocker is used, we don't actually have any access to disable that functionality. A condition to remove the error would be possible, but then the test would fail regardless(as no selector would find anything on the non-existent window).", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "andrei-khveras", "authorAssociation": "NONE", "createdAt": "2013-11-08T09:55:21Z", "contents": "Thanks!", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 65, "url": "https://github.com/bitovi/funcunit/issues/65", "title": "F.size() parameter handling issue", "contents": "In getters.js (line 444), the code reads:\nif(typeof timeout == 'function'){\n    success = timeout;\n    message = success; // <- previous value of 'success' is already wiped out by previous statement\n    timeout = undefined;\n}\n\nNotice that the message is set to the handler function instead of a string. What you want is:\nif(typeof timeout == 'function'){\n    message = success; // <- first get the message from the success property\n    success = timeout; // <- then set the success to the handler\n    timeout = undefined;\n}", "createdAt": "2013-12-04T17:29:13Z", "updatedAt": "2013-12-04T22:35:49Z", "closedAt": "2013-12-04T19:31:15Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "simoami", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "simoami", "company": null}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 2, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-12-04T19:32:00Z", "contents": "@simoami Great catch! This'll make it into a 2.0.5 patch if 2.1 is delayed.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "simoami", "authorAssociation": "NONE", "createdAt": "2013-12-04T22:35:49Z", "contents": "Thanks for covering this so quickly!", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug"], "milestone": {"id": "MDk6TWlsZXN0b25lNDUyMDY3", "title": "v2.1", "description": "", "createdAt": "2013-10-10T19:43:01Z", "dueOn": null, "number": 2, "closed": false}}, {"repo_name": "bitovi/funcunit", "issue_id": 66, "url": "https://github.com/bitovi/funcunit/issues/66", "title": "F.wait() parameter handling issue", "contents": "Hi Alex,\nI was looking at:\nwaits.js (line 274)\nwait: function( checker, timeout, success, message ) {\n    if(typeof checker === \"number\"){\n        timeout = checker;\n        FuncUnit.wait(timeout, success)\n        return this;        \n    } else {\n        return this.size(checker, timeout, success, message)\n    }\n},\n\nIf F().wait() was called in the context of a timer wait, as implied by typeof checker === \"number\" then the call signature is expected to be: F('selector').wait(1234, successFn)\nAccording to my example, the mapping is as follows:\nchecker -> 1234\ntimeout -> successFn\nsuccess -> undefined\nmessage -> undefined\nSo the expected internal call is: FuncUnit.wait(checker, timeout)\nBut in your logic you are using the variable success for the success handler instead of timeout which holds the success handler.\nThis is the suggested fix:\nwait: function( checker, timeout, success, message ) {\n    if(typeof checker === \"number\") {\n        success = timeout;\n        timeout = checker;\n        FuncUnit.wait(timeout, success);\n        return this;        \n    } else {\n        return this.size(checker, timeout, success, message)\n    }\n},", "createdAt": "2013-12-08T00:10:26Z", "updatedAt": "2016-10-31T22:48:37Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "simoami", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "simoami", "company": null}, {"login": "alexisabril", "company": "Aquil.io"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-12-10T03:59:16Z", "contents": "@simoami Great catch! This API actually needs to change as checker should not allow for being a number or a function, but rather just a function. We need to require a few params, as if everything is optional, the following can occur:\nF('..').wait(function() {\n//this could be success or checker by the current definition\n});\nI'll bounce this off of the team to decide on the best approach going forward.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "p2"], "milestone": {"id": "MDk6TWlsZXN0b25lNDUyMDY3", "title": "v2.1", "description": "", "createdAt": "2013-10-10T19:43:01Z", "dueOn": null, "number": 2, "closed": false}}, {"repo_name": "bitovi/funcunit", "issue_id": 67, "url": "https://github.com/bitovi/funcunit/issues/67", "title": "Request for additional waits: checked(), selected(), disabled() ...etc.", "contents": "While automating an internal application, I found myself having to write workarounds for some basic use cases. It's common that the user would want to check the state of form elements when automating UI or wait for the desired state condition to take place. One such case is the state of checkboxes.\nI suggest adding the following waits to avoid the need for workarounds:\n\nchecked()\nselected()\ndisabled()\ncontainsHtml() (in contrast to .html() this is for partial matching)\ncontainsText() (in contrast to .text() this is for partial matching)\n\nLet me know what you think!", "createdAt": "2013-12-08T23:37:55Z", "updatedAt": "2016-10-31T22:31:23Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "simoami", "authorAssociation": "NONE", "participants_count": 4, "participants_data": [{"login": "simoami", "company": null}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "alexisabril", "company": "Aquil.io"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 5, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2013-12-09T01:58:13Z", "contents": "I believe you can add \":checked\" as part of your selector:\nF(\"[name=over21]:checked\").exists()\nAnd other similar custom jQuery selector extensions.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "simoami", "authorAssociation": "NONE", "createdAt": "2013-12-09T02:09:55Z", "contents": "that's what I meant by workaround. There are selectors like :visible and :hidden, yet FuncUnit adds visible() and invisible() which is great.\njasmine-jquery has such wrappers for reference.\nMy request is for FuncUnit to be as intuitive as possible and to allow for simple actions to be performed without resorting to special selectors. Following the BDD principles, I want to see more stakeholders (less tech-savvy) write functional tests, or at least be able to read them easily.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2013-12-09T02:14:41Z", "contents": "I'm not opposed to having form or other generally used waits. containsHtml() seems a bit overkill though, as this comes a bit into conflict with ordinary selector usage:\nF('.parent .child') vs F('.parent').containsHtml('<div class=\"child\">')\n\nI'm in favor of a containsText(), perhaps written as .contains(), as :contains(text) is a commonly used jQuery selector.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "simoami", "authorAssociation": "NONE", "createdAt": "2013-12-09T02:58:36Z", "contents": "Until someone finds a real use case for it, I'm not too tied to adding containsHtml(). But the others make sense imo.\nThanks for considering.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "simoami", "authorAssociation": "NONE", "createdAt": "2013-12-10T15:06:32Z", "contents": "similar to disabled() is enabled(), to avoid having to pass a boolean flag to disabled().\nAlso, here's a separate thought for better language support (similar to expect):\nF().enabled();\nF().hasClass('classname', false);\n\nwhy not add a 'not' switch, so one can read:\nF().not.enabled();\nF().not.hasClass('classname');\n\nnot would only have effect on getters.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["enhancement", "p4"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 68, "url": "https://github.com/bitovi/funcunit/issues/68", "title": "Package jQuery internally", "contents": "No reason not to have jQuery internal to the dist funcunit as opposed to requiring users to have it on the page.", "createdAt": "2013-12-24T23:51:44Z", "updatedAt": "2016-11-01T15:13:16Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "skamaraj", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "skamaraj", "authorAssociation": "NONE", "createdAt": "2014-11-24T15:13:45Z", "contents": "This will be great to have", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T22:39:34Z", "contents": "I believe this was resolved via #129.  Please reopen if not.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["enhancement", "p2"], "milestone": {"id": "MDk6TWlsZXN0b25lNDUyMDY3", "title": "v2.1", "description": "", "createdAt": "2013-10-10T19:43:01Z", "dueOn": null, "number": 2, "closed": false}}, {"repo_name": "bitovi/funcunit", "issue_id": 69, "url": "https://github.com/bitovi/funcunit/issues/69", "title": "Basic click does not work in IE", "contents": "am running a basic funcunit test as below for the test.html.. which has only\n<html><body><div>Test</div></body></html>\nmodule('test', {\n  setup: function() {\n    F.open('test.html');\n  }\n});\n\n//test to verify that head, body are not empty\n\ntest(\"Page render Test : Head, Body and Header message\", function(){\n ok( F(\"body\").size(), \"There are elements in the Head\"); //head is not empty \n F('body').click();\n});\nThis gives the below error\n1.There are elements in the Head\n2.Unspecified error.Source: /j/test/resources/jquery.js:6110\n3.Could not click 'body'Source: at assertOK (/j/test/resources/funcunit.js:2720:4)\nat Anonymous function (/j/test/resources/funcunit.js:4243:8)", "createdAt": "2014-01-16T16:18:50Z", "updatedAt": "2016-10-31T23:13:30Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "raviviswanathan", "authorAssociation": "NONE", "participants_count": 4, "participants_data": [{"login": "raviviswanathan", "company": null}, {"login": "alexisabril", "company": "Aquil.io"}, {"login": "daffl", "company": "@feathersjs and @bidalihq"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 11, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-01-16T16:22:38Z", "contents": "Awesome, thanks for the repost. Can you provide which version of IE you're using?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "raviviswanathan", "authorAssociation": "NONE", "createdAt": "2014-01-16T16:23:10Z", "contents": "IE 10", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "raviviswanathan", "authorAssociation": "NONE", "createdAt": "2014-01-16T16:29:06Z", "contents": "this works fine in Firefox and chrome, but not in IE", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "raviviswanathan", "authorAssociation": "NONE", "createdAt": "2014-01-16T16:37:58Z", "contents": "Have i provided the enough input?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "raviviswanathan", "authorAssociation": "NONE", "createdAt": "2014-01-16T17:52:23Z", "contents": "Please HELP...", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-01-16T19:00:24Z", "contents": "@raviviswanathan I'll take a look at this issue asap.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "raviviswanathan", "authorAssociation": "NONE", "createdAt": "2014-01-17T17:24:51Z", "contents": "Just wanted to check if it a bug in Funcunit or i am missing something?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-01-17T20:40:50Z", "contents": "One thing that you should change is probably\nok( F(\"body\").size(), \"There are elements in the Head\"); //head is not empty \nTo\nF(\"body\").size(\"There are elements in the Head\")\nWhich might fix your other issue as well.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "raviviswanathan", "authorAssociation": "NONE", "createdAt": "2014-01-21T17:22:45Z", "contents": "I get the below error after i changed to F(\"body\").size(\"There are elements in the Head\")\nwaiting for size on body !== There are elements in the body, actual value: 1\nSource:\nFuncUnit.unit.assertOK@http://localhost:8080/Quoting/j/test/resources/funcunit.js:2720\nFuncUnit.makeFunc/FuncUnit.prototype[fname]/<.error@http://localhost:8080/Quoting/j/test/resources/funcunit.js:3944\nFuncUnit._done/</timer<@http://localhost:8080/Quoting/j/test/resources/funcunit.js:4241", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-01-21T22:25:42Z", "contents": "@raviviswanathan This is actually a jQuery bug outlined here: jquery/jquery@b414efd\nBasically, since FuncUnit is opening a new window, window points to the runner(funcunit page) while the element is referenced from the popup. IE10 isn't allowing that cross window communication. The bug is fixed in 1.11.x-beta.\nIn the interim, v2.1 will either contain a patched version of jQuery or 1.11(whichever is complete by v2.1 release).\nFor you're particular use case, if you download a beta release of 1.11 jQuery on the runner page your issue should be solved.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T22:45:29Z", "contents": "@alexisabril  We're using 1.11, now.  Can this be closed?", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "p2"], "milestone": {"id": "MDk6TWlsZXN0b25lNDUyMDY3", "title": "v2.1", "description": "", "createdAt": "2013-10-10T19:43:01Z", "dueOn": null, "number": 2, "closed": false}}, {"repo_name": "bitovi/funcunit", "issue_id": 70, "url": "https://github.com/bitovi/funcunit/issues/70", "title": "Create a way to clear an input", "contents": "I keep writing this over and over in tests:\n  F('input').type('[ctrl][a][ctrl-up][delete]foo');\nWould be nice if there was a FuncUnit.prototype.clear so you would just do:\nF('input').clear().type('foo');", "createdAt": "2014-02-20T16:44:08Z", "updatedAt": "2014-07-01T19:50:08Z", "closedAt": "2014-02-20T16:55:37Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "matthewp", "company": "Bitovi"}, {"login": "alexisabril", "company": "Aquil.io"}, {"login": "cruiser12", "company": null}], "comments_count": 6, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-02-20T16:51:03Z", "contents": "After your previous assert, you don't have to \"type\" to clear an input. You could just do:\nF('input').type('foo');\nF('div').exists('some wait', function() {\n    //we're in the success handler, so this wait has passed\n    F('input').val(''); //empty string, F is a sub of jQuery; you could also do this with just JS\n});", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-02-20T16:55:37Z", "contents": "You're right.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "cruiser12", "authorAssociation": "NONE", "createdAt": "2014-06-30T20:42:55Z", "contents": "Hi,\nis there a cross-browser-safe way to use .type() for saved form values?\ne.g.\nF(\"input[name='username']\").type('[ctrl][a][ctrl-up][delete]foo@bar');\nF(\"input[name='password']\").type('[ctrl][a][ctrl-up][delete]longpassword');\n\nthis works on Mac in Chrome but causes unpredictable behaviour in Safari, Firefox stores passwords, but doesnt prefill the input fields, so it cant cause trouble here.\nso i investigated safari behaviour, and it looks like that safari is loading the stored password values some time after $(document).ready into the input fields.\nso when adding a F.wait(1000) before, it works as aspected.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-06-30T20:45:42Z", "contents": "@cruiser12 Should be able  to do autocomplete=\"off\" on the <form> to prevent the passwords from being saved.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "cruiser12", "authorAssociation": "NONE", "createdAt": "2014-07-01T07:44:19Z", "contents": "but thats not a behaviour that is wanted, so i will not hardcode that into html, and turning it off afterwards by .attr( will not help. I found that the only safe way to do it with F.win.$(\"input[name='username']\").val('my_username') because\nF(\"input[name='username']\").val('my_username') also does not work in Chrome. Why that ?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-07-01T19:49:50Z", "contents": "You don't need to put it in your markup, make it part of the test. I do this kind of stuff all the time:\nF(function() {\n  $('form').attr('autocomplete', 'off');\n});\n\n// Do your test\n\nF(function() {\n  $('form').attr('autocomplete', 'on');\n});", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 72, "url": "https://github.com/bitovi/funcunit/issues/72", "title": "FuncUnit NPM module", "contents": "To follow up on the discussion if FuncUnit should be an NPM module started in #40 I propose the following:\nProvide FuncUnit itself (basically this repository) as an NPM module but additionally add a funcunit command line tool which lets you\n\nRun tests in different browsers (PhantomJS by default) on the command line using Testee\nInitialize the default HTML page plus the library\nProvide a server that gathers and runs all your tests\n\nFor example:\n\nfuncunit run module.test.js --lib mocha\n\nWill run the tests from module.test.js in PhantomJS using a default HTML test page with Mocha initialized (module.test.js has to be a valid Mocha test file of course) and report to the command line.\n\nfuncunit run *.test.js --lib qunit --browser firefox\n\nWill run all .test.js files in Firefox using a default HTML test page with QUnit initialized and report to the command line.\n\nfuncunit server *.test.js --lib jasmine\n\nWill start up a static webserver that when opened in a webbrowser will serve the default HTML page with Jasmine initialized and run all .test.js files in the current folder.\n\nfuncunit init test/index.html --lib mocha\n\nWill write the default HTML test page with Mocha and FuncUnit to test/index.html.", "createdAt": "2014-02-26T19:35:51Z", "updatedAt": "2016-10-31T22:22:22Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "daffl", "company": "@feathersjs and @bidalihq"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 3, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-02-26T19:39:20Z", "contents": "So is funcunit basically just sugar on top of testee? Or is it doing something differently? If it's just sugar I think it might be too much maintenance burden to be worth it.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-02-26T19:46:12Z", "contents": "Well the additional functionality is to provide a template HTML file for your tests and be able to generate and copy them.\nBasically when using the FuncUnit command line tool you just write your tests and don't need to maintain a separate test HTML file or have the libraries available (but you can initialize them if you want). Plus serving it on a static webserver will enforce writing decoupled tests.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-02-26T19:50:17Z", "contents": "Makes sense, \ud83d\udc4d", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 73, "url": "https://github.com/bitovi/funcunit/issues/73", "title": "Error: global leak detected: selector", "contents": "2.1.0-pre", "createdAt": "2014-03-07T05:00:08Z", "updatedAt": "2016-10-31T22:20:48Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "stevenvachon", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "stevenvachon", "company": null}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-03-07T17:33:56Z", "contents": "Probably should add jshint to the gruntfile.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 74, "url": "https://github.com/bitovi/funcunit/issues/74", "title": "Mocha's done() invoked with non-Error", "contents": "F(\"something\").exists(done);\nthrows an error. Must we really do this instead?:\nF(\"something\").exists( function(){ done() } );", "createdAt": "2014-04-09T13:25:07Z", "updatedAt": "2016-10-31T22:20:12Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "stevenvachon", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "stevenvachon", "company": null}, {"login": "daffl", "company": "@feathersjs and @bidalihq"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 7, "comments_data": [{"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-04-09T14:29:43Z", "contents": "The easiest way is probably adding it to the chain individually:\nF('something').exists('Something exists');\nF(done);", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "stevenvachon", "authorAssociation": "NONE", "createdAt": "2014-04-09T14:35:52Z", "contents": "hmm, that looks kind of confusing, though", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-04-09T15:07:58Z", "contents": "Well you could also\nF('something').exists('Something exists').then(done);\nWhat data is the F(\"something\").exists(done); callback getting?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "stevenvachon", "authorAssociation": "NONE", "createdAt": "2014-04-09T15:38:15Z", "contents": "It's a Mocha error with FuncUnit's argument data:\n[Log] [ (func.js, line 14)\nObject[1]\n0: something\ncontext: html\nframe: Object\nlength: 1\nprevObject: Object[1]\nselector: \"something\"\n__proto__: Object[0]\n]\nThe same issue occurs with F(\"something\").exists().then(done).", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-04-09T15:58:07Z", "contents": "Maybe we can have @alexisabril look into this.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "stevenvachon", "authorAssociation": "NONE", "createdAt": "2014-04-09T16:01:22Z", "contents": "It's possible that it's an issue in Mocha. I've opened this: mochajs/mocha#1187", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-04-09T16:11:08Z", "contents": "I don't think it is. If you call it with done(something) and something is not falsy the first argument of a callback will count as an error (just like any other Node callback).", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 75, "url": "https://github.com/bitovi/funcunit/issues/75", "title": "Mouse over", "contents": "Hi,\nWhen I execute the following piece of code:\nF('a:contains(\"Home\")').move('a:contains(\"Mail\")')\nI can see a red point moving from my Home link to my Mail link. But, it seems that the hover event is not triggered.\nCan you please tell me if move action can be used to trigger such action? I want simulate a user playing with a menu done in CSS and so using the :hover attribute.\nMy question is similar to this one: https://forum.javascriptmvc.com/topic/triggering-mouse-over-on-menu-items-to-display-sub-menu-items\nRegards,\nThibaut", "createdAt": "2014-04-09T14:37:04Z", "updatedAt": "2014-06-29T16:55:10Z", "closedAt": "2014-06-29T16:55:10Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "thibaut-sticky", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "thibaut-sticky", "company": null}, {"login": "matthewp", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-06-29T16:55:10Z", "contents": "Move will trigger a mouseover event, however it's not possible for a library to trigger :hover css pseudo classes.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 76, "url": "https://github.com/bitovi/funcunit/issues/76", "title": "Publish Func Unit to NPM", "contents": "Would it be possible to make FuncUnit published on NPM?\n\nWhy, you ask?\nBecause I have a test suite which runs using browserify, and FuncUnit is shimmed out to work with it. I'm making an installable NPM package that wraps FuncUnit (to make it promise-y) and it will have FuncUnit as a dep.", "createdAt": "2014-06-10T17:22:16Z", "updatedAt": "2016-10-31T17:11:27Z", "closedAt": "2016-10-31T17:11:26Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "kahnvex", "authorAssociation": "NONE", "participants_count": 6, "participants_data": [{"login": "kahnvex", "company": "@google"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "fresheneesz", "company": null}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "tamzinblake", "company": "@meetearnest "}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 7, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-06-29T16:55:59Z", "contents": "Can't you link directly to the git tarball?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "fresheneesz", "authorAssociation": "NONE", "createdAt": "2015-02-12T23:18:46Z", "contents": "Yes you can, but why not publish it on npm? With Browserify and WebPack, commonJS bundle creation is becoming much more widespread.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2015-02-12T23:58:25Z", "contents": "Yes, we can do this. Interested in helping?\nSent from my iPhone\n\nOn Feb 12, 2015, at 5:18 PM, fresheneesz notifications@github.com wrote:\nYes you can, but why not publish it on npm? With Browserify and WebPack, commonJS bundle creation is becoming much more widespread.\n\u2014\nReply to this email directly or view it on GitHub.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "fresheneesz", "authorAssociation": "NONE", "createdAt": "2015-02-13T00:51:05Z", "contents": "Helping.. publish it on npm? npm publish is all you need to do", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "tamzinblake", "authorAssociation": "NONE", "createdAt": "2015-02-13T00:55:06Z", "contents": "It's not quite ready.  At least needs a version in package.json, and probably a once-over to make sure it looks sane otherwise.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2015-02-13T01:32:49Z", "contents": "Yeah, we will probably structure it like: https://github.com/bitovi-components/bit-tabs.  This makes it easy to write in ES6 but export to AMD / CJS / etc.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T17:11:26Z", "contents": "https://www.npmjs.com/package/funcunit", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 77, "url": "https://github.com/bitovi/funcunit/issues/77", "title": "Proxy setup for Linux?", "contents": "The docs only cover setting up a Node.js proxy for debugging remote sites on Windows, and very loosely at that. How can I do the same for Linux, specifically Ubuntu 14.04?", "createdAt": "2014-07-01T19:46:45Z", "updatedAt": "2016-10-31T22:18:27Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alsoicode", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "alsoicode", "company": "LabCorp"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p2", "question", "website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 79, "url": "https://github.com/bitovi/funcunit/issues/79", "title": "F.type() on input elements which are disabled should fail.", "contents": "Hi there.\nI'm not sure if it is a bug or not, but why is it possible to \"type\" on an input-element which is disabled? My expectation is that it should fail on qunit. First of all you can't click on an element which is disabled, secondly you can't type on an input element which is disabled.\nSmall fiddle to test it out:\nhttp://jsfiddle.net/NvaJ8/2/\nThanks for any suggestions!", "createdAt": "2014-07-31T15:01:08Z", "updatedAt": "2016-10-31T22:17:54Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "NightkingCH", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "NightkingCH", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "NightkingCH", "authorAssociation": "NONE", "createdAt": "2014-12-14T23:15:12Z", "contents": "Any news about this issue?", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 80, "url": "https://github.com/bitovi/funcunit/issues/80", "title": "Mocha adapter failing tests time out", "contents": "Using the Mocha adapters, failing tests do show the error message in the console (as an uncaught error) but officially they time out. This causes after hooks not to run and all subsequent tests to fail.", "createdAt": "2014-08-07T21:25:59Z", "updatedAt": "2016-10-31T17:03:19Z", "closedAt": "2016-10-31T17:03:19Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "daffl", "company": "@feathersjs and @bidalihq"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T17:03:19Z", "contents": "Closing this because tests are passing, now.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 81, "url": "https://github.com/bitovi/funcunit/issues/81", "title": "Adapters should be separate from FuncUnit", "contents": "Jasmine has changed it's approach to async execution in v2. This modifies the jasmine-funcunit adapter to take a done() callback into account, as opposed to waitsFor(). This illustrates the need to have independent, versioned adapters so that we can support FuncUnit with any version of QUnit, Jasmine or Mocha without re-versioning FuncUnit itself.", "createdAt": "2014-08-14T02:19:01Z", "updatedAt": "2016-10-31T21:49:51Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 4, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "jitcoder", "company": "ByteCode Studios"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 4, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2014-08-14T02:24:31Z", "contents": "I'm not sure what you mean exactly.  How would you structure these adapters?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-08-14T02:26:49Z", "contents": "I'm thinking funcunit-jasmine, funcunit-qunit and funcunit-mocha respectively. I'm not 100% on how we should setup the dist though.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2014-08-14T15:19:29Z", "contents": "The dist should include all of them and be able to feature detect/version through each one.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "jitcoder", "authorAssociation": "NONE", "createdAt": "2015-05-06T23:48:36Z", "contents": "after hours of pain and suffering (PhantomJS, Jasmine, FuncUnit) I finally noticed that FuncUnit expects pre-jasmine 2.0 sync goodies. I agree 100% about the adapters being separate. Has this been implemented? I don't want to use an older version of jasmine...", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["enhancement", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 82, "url": "https://github.com/bitovi/funcunit/issues/82", "title": "Clicking button[type=button] shouldn't submit form when clicked", "contents": "Ran into this with my client. As it stands, if you have a form that looks something like this:\n<form>\n    <input type=\"text\">\n    <button type=\"submit\">Submit</button>\n    <button type=\"button\">Does it matter?</button>\n</form>\n\nAnd you try simulating a click on the button[type=button] it will submit the form. This is counter to the HTML spec wherein only a button[type=submit] or a button without a type submits a form (more can be read here - http://www.w3.org/TR/html-markup/button.html).", "createdAt": "2014-09-04T20:07:17Z", "updatedAt": "2016-10-31T21:47:40Z", "closedAt": "2016-10-31T21:47:40Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "imjoshdean", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "imjoshdean", "company": "Trunk Club"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 5, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-09-04T20:08:59Z", "contents": "Do browsers conform to the spec? I was thinking that they submit the form as well.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "imjoshdean", "authorAssociation": "NONE", "createdAt": "2014-09-04T20:12:11Z", "contents": "Aye, I got it working as expected (at least) in Webkit/Blink/Firefox. Handy dandy little form here - http://jsfiddle.net/9ec3m3a2/", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-09-04T20:14:32Z", "contents": "Probably a Syn bug in that case: https://github.com/bitovi/syn/blob/3d551edc23d6b81665f7e53afd63916472d4aeab/src/mouse.js#L49", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "imjoshdean", "authorAssociation": "NONE", "createdAt": "2014-09-04T20:16:32Z", "contents": "I agree. I patched it in my client's copy of FuncUnit with\nif (!(Syn.support.clickSubmits) && (nodeName == \"input\" && type == \"submit\") || nodeName == 'button' && type == \"submit\" ) {\n\nCould probably be written better as:\nif (!(Syn.support.clickSubmits) && ((nodeName == \"input\" || nodeName == 'button') && type == \"submit\" ) ) {", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T21:47:36Z", "contents": "bitovi/syn#63 Fixed this issue.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 83, "url": "https://github.com/bitovi/funcunit/issues/83", "title": "FuncUnit not compatible with new StealJS", "contents": "FuncUnit has errors all over the place when trying to use with new StealJS:\n\nsteal(\"funcunit/qunit/qunit.css\") needs to be steal(\"funcunit/qunit/qunit.css!\")\nsteal.then() doesn't work\nsteal.bind('ready') doesn't work\nsteal.config() throws an error\nsome weird ordering of dependencies doesn't seem to work the same way anymore\n\nI've hacked my way through to fix tests for a legacy project, gotten much of the way, but are you guys actually interested in supporting a PR for it? As I'd need help to get it all the way:\n\nTests don't seem to be as isolated as they used to (at least I found a test suite that had failing tests, but those tests would pass if run individually)\nIt's not backwards compatible with legacy steal - that would be really tricky to do", "createdAt": "2014-09-19T15:37:05Z", "updatedAt": "2016-05-13T22:20:53Z", "closedAt": "2016-05-13T22:20:53Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "asavoy", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "asavoy", "company": null}, {"login": "matthewp", "company": "Bitovi"}], "comments_count": 6, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-09-19T15:38:19Z", "contents": "Hey @asavoy not sure what you mean. I'm definitely using Steal and FuncUnit in an existing project and it works. Are you talking about FuncUnit's own tests?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-09-19T15:40:08Z", "contents": "Oh, you're loading FuncUnit using Steal.. why though?   To answer your question, yes it will be eventually updated, I'm not sure what the schedule is for that though.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "asavoy", "authorAssociation": "NONE", "createdAt": "2014-09-19T15:50:58Z", "contents": "This is a project that started from JavascriptMVC, which had generators that wrote tests this way. Looking at the FuncUnit site, tests there aren't done with Steal, it appears to use a steal-less version of FuncUnit... I suppose I'll have to change to that instead.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-09-19T15:53:09Z", "contents": "Hey @asavoy we definitely want to upgrade to the new Steal, I hope I didn't make you think otherwise. It just probably wouldn't be able to be merged until the new major release because it's a breaking change (maybe? is it?).  But a PR would definitely be welcome.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-04-06T17:00:54Z", "contents": "Will probably start working on this this week.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-05-13T22:20:53Z", "contents": "This is done.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 87, "url": "https://github.com/bitovi/funcunit/issues/87", "title": "Remove steal conditions", "contents": "There's a few places where we're tight coupling FuncUnit to StealJS:\nvar fullPath = FuncUnit.getAbsolutePath(path);\n\nThis breaks in applications that are using new Steal as there is no longer steal.isReady(amongst other API changes).", "createdAt": "2014-11-12T21:57:16Z", "updatedAt": "2016-11-01T15:52:58Z", "closedAt": "2016-11-01T15:28:19Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 3, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-04-08T13:18:29Z", "contents": "getAbsolutePath doesn't use Steal.  Steal is only used in determining when the page is loaded, but conditionally so it still works without.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T21:44:52Z", "contents": "@matthewp @alexisabril Is there still an issue, here?  If not, can we close this issue?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-11-01T15:52:58Z", "contents": "Yeah, fine to close.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 88, "url": "https://github.com/bitovi/funcunit/issues/88", "title": "FuncUnit registers itself at window scope. Can we have an AMD compliant FuncUnit which can be eaily loaded without steal.js", "contents": "", "createdAt": "2014-11-24T15:15:25Z", "updatedAt": "2016-11-01T15:15:17Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "skamaraj", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "skamaraj", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 89, "url": "https://github.com/bitovi/funcunit/issues/89", "title": "When is the next version of funcunit 2.1 expected to be released?", "contents": "", "createdAt": "2014-12-01T20:37:36Z", "updatedAt": "2016-10-31T21:37:39Z", "closedAt": "2016-10-31T21:37:39Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "skamaraj", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "skamaraj", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T21:37:39Z", "contents": "https://www.npmjs.com/package/funcunit - v3.1.0-pre.2 as of this comment.  Closing.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 90, "url": "https://github.com/bitovi/funcunit/issues/90", "title": ".type() fails on input[type=number] fields in Chrome", "contents": "Trying to type in a numeric input is throwing an error on Chrome:\n\nJSFiddle example: here\nIt works fine in Fx for now, but according to WHATWG HTML Living Standard, selection is only permitted with text/search, URL, tel and password inputs, so we should expect this to fail in all the browsers in the near future.", "createdAt": "2014-12-18T11:53:01Z", "updatedAt": "2017-01-25T15:20:27Z", "closedAt": "2017-01-25T15:20:23Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "michalbe", "authorAssociation": "CONTRIBUTOR", "participants_count": 5, "participants_data": [{"login": "michalbe", "company": "@michalbe"}, {"login": "zedd45", "company": "Keen Concepts"}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "ccummings", "company": "Aquil.io"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "michalbe", "authorAssociation": "CONTRIBUTOR", "createdAt": "2014-12-18T11:59:35Z", "contents": "Maybe we can temporarily change type of the input to text and change it back in teardown?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "zedd45", "authorAssociation": "NONE", "createdAt": "2015-03-31T21:23:30Z", "contents": "I'm having the same issue with type=emailand type=number on chrome 41.\n@moschel can confirm this.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 91, "url": "https://github.com/bitovi/funcunit/issues/91", "title": "attr can take a Regular Expression", "contents": "This is undocumented but works, should be documented: http://funcunit.com/docs/FuncUnit.prototype.attr.html", "createdAt": "2015-01-12T15:44:07Z", "updatedAt": "2016-10-31T21:32:54Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["documentation", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 92, "url": "https://github.com/bitovi/funcunit/issues/92", "title": "npm install - error missing version", "contents": "Hi\nI listed \"bitovi/funcunit\" as \"devDependency\" in my package.json.\nWhen I run \"npm install\" I get an error regarding missing version.\nPlease include \"version\" it in your package.json.\nThanks", "createdAt": "2015-01-19T21:39:25Z", "updatedAt": "2016-10-31T17:01:21Z", "closedAt": "2016-10-31T17:01:21Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "nimaai", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "nimaai", "company": "www.zhdk.ch"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T17:01:21Z", "contents": "https://github.com/bitovi/funcunit/blob/master/package.json#L3", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 93, "url": "https://github.com/bitovi/funcunit/issues/93", "title": "Funcunit does not work properly under Phantomjs", "contents": "Hello, is funcunit still active? This is a great tool, but I have a problem when using it under phantomjs.\nHere is the sample code in demo.test.html file\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Using QUnit Tests</title>\n    <script src=\"/lib/jquery/jquery-1.9.1.js\"></script>\n    <script src=\"/lib/qunit-1.17.1.js\"></script>\n    <script src=\"/lib/funcunit.js\"></script>\n    <link rel=\"stylesheet\" href=\"/css/qunit-1.17.1.css\">\n</head>\n<body>\n<div id=\"qunit\"></div>\n<div id=\"qunit-fixture\"></div>\n<script src=\"specs/demo.test.js\"></script>\n</body>\n</html>\nThe demo.test.js file is very simple.\nmodule('Some Demo tests', {\n  beforeEach: function() {\n\n  // F.open('/'); \n   console.log('First Demo BeforeEach Called');\n    return true;\n\n  },\n  afterEach: function() {\n    return;\n  }\n});\n\ntest('A simple demo with FuncUnit', function() {\n  F('body').visible('it shows the body');\n});\nIt works fine in Chrome 39 but does not work in Phantomjs 1.9.8.\nI'm using the grunt-contrib-qunit to start Phantomjs to test this. It always timed out.\nIf I add F.open('/') in the beforeEach function it works. Please help me find out what causes this problem? Is there any workaround?", "createdAt": "2015-01-22T05:26:38Z", "updatedAt": "2016-10-31T21:32:08Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "php-max", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "php-max", "company": "Shanghai Eyan Consulting"}, {"login": "Mikular", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "Mikular", "authorAssociation": "NONE", "createdAt": "2015-05-28T15:16:12Z", "contents": "Hey there, did you get any further with this? I think I might be experiencing a similar issue (see here).", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "php-max", "authorAssociation": "NONE", "createdAt": "2015-05-28T15:41:47Z", "contents": "No, FuncUnit just looks very sexy. but very hard to debug.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 94, "url": "https://github.com/bitovi/funcunit/issues/94", "title": "Funcunit tests does not fully passed under Phantomjs", "contents": "Hi, I just forked funcunit. but find a problem. All funcunit tests can pass in latest chrome. But when I try to automate them using phantomjs. It failed at test \"Drag To\" (syn_test.js). I spent hours on this issue but cannot figure out what is the cause.\nI'm using grunt and  have tried testee andgrunt-contrib-qunit, both return same errors. It seems the dropover event listener never fired. Please help me find the causes of this problem. Thank you!", "createdAt": "2015-01-22T05:34:01Z", "updatedAt": "2016-10-31T21:31:47Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "php-max", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "php-max", "company": "Shanghai Eyan Consulting"}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 3, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2015-01-22T06:15:20Z", "contents": "This is likely a problem with Syn.\nSent from my iPhone\n\nOn Jan 21, 2015, at 11:34 PM, PHP-Max notifications@github.com wrote:\nHi, I just forked funcunit. but find a problem. All funcunit tests can pass in latest chrome. But when I try to automate them using phantomjs. It failed at test \"Drag To\" (syn_test.js). I spent hours on this issue but cannot figure out what is the cause.\nI'm using grunt and have tried testee andgrunt-contrib-qunit, both return same errors. It seems the dropover event listener never fired. Please help me find the causes of this problem. Thank you!\n\u2014\nReply to this email directly or view it on GitHub.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "php-max", "authorAssociation": "NONE", "createdAt": "2015-01-22T07:06:08Z", "contents": "Does it mean I have to post an issue to Syn issues?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "php-max", "authorAssociation": "NONE", "createdAt": "2015-01-22T07:45:17Z", "contents": "I change the test drag to to\ntest(\"Drag To\", function(){\n    F.open(\"//test/drag/drag.html\", function(){\n        console.log('here is the drag to');\n    });\n    F('#drag').visible(function(){\n        console.log('Origin Position',F('#drag')[0].offsetTop); // ==> 118 in chrome, 127 in phantomjs\n    },'We see the dragger!');\n\n    F(\"#drag\").drag(\"#drop\",function(){\n        console.log('#drag moved',this[0].offsetTop); // ==> 150 in chrome, 127 in phantomjs\n        console.log(F('#clicker').size());\n    });\n});\nSo the drag div does not moved in phantomjs, is this info helpful?", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 97, "url": "https://github.com/bitovi/funcunit/issues/97", "title": "FuncUnit seems broken with the very first example", "contents": "I downloaded https://raw.githubusercontent.com/bitovi/funcunit/v2.0.4/dist/funcunit.js from the frontpage of the website and tried out the following example in Chrome:\n<body>\n    <div id='a'>a</div>\n\n</body>\n\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js\"></script>\n<script src=\"FuncUnit.js\"></script>\n\n<script>\n    $(\"#a\").click(function() {\n        console.log(\"ok\")\n    })\n\n    F('#a').click();\n\n</script>\n\nI get the error: Uncaught TypeError: Cannot read property 'pauseTest' of undefined  FuncUnit.js:4206\nI also noticed that there is a different link to funcunit.js in the guide ( http://funcunit.com/guides/started.html ), the link being  http://funcunit.com/dist/latest/funcunit.js . I would assume the link there and on the front page should point to the same place - tho it does look like they happen to be the same file right now.", "createdAt": "2015-02-12T23:31:22Z", "updatedAt": "2015-02-12T23:37:59Z", "closedAt": "2015-02-12T23:37:41Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "fresheneesz", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "fresheneesz", "company": null}, {"login": "justinbmeyer", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2015-02-12T23:32:57Z", "contents": "Does FuncUnit work without a test suite like QUnit being in the page?  Where did you get this example from?\ncc @alexisabril", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "fresheneesz", "authorAssociation": "NONE", "createdAt": "2015-02-12T23:37:41Z", "contents": "Ah, I missed the note that QUnit or Jasmine are required. I'm following the get started guide, but didn't expect dependencies to be listed before the bower install instructions. The example zip file helped me figure it out.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 98, "url": "https://github.com/bitovi/funcunit/issues/98", "title": "Factor out the browser actions", "contents": "It looks like you're making a pretty cool extension for Jasmine and Qunit. But I'd like to use the browser actions separately from those systems. It would be great if the browser actions were factored out into an entirely separate module that can be used independently of those testing frameworks.", "createdAt": "2015-02-12T23:39:29Z", "updatedAt": "2015-02-12T23:50:38Z", "closedAt": "2015-02-12T23:50:38Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "fresheneesz", "authorAssociation": "NONE", "participants_count": 1, "participants_data": [{"login": "fresheneesz", "company": null}], "comments_count": 2, "comments_data": [{"authorLogin": "fresheneesz", "authorAssociation": "NONE", "createdAt": "2015-02-12T23:42:47Z", "contents": "Looks like maybe you have. Is that Syn? https://github.com/bitovi/syn", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "fresheneesz", "authorAssociation": "NONE", "createdAt": "2015-02-12T23:50:38Z", "contents": "Looks like it is.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 100, "url": "https://github.com/bitovi/funcunit/issues/100", "title": "Jasmine 2.2.1", "contents": "When I try to use FuncUnit with the Jasmine 2.2.1:\n\nAny idea?", "createdAt": "2015-03-31T18:23:20Z", "updatedAt": "2016-10-31T17:00:07Z", "closedAt": "2016-10-31T16:59:43Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "victorwpbastos", "authorAssociation": "NONE", "participants_count": 6, "participants_data": [{"login": "victorwpbastos", "company": "Prefeitura de Sorocaba"}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "alexisabril", "company": "Aquil.io"}, {"login": "jitcoder", "company": "ByteCode Studios"}, {"login": "php-max", "company": "Shanghai Eyan Consulting"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 7, "comments_data": [{"authorLogin": "victorwpbastos", "authorAssociation": "NONE", "createdAt": "2015-03-31T18:24:41Z", "contents": "In fact, any Jasmine 2.x gives me that error.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2015-03-31T18:36:14Z", "contents": "Thanks for reporting!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-03-31T19:20:44Z", "contents": "FuncUnit doesn't have a driver yet for Jasmine 2.x(but we should and it would be almost identical to the mocha adapter)", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "jitcoder", "authorAssociation": "NONE", "createdAt": "2015-05-06T23:51:12Z", "contents": "waitsFor does the same thing. Jasmine 2.0 overhauled Async goodies. Now we get afterAll(), beforeAll() and async it()", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "php-max", "authorAssociation": "NONE", "createdAt": "2015-08-20T15:02:34Z", "contents": "What does it mean? workable or have a work arround solution?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-08-20T15:06:40Z", "contents": "@php-max We actually just created a pre-release branch for 3.1.0 that does have support for 2.x: https://github.com/bitovi/funcunit/commits/3.1.0-pre\nWe should have a tagged pre-release here in the next week as we polish up a few details.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T16:59:43Z", "contents": "Closing because we're supporting Jasmine > 2.5, now.  Please re-open if there are issues.\nhttps://github.com/bitovi/funcunit/blob/master/package.json#L57", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 102, "url": "https://github.com/bitovi/funcunit/issues/102", "title": "docs broken on API page", "contents": "Go to http://funcunit.com/docs/index.html and see that all the code blocks are not formatted right.", "createdAt": "2015-04-13T18:21:37Z", "updatedAt": "2015-05-13T04:53:45Z", "closedAt": "2015-05-13T04:52:05Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "moschel", "authorAssociation": "MEMBER", "participants_count": 3, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}, {"login": "marshallswain", "company": null}, {"login": "kylegifford", "company": null}], "comments_count": 1, "comments_data": [{"authorLogin": "marshallswain", "authorAssociation": "MEMBER", "createdAt": "2015-05-13T04:52:03Z", "contents": "This was fixed in the deployment to the DocumentJS Ci server today.  It's live at http://funcunit.com/api/index.html, now.  I renamed the docs page to the api page, so the original link, above, won't work anymore.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 103, "url": "https://github.com/bitovi/funcunit/issues/103", "title": "Readme not showing up on npm", "contents": "https://www.npmjs.com/package/funcunit", "createdAt": "2015-04-28T15:56:06Z", "updatedAt": "2016-03-23T13:50:10Z", "closedAt": "2016-03-23T13:50:10Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "matthewp", "company": "Bitovi"}, {"login": "m-mujica", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "m-mujica", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-03-23T13:46:59Z", "contents": "@matthewp I can see the readme there, there is only one issue\n\nthat's some documentjs stuff, I guess we can just move that into its own markdown file and that will fix it. What do you think? should we close this?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-03-23T13:50:10Z", "contents": "yeah close it, wasn't showing up at all before", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 104, "url": "https://github.com/bitovi/funcunit/issues/104", "title": "DocumentJS 3.0, use gh-pages for FuncUnit.com", "contents": "When looking at #102, I noticed that the funcunit.com repo was still set to use the rhino version of DocumentJS.  Since we are moving documentation into gh-pages in each repo, I've forked this funcunit repo and started moving the content from the funcunit.com repo into it.  After some troubleshooting, I've managed to get it to build, but will need some help to finish it.\nTo do:\n\n Get the demo on the home page to work again.\n Fix the stylesheets. - The compiler halts in sidebar.less and in download.less.\n Update the sidebar style so that the sidebar here looks more like a color-matched blue version of the one in steal\n Move the _pages and _guides folders into funcunit/master and use those folders as the source for building the docs.\n Get the active page in the menu bar to highlight again.\n Clean up extra files.\n Switch to built production version with new Steal\n Fixed most of the style issues.\n Upgraded the site to use the new Steal.\n Changed the module import syntax to ES6 format.\n No longer building the home page using DocumentJS because it was causing invalid markup when building the home page HTML into the layout's {{{content}}}.\n Bundle Steal with the home page demo app.\n\nYou can see it in its current state here: http://marshallswain.github.io/funcunit/\nHere's the repo: https://github.com/marshallswain/funcunit/tree/gh-pages\n@jandjorgensen", "createdAt": "2015-05-09T01:59:31Z", "updatedAt": "2015-05-13T04:54:36Z", "closedAt": "2015-05-13T04:54:36Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "marshallswain", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "marshallswain", "company": null}], "comments_count": 1, "comments_data": [{"authorLogin": "marshallswain", "authorAssociation": "MEMBER", "createdAt": "2015-05-13T04:54:36Z", "contents": "This was finished today in the deployment to the DocumentJS Ci server today.  It's live at http://funcunit.com, now.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 108, "url": "https://github.com/bitovi/funcunit/issues/108", "title": "favicon only showing for home page", "contents": "The generated docs aren't showing the favicon.", "createdAt": "2015-05-13T05:03:19Z", "updatedAt": "2016-10-31T21:30:18Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "marshallswain", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "marshallswain", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["documentation", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 109, "url": "https://github.com/bitovi/funcunit/issues/109", "title": "Home page bithub links are broken", "contents": "These links\n\ngo here:", "createdAt": "2015-05-13T05:31:15Z", "updatedAt": "2016-11-03T20:29:51Z", "closedAt": "2016-11-03T20:29:47Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "marshallswain", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "marshallswain", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 4, "comments_data": [{"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-11-02T22:02:56Z", "contents": "Need to add this back:\nhttps://github.com/bitovi/funcunit/blob/master/site/app/app.js#L53", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-11-03T14:38:06Z", "contents": "Actually, we're removing bithub from FuncUnit :)", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-11-03T15:19:11Z", "contents": "This:\n\nor This:", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-11-03T16:20:21Z", "contents": "Going with \"or This:\"", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p1"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 111, "url": "https://github.com/bitovi/funcunit/issues/111", "title": "Fix page header styles", "contents": "Currently looks like this:\n\nShould look like this:", "createdAt": "2015-05-13T18:14:33Z", "updatedAt": "2015-05-20T17:19:55Z", "closedAt": "2015-05-20T17:19:55Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "marshallswain", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "marshallswain", "company": null}], "comments_count": 1, "comments_data": [{"authorLogin": "marshallswain", "authorAssociation": "MEMBER", "createdAt": "2015-05-20T17:19:55Z", "contents": "Fixed in #105", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 112, "url": "https://github.com/bitovi/funcunit/issues/112", "title": "Fix code highlighting in docs.", "contents": "", "createdAt": "2015-05-13T22:27:37Z", "updatedAt": "2016-10-31T21:30:27Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "marshallswain", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "marshallswain", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["documentation", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 113, "url": "https://github.com/bitovi/funcunit/issues/113", "title": "Issues with Bower dist", "contents": "main target is dist/funcunit.js, which is missing the browser folder within dist. CJS & AMD version are also missing this folder.", "createdAt": "2015-05-18T22:36:58Z", "updatedAt": "2016-10-31T21:30:44Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 11, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-18T22:42:11Z", "contents": "main should be pointing to the global, is it not?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-18T22:57:26Z", "contents": "It does actually, I'm tracking down the actual cause. Just putting a bug note here before I forget.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-18T23:13:19Z", "contents": "Here's the browser folder in the commonjs build: https://github.com/bitovi/funcunit/tree/v3.0.0/dist/cjs\nIt does have browser, same for the amd. But it's not showing up in bower?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-18T23:16:36Z", "contents": "Just tried it and you are right... very bizarre, should be there, it's in the tag.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-18T23:39:52Z", "contents": "we ignore \"browser\" instead of \"/browser\" in the bower.json, however I haven't debugged why the main dist isn't working.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-20T21:17:38Z", "contents": "Note: jQuery shouldn't be a dependency. Maybe we shouldn't distribute the non-global version via bower at all(which would remove the syn dep as well). Reason is: bower doesn't handle nested dependencies, so the version of jQuery will most likely always conflict with the version the app being tested needs.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-20T21:23:32Z", "contents": "jQuery is definitely a dependency, FuncUnit doesn't work without it.  The user can override our version using resolutions: http://jaketrent.com/post/bower-resolutions/", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-20T21:24:54Z", "contents": "We should probably provide a way for the user to pass in their own jQuery and we create a \"new funcunit\" based off of that.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-20T21:25:20Z", "contents": "Correct, however jQuery 1.11.x should be built into the dist/funcunit.js in noConflict mode. This would allow you to test an app that uses jQuery or any $ lib of any version, independent of the testing framework.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-20T21:28:17Z", "contents": "It's not built into the global.  It expects you to put jquery in a <script> before the FuncUnit <script>", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-05-29T18:07:22Z", "contents": "Just noting for this issue: FuncUnit does build jQuery 1.11.x into the global: https://github.com/bitovi/funcunit/blob/master/dist/funcunit.js#L2430\nWe only expected jQuery to be added separately in v2.0, which was actually my personal mistake. In v2.1.0-pre, this was corrected.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 114, "url": "https://github.com/bitovi/funcunit/issues/114", "title": "where is the definition of checkSupport?", "contents": "I just download and install the 3.0 but when I run it , it reports checkSupport is not defined, which is called on line 690. What is that? How can I mute the warning or do I really miss something?", "createdAt": "2015-05-19T02:35:07Z", "updatedAt": "2016-10-31T21:29:08Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "php-max", "authorAssociation": "NONE", "participants_count": 4, "participants_data": [{"login": "php-max", "company": "Shanghai Eyan Consulting"}, {"login": "Mikular", "company": null}, {"login": "koalixCZ", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 3, "comments_data": [{"authorLogin": "Mikular", "authorAssociation": "NONE", "createdAt": "2015-05-28T15:28:58Z", "contents": "Hi there,\nI've had no luck finding where the definition of this function is supposed to lie, but the (admittedly terrible) workaround I've used is just to provide a blank function definition for checkSupport before I reference the funcunit script, ie. function checkSupport() { return; }.\nLooking at where the code is used in funcunit.js it doesn't seem entirely essential to operations, but then I've had further issues (similar to your issue #93, I think) since then, so I'm not sure. Hope this helps.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "php-max", "authorAssociation": "NONE", "createdAt": "2015-05-28T15:38:15Z", "contents": "Hi, Dan, I think you are just as smart as I am. Just insert an empty checkSupport func.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "koalixCZ", "authorAssociation": "NONE", "createdAt": "2015-08-13T10:51:29Z", "contents": "This is problem in the syn library. If you fix it by this way, \"special\" keys will not work.\nYou can see the issue Special keys are not working ([insert], [ctrl], [alt], [caps]) for more details.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 116, "url": "https://github.com/bitovi/funcunit/issues/116", "title": "Cannot get \"type()\" in Funcunit to work for JavascriptMVC rapid start todos tutorial.", "contents": "Hello,\nGreat work on the JavaScriptMVC!\nI followed the tutorial on JavaScriptMVC.com to build the basic Todo app. I made some modifications to the code.\ntodos.js\nsteal('can',\n    './todos.ejs',\n    'can/util/fixture',\n    function (can, todosEJS) {\n        Todo = can.Model.extend({\n            findAll: \"GET /todos\",\n            findOne: \"GET /todos/{id}\",\n            create: \"POST /todos\",\n            update: \"PUT /todos/{id}\",\n            destroy: \"DELETE /todos/{id}\"\n        }, {});\n        var TODOS = [\n            {\n                id: 1,\n                name: \"wake up\"\n            },\n            {\n                id: 2,\n                name: \"take out trash\"\n            },\n            {\n                id: 3,\n                name: \"do dishes\"\n            }\n        ];\n        can.fixture({\n            // findAll\n            \"GET /todos\": function () {\n                return TODOS;\n            },\n            // findOne\n            \"GET /todos/{id}\": function (orig) {\n                // return the one item with that unique ID\n                var result = $.grep(TODOS, function(e){\n                    return e.id == (+orig.data.id);\n                });\n                return result[0];\n            },\n            // create\n            \"POST /todos\": function (request) {\n                TODOS.push(request.data);\n                return {\n                    id: TODOS.length\n                };\n            },\n            // update\n            \"PUT /todos/{id}\": function (orig) {\n                TODOS[(+orig.data.id) - 1].name = orig.data.name;\n                return TODOS[(+orig.data.id) - 1];\n            },\n            // destroy\n            \"DELETE /todos/{id}\": function (orig) {\n                TODOS.splice(((+orig.data.id) - 1), 1);\n                console.log(TODOS);\n                return {};\n            }\n        });\n\n        var Todos = can.Control({\n            init: function (element) {\n                Todo.findAll({}, function (todos) {\n                    element.html(todosEJS(todos));\n                });\n            },\n            \"li click\": function (li) {\n                li.trigger('selected', li.data('todo'));\n            },\n            \"li .destroy click\": function (el, ev) {\n                // get the li element that has the model\n                var li = el.closest('li');\n\n                // get the model and destroy it\n                li.data('todo').destroy();\n            }\n        });\n\n        Editor = can.Control({\n            todo: function (todo) {\n                this.options.todo = todo;\n                this.on();\n                this.setName();\n            },\n            // a helper that sets the value of the input\n            // to the todo's name\n            setName: function () {\n                this.element.val(this.options.todo.name);\n            },\n            // listen for changes in the todo\n            // and update the input\n            \"{todo} updated\": function () {\n                this.setName();\n            },\n            // when the input changes\n            // update the todo instance\n            \"change\": function () {\n                var todo = this.options.todo;\n                todo.attr('name', this.element.val());\n                todo.save();\n            }\n        });\n\n        Routing = can.Control({\n            init: function () {\n                this.editor = new Editor(\"#editor\");\n                new Todos(\"#todos\");\n            },\n            // the index page\n            \"route\": function () {\n                $(\"#editor\").hide();\n            },\n            \"todos/:id route\": function (data) {\n                $(\"#editor\").show();\n                console.log(data);\n                Todo.findOne(data, $.proxy(function (todo) {\n                    this.editor.todo(todo);\n                }, this));\n            },\n            \".todo selected\": function (el, ev, todo) {\n                can.route.attr('id', todo.id);\n            }\n        });\n\n        // create routing controller\n        new Routing(document.body);\n    });\n\n\n\ntodos.html\n<!DOCTYPE html>\n<html>\n\n<head></head>\n\n<body>\n    <ul id=\"todos\"></ul>\n    <input type=\"text\" name=\"editor\" id=\"editor\" />\n\n    <script>\n        steal = {\n            suffix: \"0.0.1\"\n        }\n    </script>\n    <script src=\"../steal/steal.js?todos/todos.js\">\n    </script>\n</body>\n\n</html>\n\ntodos.ejs\n<% this.each(function(todo){ %>\n  <li <%= (el) -> el.data('todo', todo) %> class='todo'>\n    <%= todo.attr('name') %>\n    <a href=\"javascript://\" class='destroy'>X</a>\n  </li>\n<% }) %>\n\n\ntodos_test.js\nsteal('funcunit', function (S) {\n\n    module('todos', {\n        setup: function () {\n            S.open(\"//todos/todos.html\");\n        },\n        teardown: function () {\n            // S.win.close();\n        }\n    });\n\n    test('verify first todo', function () {\n        S(\".todo:first\").click();\n\n        S('#editor')\n            .visible()\n            .click()\n            .type(\" one[enter]\")\n            .val('wake up one');\n    });\n\n});\n\ntest.html\n<html>\n  <body>\n    <script src=\"../steal/steal.js?todos/todos_test.js\"></script>\n  </body>\n</html>\n\nI'm trying to write a unit test that gives the UPDATE route coverage. However, the test never writes \" one\" in the input box and the test always fails. Could you please help me find what I'm missing?\nBest,\nAaron", "createdAt": "2015-05-24T03:52:11Z", "updatedAt": "2016-10-31T21:32:35Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "aaronfranco", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "aaronfranco", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "aaronfranco", "authorAssociation": "NONE", "createdAt": "2015-05-29T20:17:24Z", "contents": "This is the error I'm getting\nUncaught TypeError: Cannot read property 'attr' of undefined \ncan.Control.change @ (program):118\ncan.Control.can.Construct._shifter @ :8080/can/control/control.js?0.0.1:88\njQuery.event.dispatch @ :8080/can/lib/jquery.1.9.1.js?0.0.1:3077\njQuery.event.add.elemData.handle @ :8080/can/lib/jquery.1.9.1.js?0.0.1:2753\nextend.dispatch @ :8080 /funcunit/syn/synthetic.js:469\nextend.trigger @ :8080/funcunit/syn/synthetic.js:617\nh.extend.defaults.@ :8080/funcunit/syn/key.js:495\nh.extend._key @ :8080/funcunit/syn/key.js:776\nh.extend._type.runNextPart @ :8080/funcunit/syn/key.js:846\n(anonymous function) @ :8080/funcunit/syn/key.js:797", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 117, "url": "https://github.com/bitovi/funcunit/issues/117", "title": "F.win() typo", "contents": "http://funcunit.com/docs/FuncUnit.win.html\nF.win() is a property, not a method. //F.win instead of F.win()", "createdAt": "2015-05-26T20:02:55Z", "updatedAt": "2015-12-01T21:55:36Z", "closedAt": "2015-12-01T21:55:36Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "mjstahl", "company": "@mjstahl"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["documentation"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 118, "url": "https://github.com/bitovi/funcunit/issues/118", "title": "Docs: Fix FuncUnit broken link on API page", "contents": "The link to the Getting Started Guide is broken.", "createdAt": "2015-05-29T14:38:10Z", "updatedAt": "2015-06-18T14:41:26Z", "closedAt": "2015-06-18T14:41:26Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "marshallswain", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "marshallswain", "company": null}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["documentation"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 121, "url": "https://github.com/bitovi/funcunit/issues/121", "title": "funcunit.com pages have no title", "contents": "All titles at funcunit.com are empty", "createdAt": "2015-07-08T16:55:07Z", "updatedAt": "2016-11-03T21:21:36Z", "closedAt": "2016-11-03T21:21:32Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "daffl", "company": "@feathersjs and @bidalihq"}, {"login": "marshallswain", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 4, "comments_data": [{"authorLogin": "marshallswain", "authorAssociation": "MEMBER", "createdAt": "2015-07-08T17:15:38Z", "contents": "I only see a problem with the API home page.  It's set up that way because it's being pulled from the README.md.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "marshallswain", "authorAssociation": "MEMBER", "createdAt": "2015-07-08T17:16:34Z", "contents": "", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-07-08T17:21:59Z", "contents": "I meant the actual page <title> tag:", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "marshallswain", "authorAssociation": "MEMBER", "createdAt": "2015-07-08T17:23:03Z", "contents": "oh.  THAT title.  :)", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 122, "url": "https://github.com/bitovi/funcunit/issues/122", "title": "Sometimes click() method gives for Anchor tag", "contents": "Hi ,\nIm having muliple anchor tags with same classes  in HTML, But each anchor tag exisit in some unique Div. Can you please tell me how to click the anchor tag by using FuncUnit", "createdAt": "2015-07-15T04:43:51Z", "updatedAt": "2015-07-15T10:23:05Z", "closedAt": "2015-07-15T08:27:05Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "santhoshranjan", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "santhoshranjan", "company": null}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 2, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-07-15T08:27:05Z", "contents": "Hey @santhoshranjan, FuncUnit uses jQuery behind the scenes to select elements on the page.\nSo, F('a.foo') would be identical to $('a.foo'), which potentially selects multiple anchor tags. You'll need some type of unique selector to find the anchor you're trying to click on.\nF('a.foo:first').click() for example would click the first anchor found with the \"foo\" class.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "santhoshranjan", "authorAssociation": "NONE", "createdAt": "2015-07-15T10:22:18Z", "contents": "Hi Alex,\nThank you very much for your quick response, As per your suggestion i have implemented but still its not trigerring the next button.\nI'm pasting my anchor tag code here:\n                                            \n\u6b21\u3078\nI will be having similar the 4 anchor tag  in my html. and I need to respective logic on click of achor tag.\nI tried with the following code\nF('a.next:first').click(); but its not working. Can you help me in this.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 123, "url": "https://github.com/bitovi/funcunit/issues/123", "title": "multiple Anchor tags with same classs in not clickable", "contents": "Hi Alex,\nFor Issue 122 , Im creating new issue.\nThank you very much for your quick response, As per your suggestion i have implemented but still its not trigerring the next button.\nI'm pasting my anchor tag code here:\n<a  class=\"next roundButton orangeGrad floatRight\" href=\"#\">                                            <div class=\"org_lefttop\"></div>\n<div class=\"org_leftdown\"></div>\n<div class=\"org_righttop\"></div>\n<div class=\"org_rightdown\"></div>\n<span class=\"downarrow\">\u6b21\u3078</span></a>\n\nI will be having similar the 4 anchor tag in my html. and I need to respective logic on click of achor tag.\nI tried with the following code\nF('a.next:first').click(); but its not working. Can you help me in this.", "createdAt": "2015-07-15T10:27:38Z", "updatedAt": "2016-10-31T21:19:39Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "santhoshranjan", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "santhoshranjan", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 124, "url": "https://github.com/bitovi/funcunit/issues/124", "title": ".type(\"[ctrl]a[ctrl-up]\") does not work", "contents": "This test writes 'a' at the end of the text.\n(function () {\n    function setup() {\n        F.open(\"index.html\");\n    }\n\n    module(\"Ctrl + A\", {beforeEach: setup});\n\n    test(\"Ctrl+A\", function (assert) {\n        var done = assert.async();\n\n        S(\".hello\").exists(function () {\n            this.type(\"[ctrl]a[ctrl-up][delete]\", function () {\n                assert.ok(true);\n                done();\n            });\n        });\n    });\n}());\n<body>\n    <h1>Type Test</h1>\n    <form>\n        <input class=\"hello\" type=\"text\" value=\"Hello koala!\"/>\n    </form>\n</body>\n\nFuncUnit 3.0.0\njQuery 2.1.4\nQUnit 1.18\nChrome 43", "createdAt": "2015-07-22T07:25:40Z", "updatedAt": "2015-08-13T10:35:05Z", "closedAt": "2015-08-13T10:33:47Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "koalixCZ", "authorAssociation": "NONE", "participants_count": 1, "participants_data": [{"login": "koalixCZ", "company": null}], "comments_count": 1, "comments_data": [{"authorLogin": "koalixCZ", "authorAssociation": "NONE", "createdAt": "2015-07-22T07:27:15Z", "contents": "Similar problem is with the text selection using the [shift].\nI found, this problem occurs in the syn library. Older version version of the syn library (before refactoring) works well.\nIt's a problem in the syn library.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 125, "url": "https://github.com/bitovi/funcunit/issues/125", "title": "Getting started guide examples link", "contents": "Examples are currently linked to a broken url, moved to: https://github.com/bitovi/funcunit/tree/gh-pages/examples\nTodo: verify the examples are still up to date & fix broken url", "createdAt": "2015-07-29T16:42:38Z", "updatedAt": "2018-05-22T00:51:08Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "participants_count": 6, "participants_data": [{"login": "alexisabril", "company": "Aquil.io"}, {"login": "julia-allyce", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}, {"login": "nagen010", "company": null}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 4, "comments_data": [{"authorLogin": "julia-allyce", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-04-25T17:22:01Z", "contents": "+1 :)", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T20:28:44Z", "contents": "Now at https://github.com/bitovi/funcunit/tree/gh-pages/site/examples.  They're also in the main repo, now, too (https://github.com/bitovi/funcunit/tree/master/site/examples).", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "nagen010", "authorAssociation": "NONE", "createdAt": "2018-05-22T00:46:54Z", "contents": "Shall I work on this issue?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2018-05-22T00:51:08Z", "contents": "that would be great!", "reactions_count": 1, "reactions_data": ["THUMBS_UP"]}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "developer relations", "documentation", "help wanted", "p3", "website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 126, "url": "https://github.com/bitovi/funcunit/issues/126", "title": "Document function chaining on website", "contents": "FuncUnit adds all actions to a queue to ensure that items fire in the correct order. Not only could this be made a little clearer (it helps with the overall understanding of the tool), but it should be noted that functions can be added to the chain:\nF(\"input\").exists().type(\"hello world\");\n$(\"input\").text() === \"hello world\"; //-> not likely, due to how FuncUnit queue works\n\n// queue up a function to run\nF(function () {\n    $(\"input\").text() === \"hello world\"; //-> true\n});", "createdAt": "2015-08-12T23:33:31Z", "updatedAt": "2016-10-31T21:17:39Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "DesignByOnyx", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "DesignByOnyx", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["documentation", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 127, "url": "https://github.com/bitovi/funcunit/issues/127", "title": "exists() requires a message or else QUnit complains", "contents": "If exists() is the only test which runs and a message is omitted, QUnit will complain that at least 1 assertion was expected.\nQUnit.test(\"The input exists\", function () {\n    F(\"input\").exists();\n});\nThe following will report that 1 assertion was successful:\nQUnit.test(\"The input exists\", function () {\n    F(\"input\").exists('The input exists');\n});", "createdAt": "2015-08-13T01:45:52Z", "updatedAt": "2016-10-31T20:39:15Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "DesignByOnyx", "authorAssociation": "NONE", "participants_count": 4, "participants_data": [{"login": "DesignByOnyx", "company": "Bitovi"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "daffl", "company": "@feathersjs and @bidalihq"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-08-13T01:47:36Z", "contents": "This is by design. Some times you need to use things like .exists() for control-flow, adding a message is how you tell FuncUnit that this .exists() is an assertion.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-08-13T03:44:42Z", "contents": "It is documented as optional parameters though.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 128, "url": "https://github.com/bitovi/funcunit/issues/128", "title": "Position API not working as expected instead gives an error. Please refer the code below", "contents": "F(\"#xyz\").exists().click(function(){\nequal(F(\"div[class~=mw_type_Panel]\").position({top: 50, left: 50}));\n});", "createdAt": "2015-08-25T18:08:13Z", "updatedAt": "2016-10-31T20:37:13Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "sanketmi", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "sanketmi", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 130, "url": "https://github.com/bitovi/funcunit/issues/130", "title": "homepage is broken", "contents": "The demos on the homepage don't seem to work at all. The QUnit tests are all failing.\nI was trying on Chrome.", "createdAt": "2015-10-11T18:17:51Z", "updatedAt": "2015-10-12T03:11:26Z", "closedAt": "2015-10-12T03:11:22Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "moschel", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "moschel", "company": "Jupiter JS Consulting"}, {"login": "alexisabril", "company": "Aquil.io"}], "comments_count": 1, "comments_data": [{"authorLogin": "alexisabril", "authorAssociation": "CONTRIBUTOR", "createdAt": "2015-10-12T03:11:22Z", "contents": "Looks like there was a pathing change sometime ago. Fixed by 1b015b4", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 132, "url": "https://github.com/bitovi/funcunit/issues/132", "title": "Better error message when F.open() is blocked by popup blocker", "contents": "There needs to be a better error message thrown/displayed when F.open() is blocked by popup blocker. The error currently says Uncaught TypeError: Cannot read property '___FUNCUNIT_OPENED' of undefined.\nIt's not enough to indicate the probable issue.\nThanks", "createdAt": "2015-11-13T01:55:31Z", "updatedAt": "2016-10-31T20:31:28Z", "closedAt": "2016-10-31T20:31:27Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "b2amar", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "b2amar", "company": "MathWorks"}, {"login": "marshallswain", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "marshallswain", "authorAssociation": "MEMBER", "createdAt": "2015-11-14T04:39:40Z", "contents": "This is fixed in #119.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T20:31:27Z", "contents": "Thanks @marshallswain.  Closing", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 133, "url": "https://github.com/bitovi/funcunit/issues/133", "title": "I can't get funcunit to run", "contents": "I am searching for a basic example of running funcunit from the command line. In general I am told to type: ./js funcunit/open/... link to html. I don't have a command ./js or js. The other option is to run node node ... when I do node starts, but I am told node does not exist. That is true, there is no file 'node' in the current directory. Some posts suggest going to the funcunit folder. The file does not exist there either.\nI am running on a MAC. Please help me! I am using funcunit 3.0.0.\nThanks", "createdAt": "2016-01-12T17:41:13Z", "updatedAt": "2016-08-11T20:01:05Z", "closedAt": "2016-08-11T20:01:05Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "RALifeCoach", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "RALifeCoach", "company": "Looking"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "daffl", "company": "@feathersjs and @bidalihq"}], "comments_count": 6, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-01-12T17:45:37Z", "contents": "@RALifeCoach FuncUnit doesn't run from the command line. It might have a long time ago, but doesn't any more. You probably want to try out Testee which can run your FuncUnit tests from the command line. https://github.com/bitovi/testee", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "RALifeCoach", "authorAssociation": "NONE", "createdAt": "2016-01-12T17:58:15Z", "contents": "@matthewp: Thanks Matthew. I downloaded testee and phantomjs and ran my test. It starts, puts out a blank line, a couple of spaces and stops. No errors, no warnings, just stops. After 2 minutes it times out. Any suggestions? My HTML is quite long, but it ends with:\nscript src=\"/node_modules/jasmine-core/lib/jasmine-core.js\"></script>\nscript src=\"/js/vendor/funcunit.js\"></script>\nscript src=\"/tests/full/modules/page-tournament/tournament-banner/pgatour-tournament-banner-test.js\">/script>\nscript type=\"text/javascript\">\nvar jasmineEnv = jasmine.getEnv();\nvar htmlReporter = new jasmine.HtmlReporter();\njasmineEnv.addReporter(htmlReporter);\njasmineEnv.specFilter = function(spec) {\nreturn htmlReporter.specFilter(spec);\n};\njasmineEnv.execute();\n/script>\nThe test file is:\ndescribe(\"tests.full.modules.page-tournament.tournament-banner.pgatour-tournament-banner-test\", function () {\nit('kajhkashkjh', function (done) {\nconsole.log('here');\nF('.s-tour').click(function () {\nexpect(F('.s-tour').parent().hasClass('active')).toBeTrue();\nF('.h-tour').click(function () {\nexpect(F('.h-tour').parent().hasClass('active')).toBeTrue();\ndone();\n});\n});\n});\nit('kajhkashkjh', function () {\n    F('.s-tour');\n    var i = 16;\n    var module = pgatour.videoPlayer;\n    expect(module).toEqual(jasmine.any(Function));\n});\n\n});", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "daffl", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-01-12T18:40:52Z", "contents": "@RALifeCoach PhantomJS can't open popup windows so the test will never start. I think @alexisabril has a setup for using iFrames to make that work. First I would test if running from the command line works with other browser like Firefox though.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "RALifeCoach", "authorAssociation": "NONE", "createdAt": "2016-01-12T19:32:17Z", "contents": "@daffl Thanks for that. I now have it working on Firefox. @alexisabril can you please assist with PhantomJS?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-11T17:59:09Z", "contents": "Is this still an issue for you?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "RALifeCoach", "authorAssociation": "NONE", "createdAt": "2016-08-11T19:53:16Z", "contents": "No it is no longer an issue.\nOn Aug 11, 2016 1:59 PM, \"Matthew Phillips\" notifications@github.com\nwrote:\n\nIs this still an issue for you?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#133 (comment),\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADrayNpNOtK9qoTo7TTFHdCrDRvs6qfKks5qe2LwgaJpZM4HDWZS\n.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 134, "url": "https://github.com/bitovi/funcunit/issues/134", "title": "Site link to example package is broken", "contents": "Example package archive, currently referenced from http://funcunit.com/guides/Guides.guides.start.html page, leads to the 404 page: http://funcunit.com/dist/examples.zip\nI also was not find examples on the GitHub.", "createdAt": "2016-01-14T07:55:54Z", "updatedAt": "2016-10-31T20:30:22Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "isadovskiy", "authorAssociation": "NONE", "participants_count": 4, "participants_data": [{"login": "isadovskiy", "company": null}, {"login": "julia-allyce", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}, {"login": "matthewp", "company": "Bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "julia-allyce", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-04-25T17:27:52Z", "contents": "@isadovskiy the examples can be found here:  https://github.com/bitovi/funcunit/tree/gh-pages/examples\nif you are still looking for them - found the link in issue #125", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T20:30:04Z", "contents": "Examples now at https://github.com/bitovi/funcunit/tree/gh-pages/site/examples. They're also in the main repo, now, too (https://github.com/bitovi/funcunit/tree/master/site/examples).", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["help wanted", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 135, "url": "https://github.com/bitovi/funcunit/issues/135", "title": "Touch Support", "contents": "I'm using FuncUnit a lot for JS testing, and wondering if there is any plan for FuncUnit to provide touch events API such as tap, long hold, pinch.", "createdAt": "2016-01-20T17:51:26Z", "updatedAt": "2017-04-19T15:31:08Z", "closedAt": "2017-04-19T15:31:08Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "victor-xiong", "authorAssociation": "NONE", "participants_count": 6, "participants_data": [{"login": "victor-xiong", "company": "@google"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "binodpanta", "company": null}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "chinmaywanpal", "company": "The MathWorks Inc"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 5, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-01-20T18:29:43Z", "contents": "It's something we've wanted for a long time, however probably will need someone in the community to take on development.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-11-28T20:36:02Z", "contents": "I am interested to explore this as long as we can be clear about what can do next in touch and funcunit. An example test page is this which shows that using dojo.touch api, manual clicks will trigger both touch and click callbacks, but funcunit clicks will only generate click callbacks\n<html>\n\n<body>\n<script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\" src=\"funcunit.js\"></script>\n<script type=\"text/javascript\" src=\"qunit.js\"></script>\n<script type=\"text/javascript\" src=\"dojo.js\"></script>\n\n<textarea id=\"testbox\"></textarea>\n\n<script type=\"text/javascript\">\nrequire([\n\t\"dojo/dom\",\n\t\"dojo/on\",\n\t\"dojo/touch\"\n\t], function (dom, on, touch) {\n\n\tvar node = dom.byId(\"testbox\");\n\n\ton(node, touch.press, function (event) {\n\t\tconsole.log(\"Touch event registered\");\n\t});\n\n\ton(node, \"click\", function (event) {\n\t\tconsole.log(\"Click event registered\");\n\t});\n\n\tF('#testbox').click();\n});\n\n</script>\n</body>\n</html>\n\nI will propose it as a topic in an upcoming meeting", "reactions_count": 1, "reactions_data": ["THUMBS_UP"]}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2016-11-30T04:32:47Z", "contents": "Sounds good. We can setup some time to pair on this too.\n\u2026\nSent from my iPhone\n On Nov 28, 2016, at 2:36 PM, binodpanta ***@***.***> wrote:\n\n I am interested to explore this as long as we can be clear about what can do next in touch and funcunit. An example test page is this which shows that using dojo.touch api, manual clicks will trigger both touch and click callbacks, but funcunit clicks will only generate click callbacks\n\n `\n\n <script type=\"text/javascript\" src=\"../../../../../test/tools/javascript/libs/funcunit/jquery.js\"></script> <script type=\"text/javascript\" src=\"../../../../../test/tools/javascript/libs/funcunit/funcunit.js\"></script> <script type=\"text/javascript\" src=\"../../../../../test/tools/javascript/libs/qunit/qunit.js\"></script> <script type=\"text/javascript\" src=\"../derived/ui/dojo/dojo.js\"></script>\n <textarea id=\"testbox\"></textarea>\n\n <script type=\"text/javascript\"> require([ \"dojo/dom\", \"dojo/on\", \"dojo/touch\" ], function (dom, on, touch) { var node = dom.byId(\"testbox\"); on(node, touch.press, function (event) { console.log(\"Touch event registered\"); }); on(node, \"click\", function (event) { console.log(\"Click event registered\"); }); F('#testbox').click(); }); </script> `\n I will propose it as a topic in an upcoming meeting\n\n \u2014\n You are receiving this because you are subscribed to this thread.\n Reply to this email directly, view it on GitHub, or mute the thread.", "reactions_count": 1, "reactions_data": ["THUMBS_UP"]}, {"authorLogin": "chinmaywanpal", "authorAssociation": "NONE", "createdAt": "2016-12-02T04:28:07Z", "contents": "Did you folks start working on this? I was also interested in knowing more/ contributing. I came across bitovi/syn#25 from a conversation about pointer events. May be that could be a good place to start about thinking of touch support. What do you think?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2016-12-02T15:20:22Z", "contents": "@chinmaywanpal yes, syn is where the basic behavior would need to be added first.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["enhancement", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 136, "url": "https://github.com/bitovi/funcunit/issues/136", "title": "Type performs implicit click, why?", "contents": "Looks like funcunit type method sends a click as part of typing. When applying type to elements like checkboxes, the state of the checkbox can change unexpectedly. Canvas based testing is also weird due to this side effect.\nfor example\nF(checkBoxNode).type('[Enter]')\n\ncauses a click (which causes a toggle), then an Enter which toggles again, which is not the desired result.\nIs there any particular reason type includes a click? Can the users be asked to click themselves if they need focus before type?\ntype: function (text, success) { \n            this._addExists(); \n   -------> this.click(); \n            var selector = this.selector; \n            if (text === '') { \n                text = '[ctrl]a[ctrl-up]\\b'; \n            } \n            FuncUnit.add({ \n                method: function (success, error) { \n                    syn('_type', this.bind[0], text, success); \n                }, \n                success: success, \n                error: 'Could not type ' + text + ' into ' + this.selector, \n                bind: this, \n                type: 'action' \n            }); \n            return this; \n        },", "createdAt": "2016-02-08T18:16:52Z", "updatedAt": "2016-09-20T17:34:01Z", "closedAt": "2016-09-20T17:32:13Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "binodpanta", "company": null}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "matthewp", "company": "Bitovi"}], "comments_count": 13, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2016-02-08T20:23:54Z", "contents": "Is there any particular reason type includes a click?\n\nAn element needs focus so it can be typed on.  A user typically gives an element focus by clicking it or tabbing to it.  I suppose the better fix would be to check if the element has focus, if it doesn't, to then click the element to give it.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-04-24T16:39:41Z", "contents": "Thanks for the update. My preference would be to have click and type be separate so that users can click then type. Alternatively can you provde a sendkeys which only send keys so that those cases I mentioned can be addressed?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-06-07T14:17:09Z", "contents": "Any thoughts? Can there be two methods, one that just does a keysend, and another that has the current behavior?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2016-06-07T14:24:46Z", "contents": "@binodpanta the primary design goal of FuncUnit is to mimic what users do.  An element must be focused before it can receive key events.  That traditionally happens with a click or a [tab] so I'm not sure how to enable this with the standard type method.\nHowever, I'd be fine exposing a method that just does a keysend if you want to submit a pull request.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-17T17:10:37Z", "contents": "Hi there, we are preparing a change to add a new method F.sendkeys which would be exactly the same usage as type except it won't have the click, we will send a pull request. Is there anything else to the process?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-17T17:48:56Z", "contents": "Sounds good!  I think this would probably be a change in syn first? https://github.com/bitovi/syn\nsyn is what implements type and click and that sort of stuff.\nI would go with sendKeys camelcased, otherwise sounds like a reasonable change to me.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-17T18:27:05Z", "contents": "Thanks @matthewp . I will cameCase the function.\nWould we need a syn change? I was going along the lines of just adding a new method that looks like this in actions.js\nsendKeys: function( keys, success ) {\n    this._addExists();\n    var selector = this.selector;\n    // type(\"\") is a shortcut for clearing out a text input\n    if(keys === \"\"){\n      keys = \"[ctrl]a[ctrl-up]\\b\"\n    }\n    FuncUnit.add({\n      method : function(success, error){\n        syn(\"_type\", this.bind[0], keys, success);\n\n      },\n      success : success,\n      error : \"Could not send the keys \" + keys + \" into \" + this.selector,\n      bind : this,\n      type: \"action\"\n    });\n    return this;\n  },\n\nMy current test listed below, is setup to fail if I replace sendKeys() with type(), as it detects any clicks and fails if click was ever registered\nQUnit.test(\"SendKeys without click\", function(){\nF.open(\"test/myapp.html\");\nF(\"#typehereexpectnoclick\").sendKeys(\"javascriptmvc\");\n// if this shows up it means that we definitely did not receive a click\nF(\"#seewhatyoutyped\").text(\"typed javascriptmvc\",\"type still works\");\n})", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-23T18:14:03Z", "contents": "hi there, any thoughts? If not, I will go ahead and submit a pull request", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-09-15T17:32:07Z", "contents": "Hello, I tried to submit my changes into a new branch sendkeys and I get this when I run git push -u origin sendkeys\nerror: The requested URL returned error: 403 while accessing https://github.com/bitovi/funcunit.git/info/refs\nIs there a whitelist of users who can submit? Do I need to get added?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-09-15T17:36:13Z", "contents": "@binodpanta You should be able to fork the repo here:\n\npush your changes to your fork, and then submit a pull request. Thanks!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-09-16T02:50:26Z", "contents": "oh of course, what am I thinking, got it here\n#157", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-09-20T16:28:48Z", "contents": "Any idea if this change can be part of an upcoming release? and whenabouts that release will occur?\nThanks!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2016-09-20T17:34:01Z", "contents": "@binodpanta I just merged this.  We'll release it once the new CanJS is out.  Look for it maybe next week.\nWe're looking for people to help on FuncUnit.  If you're interested in becoming a contributor ... and all the fame and glory that entails, let us/me know (justin@bitovi.com).  Thanks!", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 137, "url": "https://github.com/bitovi/funcunit/issues/137", "title": "Typing at the start of input inside an Iframe causes cursor to reset to end", "contents": "When i try to type into a text input that already has text in it while the cursor is positioned at the start it resets it to the end of the input.\nI have already located a fix for this, it seems it's using the document var instead of the h.getWindow(el) helper function.\nvar h = syn.helpers, getSelection = function (el) {\n    var real, r, start;\n    if (el.selectionStart !== undefined) {\n        if (document.activeElement && document.activeElement !== el && el.selectionStart === el.selectionEnd && el.selectionStart === 0) {\n            return {\nShould be\nvar h = syn.helpers, getSelection = function (el) {\n    var real, r, start;\n    if (el.selectionStart !== undefined) {\n        if (h.getWindow(el).document.activeElement && h.getWindow(el).document.activeElement !== el && el.selectionStart === el.selectionEnd && el.selectionStart === 0) {\n            return {", "createdAt": "2016-02-10T12:28:51Z", "updatedAt": "2016-10-31T20:23:28Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "MrL0co", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "MrL0co", "company": null}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "help wanted", "p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 138, "url": "https://github.com/bitovi/funcunit/issues/138", "title": "Chained .find()'s don't work with iframes", "contents": "I attempted to do:\nF('.session-menu', 0)\n        .visible('Session menu is visible')\n        .find('.dropdown-toggle')\n            .visible('Dropdown toggle is visible')\n\nI wound up doing:\nF('.session-menu', 0)\n    .visible('Session menu is visible')\n\nF('.dropdown-toggle', 0)\n    .visible('Dropdown toggle is visible')", "createdAt": "2016-02-24T17:20:13Z", "updatedAt": "2016-10-31T20:22:45Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "akagomez", "company": "HigherEducation"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 139, "url": "https://github.com/bitovi/funcunit/issues/139", "title": "Dynamic iframes are considered not loaded", "contents": "If I create an <iframe>, populate it dynamically, and set it as the context for FuncUnit like this:\nvar iframe = $(document.createElement('iframe'));\niframe.contents().find('body').append(frag);    \nF.open(win);\n\nAll tests will fail because FuncUnit.documentLoaded() will return false here: \n  \n    \n      funcunit/browser/getters.js\n    \n    \n         Line 509\n      in\n      01f767b\n    \n    \n    \n    \n\n        \n          \n           passed = false; \n        \n    \n  \n\n\nDue to the fact that FuncUnit.win.location.href === 'about:blank' here: \n  \n    \n      funcunit/browser/open.js\n    \n    \n        Lines 258 to 260\n      in\n      92fd4b2\n    \n    \n    \n    \n\n        \n          \n           var loaded = FuncUnit.win.document.readyState === \"complete\" &&  \n        \n\n        \n          \n                    FuncUnit.win.location.href != \"about:blank\" && \n        \n\n        \n          \n                    FuncUnit.win.document.body; \n        \n    \n  \n\n\nTo get around this I had to overwrite FuncUnit.documentLoaded to always return true like this:\nF.documentLoaded = function () { return true; };", "createdAt": "2016-02-24T20:25:51Z", "updatedAt": "2016-10-31T20:22:01Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "akagomez", "company": "HigherEducation"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-11T18:00:05Z", "contents": "Thanks! This a good bug, probably easy to write a test for.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "help wanted", "p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 140, "url": "https://github.com/bitovi/funcunit/issues/140", "title": ".exists() isn't counted as an assertion unless a message is defined", "contents": "F('selection').exists(); // Expected at least one assertion...\n\nF('selection').exists('Selection exists'); // 1 assertions of 1 passed, 0 failed.\n\nI think the same is true for .missing(), though I can't confirm at the moment.", "createdAt": "2016-02-26T20:50:38Z", "updatedAt": "2016-02-26T21:08:23Z", "closedAt": "2016-02-26T21:08:23Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "akagomez", "company": "HigherEducation"}, {"login": "matthewp", "company": "Bitovi"}], "comments_count": 4, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-02-26T20:53:49Z", "contents": "This is definitely true, but it's intentional. It's so you can chain a bunch of stuff and only assert at the end:\nF('selection').exists().click().doMoreStuff().foo('ok now assert');", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-02-26T20:55:35Z", "contents": "How would counting the message-less .exists() as an assertion prevent you from doing that?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-02-26T21:00:45Z", "contents": "Because FuncUnit works by retrying over and over. So it runs F('selection').exists() until it is true, and then goes on to the next thing (.click()). it only does assertions when it sees the message.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-02-26T21:08:23Z", "contents": "Message\nThe last (optional) parameter for each wait command is a message. By default, wait conditions will pass silently (without a passed assertion).\nIf a user provides a message string, the wait condition will pass an assertion with the given message when the wait completes. If the wait fails (the timeout is reached), this message will be provided to the failed assertion.\n\nhttps://funcunit.com/guides/Guides.waits.html", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 141, "url": "https://github.com/bitovi/funcunit/issues/141", "title": "F.open(windowRef) is not documented", "contents": "https://github.com/donejs/bitballs/blob/disappearing-top-menu-44/public/test/utils.js#L25", "createdAt": "2016-02-26T20:51:31Z", "updatedAt": "2016-10-31T20:21:12Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "akagomez", "company": "HigherEducation"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["documentation", "help wanted", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 142, "url": "https://github.com/bitovi/funcunit/issues/142", "title": "F(selector, frameId) isn't documented", "contents": "https://github.com/bitovi/funcunit/blob/gh-pages/examples/todo_qunit.js#L2-L6", "createdAt": "2016-02-26T20:53:25Z", "updatedAt": "2016-10-31T20:20:10Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "akagomez", "company": "HigherEducation"}, {"login": "mickmcgrath13", "company": "Bitovi"}, {"login": "matthewp", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T20:19:23Z", "contents": "https://github.com/bitovi/funcunit/blob/gh-pages/site/examples/todo_qunit.js#L2-L6", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["documentation", "help wanted", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 145, "url": "https://github.com/bitovi/funcunit/issues/145", "title": "Tests fail in Travis only", "contents": "I don't have many details. The problem was intermittent originally and I haven't been able to reproduce since I originally worked around the issue here: donejs/bitballs#115.\nAt its core, setting fixture.delay in one test seemed to indirectly cause failures in other tests.\nI'll follow up with more details as I'm able to identify them. For now this issue serves as a placeholder.", "createdAt": "2016-03-10T14:08:08Z", "updatedAt": "2016-10-31T17:16:50Z", "closedAt": "2016-10-31T17:16:50Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "akagomez", "company": "HigherEducation"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 3, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-11T17:57:55Z", "contents": "Figure anything out here? If not can we close?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T17:13:08Z", "contents": "@akagomez  Can we close this?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "akagomez", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-10-31T17:16:50Z", "contents": "Yup. I'm sure I'm remembering incorrectly, but I think that the version of FF that Travis used had some sort of nondeterministic event loop, creating intermittent failures.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 155, "url": "https://github.com/bitovi/funcunit/issues/155", "title": "Qunit2 support?", "contents": "Looks like there is no version of Funcunit yet that support QUnit2? Is there a plan to release FuncUnit for qunit2, if so, what is the timeline on it?", "createdAt": "2016-08-04T13:38:12Z", "updatedAt": "2017-05-21T03:29:06Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "participants_count": 8, "participants_data": [{"login": "binodpanta", "company": null}, {"login": "matthewp", "company": "Bitovi"}, {"login": "shayaneumar", "company": "Mitel Networks"}, {"login": "kdillon", "company": "MathWorks"}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "kjdonahue", "company": null}, {"login": "m-mujica", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 20, "comments_data": [{"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-09T15:49:12Z", "contents": "Let alone QUnit2, I think it also does not work with qunit 1.23.1, I tried to upgrade to that version, I got this error in this function,\n\"Uncaught Error: Called stop() outside of a test context\"\n/funcunit@3.0.0#browser/adapters/qunit/\ndefine('funcunit/browser/adapters/qunit', function (require, exports, module) {\nmodule.exports = function (QUnit) {\nreturn {\npauseTest: function () {\nQUnit.stop();\n},\nresumeTest: function () {\nQUnit.start();\n},\nassertOK: function (assertion, message) {\nQUnit.ok(assertion, message);\n},\nequiv: function (expected, actual) {\nreturn QUnit.equiv(expected, actual);\n}\n};\n};\n});", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-09T15:59:24Z", "contents": "Timeline is when it's done. Please send a PR if you have it working.\nNot sure about your other problem with 1.23.1, can you provide a breaking example?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-10T16:04:23Z", "contents": "hi there, so it turns out that as of QUnit 1.17, the error occurs only if I use F.open() inside the QUnit.moduleStart() callback\nI attached a set of examples to demonstrate this\nthis was the reason some of our tests were failing\nQuestion is: are we doing something out of model or is FuncUnit? Resolving this will help us move to 1.23.1 I think which  will be great as we prepare to do 2.0\nTo run, open attached zip and run testpage-1.14.html. It works\nThen run testpage-1.17.html. It shows this failure\nI am sure the same happens with 1.23.html too but I did not go that far even at this time\nfuncunitexample.zip", "reactions_count": 1, "reactions_data": ["THUMBS_UP"]}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-10T16:43:07Z", "contents": "Thanks for the example!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-23T18:45:09Z", "contents": "hello there, please let me know if I can help in any way here. I am prepping to submit the sendKeys in another pull request so I am sort of setup to run the tests locally and all that, so if you have any ideas I can try, I am do that. Apparently the use of QUnit.start/stop are the problems, but I am not sure what to replace it with since there are no globals anymore!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-24T01:20:37Z", "contents": "No globals is ok, you pass QUnit to FuncUnit using F.attach(QUnit) anyways.\nHere's the code that detects if the thing you pass into .attach is QUnit:  https://github.com/bitovi/funcunit/blob/master/browser/adapters/adapters.js#L84-L86\nI don't know what has changed with QUnit2 to tell you if/how that needs to change. But it needs to correctly detect that the QUnit object is the QUnit object, if that makes sense.\nFrom there you need to update the qunit adapter (or create a new one specially for qunit2): https://github.com/bitovi/funcunit/blob/master/browser/adapters/qunit.js\nWithout knowing all what has changed I can't guide too much here unfortunately.  One problem could be if QUnit2 no longer has stuff like QUnit.equal but instead only has the test-local assert.equal versions as adapters are not really set up with that in mind.  Not sure what should be done in that case, might need some sort of test-local version of QUnit.attach.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-24T18:42:19Z", "contents": "ok so I find that if I replace\nQUnit.moduleStart(function() {  F.open(\"./state_verification_testpage.html\"); } )\n\nwith the following, I get rid of this problem,\n  QUnit.module(\"FuncUnit state verification tests\", {\n\n  beforeEach: function(assert) {\n    F.open(\"./state_verification_testpage.html\");\n}, \n    afterEach: function(assert) {\n        F.wait(1, function() { F.win.close();});\n    }\n});\n\nAccording to the qunit 2 upgrade guide, QUnit.moduleStart is still supported if called directly as a function\nhttp://qunitjs.com/upgrade-guide-2.x/#removed-and-modified-qunit-methods-and-properties\nSo whatever way QUnit is checking that QUnit.start and stop are being called outside of test content, that check fails in the first scenario but passes in the second. Interesting.\nHowever, if I use the above, the test fails in a different way where click is not working.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-25T15:39:07Z", "contents": "ok with Qunit 1.23.1 I have fully verified that the use of F.open/wait etc in QUnit.moduleStart/moduleDone fails like above but the same functions when used in the beforeEach and afterEach callbacks of QUnit do work\n    // This works with QUnit 1.23.1\n    QUnit.module(\"FuncUnit state verification tests\", {\n\n        beforeEach: function(assert) {\n            F.open(\"./state_verification_testpage.html\");\n        }, \n        afterEach: function(assert) {\n            F.wait(1, function() { F.win.close();});\n        }\n\n    });\n\n    // This does not work with QUnit 1.23.1\n\n    QUnit.moduleStart(function() { \n        //F.open(\"./state_verification_testpage.html\");\n    });\n    QUnit.moduleDone(function() { \n        //F.wait(1, function() { F.win.close();});\n    });\n\nNext step for me is to repeat with QUnit 2.x and see what happens.\nThis may be an acceptable workaround but it will require us to change thousands of files perhaps in our test bed, so a bit annoying in the least", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2016-08-25T19:39:08Z", "contents": "Unfortunately the solution may not be that simple after all from my limited knowledge of this. Unless QUnit somehow allows this type of usage.\nHere is what I have concluded thus far\n\nFuncunit uses QUnit.start() and QUnit.stop() to resumeTest and pauseTest as part of F.open, F.close etc.\nQunit as of >1.17 no longer allows the use of QUnit.stop()/start() outside test content. And code running in moduleStart() is apparently considered outside test content now\nI looked at the possibility of using the new assert.async() which is replacing the use of QUnit.start() and QUnit.stop() in QUnit2.x. But that api also is not usable from within FuncUnit's pauseTest and resumeTest because these calls\nIf I just call F.open in beforeEach I am all fine, nothing breaks with no changes, but stuff starts to fail again if I use F.close in afterEach or anywhere for that matter. So as soon as I use F.close, subsequent F.open calls fail with this message Uncaught TypeError: Cannot read property 'replace' of undefined@ 115 ms Source: http://localhost:61193/test/funcunit/funcunit.js:2645\n\nMore specifically, if I try to use assert.async in FuncUnit's QUnit adapter like this,\ndefine('funcunit/browser/adapters/qunit', function (require, exports, module) {\n    module.exports = function (QUnit) {\n        var done;\n        return {\n            pauseTest: function () {\n                done = QUnit.assert.async();\n            },\n            resumeTest: function () {\n                done();\n            },\n            assertOK: function (assertion, message) {\n                QUnit.ok(assertion, message);\n            },\n            equiv: function (expected, actual) {\n                return QUnit.equiv(expected, actual);\n            }\n        };\n    };\n});\n\nI get this error\n    TypeError: Cannot read property 'semaphore' of undefined\n        at Object.async (http://localhost:61193/test/funcunit/qunit.js:1393:7)\n        at Object.pauseTest (http://localhost:61193/test/funcunit/funcunit.js:2555:34)\n        at Function.FuncUnit.add (http://localhost:61193/test/funcunit/funcunit.js:3196:27)\n        at Function.open (http://localhost:61193/test/funcunit/funcunit.js:2660:22)\n        at Object.<anonymous>\n\nSo I am not sure that the next logical step is here. Whether it is to have QUnit somehow allow this type of usage, or for us to stop using F.open/close in moduleStart/stop. The latter can be done if there is no other way.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "shayaneumar", "authorAssociation": "NONE", "createdAt": "2017-04-04T07:15:51Z", "contents": "I have made following changes in these files  make this work with QUnit 2\n\nPassing local asset to FuncUnit\nfuncunit\\browser\\core.js\n\nFuncUnit = function( selector, frame ) {\n\t\t// if you pass true as context, this will avoid doing a synchronous query\n\t\tvar frame,\n\t\t\tforceSync, \n\t\t\tisSyncOnly = false;\n\n\t   var callerFirstArgument = FuncUnit.caller.arguments[0];\n\n\t   if(callerFirstArgument && callerFirstArgument.test){\n\t\t\t\tFuncUnit.assert = callerFirstArgument;\n\t   }\n2- Use local assert in place of global assert\nfuncunit\\browser\\adapters\\qunit.js\nif(window.QUnit) {\n  var done,\n   assert;\n\n  FuncUnit.unit = {\n  pauseTest:function(){\n   assert = FuncUnit.assert;\n   done = assert.async();\n  },\n  resumeTest: function(){\n   done();\n  },\n  assertOK: function(assertion, message){\n   assert.ok(assertion, message);\n  },\n  equiv: function(expected, actual){\n   return QUnit.equiv(expected, actual);\n  }\n}", "reactions_count": 2, "reactions_data": ["THUMBS_UP", "THUMBS_UP"]}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-08T12:29:02Z", "contents": "Thanks @shayaneumar, do you plan to submit these? Does this allow fully updating to a new QUnit version 1.14 or higher?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "shayaneumar", "authorAssociation": "NONE", "createdAt": "2017-04-18T12:00:28Z", "contents": "@binodpanta I have tested it only with qunit v2.3.2, changes suggested here are also not backward compatible. I am not very confident with the code change above I was thinking anyone from the team can help me with this, I want o upgrade my tests to qunit2 asap. I will try to raise a PR for this if I get some time.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "kdillon", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-18T15:42:09Z", "contents": "If it isn't backward compatible, we can always release it as a major-version update.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2017-04-18T17:43:49Z", "contents": "I've not really been following this. Is it possible to test which version of QUnit is present and do the right thing?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "shayaneumar", "authorAssociation": "NONE", "createdAt": "2017-04-20T12:11:26Z", "contents": "@binodpanta here is the PR to support that stealjs/steal-qunit#26.\nI had to make changes in steel-qunit as well to support that shayaneumar/steal-qunit@6724346", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "kjdonahue", "authorAssociation": "NONE", "createdAt": "2017-05-17T18:23:17Z", "contents": "This update does not seem to resolve the initial issue raised by @binodpanta where calling F.open() from a callback passed to QUnit.moduleStart() throws.  In 1.23.1 the Uncaught Error: Called stop() outside of a test context message is present.  In >=2.0, the following message is present:\nTypeError: Cannot read property 'semaphore' of undefined at Object.async (http://localhost:61193/test/funcunit/qunit.js:1393:7) at Object.pauseTest (http://localhost:61193/test/funcunit/funcunit.js:2555:34) at Function.FuncUnit.add (http://localhost:61193/test/funcunit/funcunit.js:3196:27) at Function.open (http://localhost:61193/test/funcunit/funcunit.js:2660:22) at Object.<anonymous>", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-05-17T18:51:26Z", "contents": "indeed this will be a major blocker for us", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "binodpanta", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-05-19T14:25:44Z", "contents": "Just want to raise this point (I have asked Kevin to discuss this with the core group at some point)\nI just wanted to make this point that this problem is demonstrable if you take FuncUnit out of the picture and do this ( feel free to use this content when you discuss with the FuncUnit team, if needed )\n<head><link rel=\"stylesheet\" href=\"https://code.jquery.com/qunit/qunit-1.23.1.css\"></head>\n  \n<script src=\"https://code.jquery.com/qunit/qunit-1.23.1.js\"></script>\n<body>\n<div id=\"qunit\"></div>\n  <div id=\"qunit-fixture\"></div>\n  \n<script >\nQUnit.config.autostart = false;\n\nQUnit.moduleStart(function() {\n    QUnit.stop();< ============================ this line fails with this error as of qunit1.17 or higher\n});\n\nQUnit.test(\"hello\", function(assert) {\n    assert.ok(1==1,'failed');\n});\n\nsetTimeout(function() {QUnit.start()}, 3000);\n</script>\n</body>\n\nSo the analysis here is:\n\nQUnit does not allow Qunit.stop to be used in moduleStart/stop since it is not considered Test content according to it\nFuncUnit\u2019s F.open/close when using Qunit adapter, uses QUnit.start/stop\nHence this problem also reflects in F.open/close\n\nQuestion now is , which of these is approaches is the best fix?\n\nShould Qunit make a change to allow this?\nShould FuncUnit use methods other than QUnit.start/stop within F.open/close?\nTests should avoid use F.open/close in moduleStart/Stop\n\nPuzzle for me is :\nIt appears that @shayaneumar 's fix no longer uses QUnit.start/stop so I wonder why this still does not work?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "m-mujica", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-05-21T03:25:52Z", "contents": "hey @binodpanta, Manuel here, I work at Bitovi and I'd like to help solve this issue.\nI'm kinda confused about what's exactly the problem here.\n\nWhy are you using QUnit.moduleStart? I would not use moduleStart/moduleDone instead of beforeEach/afterEach; the former are useful hooks if you need to collect test metadata or implement your own reporter. The latter are meant to setup code specific to the suite of tests you're running.\n\nThat said, if you use beforeEach/afterEach do you run into any issues?\nQUnit.module( \"module A\", {\n  before: function() {\n    // prepare something once for all tests\n  },\n  beforeEach: function() {\n    // prepare something before each test\n  },\n  afterEach: function() {\n    // clean up after each test\n  },\n  after: function() {\n    // clean up once after all tests are done\n  }\n});\nif you have a breaking example that would be useful, too. I looked into the zip file you shared and rewriting your test to:\nF.attach(QUnit);\n\nQUnit.module(\"testing qunit 1.17\", {\n  before: function() {\n    F.open(\"./anotherpage.html\");\n  };\n});\n\nQUnit.test(\"atest\", function(assert) {\n  F(\"body\").visible(\"assertion needed\");\n  F.wait(1, function(){F.win.close();});\n});\nmade it pass!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "m-mujica", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-05-21T03:28:31Z", "contents": "if you are concerned about changing a bunch of tests, you could look into a codemod to make it easier. We recently migrated all stealjs tests to Qunit 2.x stealjs/steal#1154 and with qunit-migrate it was not bad at all.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "help wanted", "p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 156, "url": "https://github.com/bitovi/funcunit/issues/156", "title": "F.open() doesn't throw when violating same-origin", "contents": "You can't, for example, load google.com from localhost. This fails, but does so silently.\nWe do catch the error in a try/catch here. We could improve this by checking the error in the catch and if it is a SecurityError, rethrow so the user can see the error.\nChrome and Firefox give a different error message, so detecting this might be tricky.", "createdAt": "2016-08-11T17:56:56Z", "updatedAt": "2016-10-31T19:46:58Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "matthewp", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "help wanted", "p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 158, "url": "https://github.com/bitovi/funcunit/issues/158", "title": "perform a test during a mousedown event", "contents": "I want to write a test when the mousedown event is triggered. A class is add during the mousedown and removed at the mouseup event. At the moment it is only possible to perform a \".click()\" which triggers a mousedown and also a mouseup event so I can not test if the class is added between the mousedown and the mouseup event.", "createdAt": "2016-10-14T06:47:06Z", "updatedAt": "2016-10-31T19:45:24Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "swipie", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "swipie", "company": null}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 159, "url": "https://github.com/bitovi/funcunit/issues/159", "title": "Get CanJS-like release script working", "contents": "include dist\nmake sure travis is working\nget rid of grunt and bower\nmake sure dist is exporting FuncUnit", "createdAt": "2016-10-24T14:56:59Z", "updatedAt": "2016-10-26T14:32:59Z", "closedAt": "2016-10-26T14:32:54Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "justinbmeyer", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["enhancement", "p1"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 161, "url": "https://github.com/bitovi/funcunit/issues/161", "title": "Write a contributing guide", "contents": "A single page with some of the information in the contributing section of: http://canjs.github.io/canjs/doc/guides.html", "createdAt": "2016-10-25T15:37:50Z", "updatedAt": "2016-10-28T17:30:43Z", "closedAt": "2016-10-28T17:30:40Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "justinbmeyer", "company": "Bitovi"}, {"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p1"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 162, "url": "https://github.com/bitovi/funcunit/issues/162", "title": "Get documentation working", "contents": "Use documentjs (not bit-docs for now)\nUse canjs style makefile for getting docs over to gh-pages", "createdAt": "2016-10-25T15:52:36Z", "updatedAt": "2016-10-28T13:29:14Z", "closedAt": "2016-10-28T13:29:10Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p1"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 164, "url": "https://github.com/bitovi/funcunit/issues/164", "title": "Update examples to use NPM/Steal", "contents": "The pages in sites/examples/ are currently pointing to files in sites/examples/resources via <script> tags.  These should be updated to use NPM/Steal.\nThe same should also be done for any references to files in the following directories\n\nsite/app/lib/\nsite/examples/todo/js/\nsite/examples/todo/bower_components/", "createdAt": "2016-10-27T19:36:21Z", "updatedAt": "2016-10-31T19:42:08Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 170, "url": "https://github.com/bitovi/funcunit/issues/170", "title": "Mixed content errors on docs site when loading over https", "contents": "It's trying to get:\nhttp://ghbtns.com/github-btn.html?user=bitovi&repo=funcunit&type=watch&count=true\nhttp://ghbtns.com/github-btn.html?user=bitovi&repo=funcunit&type=fork&count=true\nand\nhttp://api.bithub.com/api/events/summary?origin_date=2013-10-31%3A", "createdAt": "2016-10-31T17:10:44Z", "updatedAt": "2016-11-02T22:01:49Z", "closedAt": "2016-11-02T22:01:45Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "documentation", "p1", "website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 171, "url": "https://github.com/bitovi/funcunit/issues/171", "title": "Update travis.yml firefox version", "contents": "set firefox version to something around 48", "createdAt": "2016-10-31T17:44:16Z", "updatedAt": "2016-11-02T19:25:39Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p3"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 173, "url": "https://github.com/bitovi/funcunit/issues/173", "title": "Use continuous deployment with travis", "contents": "#168", "createdAt": "2016-11-01T16:55:36Z", "updatedAt": "2016-11-01T16:55:36Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["p4", "website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 181, "url": "https://github.com/bitovi/funcunit/issues/181", "title": "FuncUnit.com audit", "contents": "Go through the website and look for broken demos & links, missing images & videos, spelling & grammar issues, accessibility issues, poor performance, etc.", "createdAt": "2016-11-15T23:55:32Z", "updatedAt": "2017-03-03T06:56:28Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["developer relations", "p3"], "milestone": {"id": "MDk6TWlsZXN0b25lNDUyMDY3", "title": "v2.1", "description": "", "createdAt": "2013-10-10T19:43:01Z", "dueOn": null, "number": 2, "closed": false}}, {"repo_name": "bitovi/funcunit", "issue_id": 182, "url": "https://github.com/bitovi/funcunit/issues/182", "title": "Add blur action for testing blur events.", "contents": "If in a component's event we listen to a blur even like this:\nComponent.extend({\n        tag : 'my-component',\n        viewModel : myVM,\n        events : {\n            '.my-message blur': function (element) {\n                this.viewModel.doSmth();\n            }\n        }\nit would be nice to be able to:\nF('.my-message').blur( function() {\n       // ...\n});", "createdAt": "2016-12-21T21:30:48Z", "updatedAt": "2017-05-03T20:43:30Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "ilyavf", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "ilyavf", "company": null}, {"login": "justinbmeyer", "company": "Bitovi"}, {"login": "imaustink", "company": "@bitovi "}], "comments_count": 1, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2016-12-22T04:04:11Z", "contents": "I think you can click the document as a shorthand for what the user would do.\n\u2026\nSent from my iPhone\n On Dec 21, 2016, at 3:30 PM, Ilya Fadeev ***@***.***> wrote:\n\n If in a component's event we listen to a blur even like this:\n\n Component.extend({\n         tag : 'my-component',\n         viewModel : myVM,\n         events : {\n             '.my-message blur': function (element) {\n                 this.viewModel.doSmth();\n             }\n         }\n it would be nice to be able to:\n\n F('.my-message').blur( function() {\n        // ...\n });\n \u2014\n You are receiving this because you are subscribed to this thread.\n Reply to this email directly, view it on GitHub, or mute the thread.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 186, "url": "https://github.com/bitovi/funcunit/issues/186", "title": "[ctrl/alt/cmd/shift]-click support", "contents": "We would like to have special-key click support to test a multi-select table.\nI've tried setting syn's ctrlKey to true and then perform a click, but it doesn't work.\nsyn.key.ctrlKey = true;\nF('.table__row:even').click();", "createdAt": "2017-02-07T08:10:07Z", "updatedAt": "2017-04-19T15:31:08Z", "closedAt": "2017-04-19T15:31:08Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "jeroencornelissen", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "jeroencornelissen", "company": null}, {"login": "matthewp", "company": "Bitovi"}, {"login": "kdillon", "company": "MathWorks"}], "comments_count": 2, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-02-07T12:54:25Z", "contents": "Can you do something like this? https://github.com/bitovi/syn/blob/master/test/key_test.js#L423", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "kdillon", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-18T20:15:35Z", "contents": "There was a bug in ctrl. It should be fixed in the latest version of Syn", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 187, "url": "https://github.com/bitovi/funcunit/issues/187", "title": "Do not set window.jQuery", "contents": "The jquery imported calls noConflict which cleans up global $ and jQuery. This file then puts the old version of jQuery back on window.jQuery\nSo if you are using jquery plugins that pass window.jQuery into an IIFE you will be using the FuncUnit version of jQuery in the plugin but a newer version in Can (and your tests)\nProposed solution \u2013\u00a0Remove this line:\nhttps://github.com/bitovi/funcunit/blob/master/browser/init.js#L4\nwindow.jQuery = jQuery;", "createdAt": "2017-02-13T16:23:58Z", "updatedAt": "2017-04-10T19:15:00Z", "closedAt": "2017-04-10T19:15:00Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 4, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "jeroencornelissen", "company": null}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-02-13T16:32:49Z", "contents": "LGTM, just need a different entry point for the global build, create a global.js that imports FuncUnit's main and then sets window.jQuery = jQuery.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "jeroencornelissen", "authorAssociation": "NONE", "createdAt": "2017-02-28T07:26:17Z", "contents": "+1\nWe have a simular issue when importing jquery-ui.", "reactions_count": 3, "reactions_data": ["THUMBS_UP", "THUMBS_UP", "THUMBS_UP"]}], "reactions_count": 3, "reactions_data": ["THUMBS_UP", "THUMBS_UP", "THUMBS_UP"], "labels": ["bug", "p1"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 188, "url": "https://github.com/bitovi/funcunit/issues/188", "title": "Document how to test mouseover", "contents": "It\u2019d be helpful to have docs on how to write a \u201ctest for something with a mouseover\u201d: https://gitter.im/bitovi/funcunit?at=58ac5d55872fc8ce626577cf", "createdAt": "2017-02-21T17:14:52Z", "updatedAt": "2017-07-31T15:46:04Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}, {"login": "bitwhiz", "company": null}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["documentation", "help wanted"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 190, "url": "https://github.com/bitovi/funcunit/issues/190", "title": "Update Syn", "contents": "Update Syn to include the fix for bitovi/syn#122", "createdAt": "2017-02-23T01:23:06Z", "updatedAt": "2017-02-24T18:01:49Z", "closedAt": "2017-02-24T18:01:44Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 192, "url": "https://github.com/bitovi/funcunit/issues/192", "title": "Automatically update the version number on the home page", "contents": "When a new version of FuncUnit is released and the website is updated, the home page should have the updated version number.\nRelated to #180", "createdAt": "2017-03-01T22:06:35Z", "updatedAt": "2017-04-04T19:14:00Z", "closedAt": "2017-04-04T19:14:00Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}, {"login": "bitwhiz", "company": null}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["developer relations", "enhancement", "help wanted", "p1", "website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 196, "url": "https://github.com/bitovi/funcunit/issues/196", "title": "Improve the FuncUnit.com build", "contents": "You can run make to build & deploy the FuncUnit site, but the way it works seems like a hack:\n\nThe site folder has its own Makefile and package.json, which seems odd\nAt least one file is force-added unnecessarily (that whole script could probably use some attention/verification)\nStatic resources are loaded from different folders, depending on which main section you\u2019re on (i.e. the home page loads resources from site/static, while the Guides page loads from guides/static)\n\nHome page:\n\nGuides page:", "createdAt": "2017-04-06T23:30:40Z", "updatedAt": "2017-07-20T00:07:20Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}, {"login": "imaustink", "company": "@bitovi "}], "comments_count": 3, "comments_data": [{"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2017-05-12T16:28:15Z", "contents": "make doesn\u2019t work out of the box on Windows. In the 2017-05-12 contributors meeting we discussed converting it to a Node.js script and using ShellJS.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2017-06-26T20:02:47Z", "contents": "Building the site is not working for me on Node 8 and npm 5 (it spits out an error about not being able to find brace-expansion).", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2017-07-20T00:06:09Z", "contents": "Basically everything in the original issue description still needs to be done, but we\u2019re part way to making things better with Replace the Makefile with a Node script.\nI\u2019m moving this issue to the backlog because the rest of the fixes are not as urgent.\nAnother note: with the above PR, I was able to deploy the site with Node 8.1.4 and npm 5.3.0", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["cleanup", "developer relations", "help wanted", "p2", "website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 198, "url": "https://github.com/bitovi/funcunit/issues/198", "title": "point to global.js in build but not in package.json", "contents": "this: https://github.com/bitovi/funcunit/blob/master/package.json#L67\nshould be:\n\"main\": \"funcunit\",\n\n..and then add\nsystem: {\n main: \"global\"\n}\n\nto outputs.global in https://github.com/bitovi/funcunit/blob/master/build.js", "createdAt": "2017-04-11T18:03:10Z", "updatedAt": "2017-04-11T22:05:27Z", "closedAt": "2017-04-11T22:05:27Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 200, "url": "https://github.com/bitovi/funcunit/issues/200", "title": "System.import funcunit somehow stops qunit's beforeEach hook to run", "contents": "This test fails:\nimport QUnit from 'steal-qunit';\n\nSystem.import('funcunit').then(function (F) {\n\t// F.attach(QUnit);\n\tlet beforeEachHasRun = false;\n\n\tQUnit.module('[Functional] System.import funcunit', {\n\t\tbeforeEach(assert) {\n\t\t\tbeforeEachHasRun = true;\n\t\t},\n\t\tafterEach() {\n\t\t\tbeforeEachHasRun = false;\n\t\t}\n\t});\n\n\tQUnit.test('before each ran for this test', function (assert) {\n\t\tassert.ok(beforeEachHasRun);\n\t});\n\tQUnit.test('before each ran for this test, too', function (assert) {\n\t\tassert.ok(beforeEachHasRun); //this fails\n\t});\n});\n..notice that the F.attach(QUnit) is commented out...", "createdAt": "2017-04-12T21:58:11Z", "updatedAt": "2017-04-17T14:56:20Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}, {"login": "matthewp", "company": "Bitovi"}], "comments_count": 11, "comments_data": [{"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-12T22:03:26Z", "contents": "Here's a branch with some tests: https://github.com/bitovi/funcunit/tree/200-system-import-funcunit\nThis passes: ES6 Import ( html file )\nThis Fails: System.import ( html file )", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-12T23:05:57Z", "contents": "I'm a little confused, it fails because you never attach a test runner, right? You have to attach QUnit or FuncUnit doesn't have a test runner to use.  Maybe I'm misunderstanding the bug though.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-12T23:16:33Z", "contents": "It fails with or without the F.attach(QUnit).  It is commented out to show that it isn't anything within the attachment of QUnit to Funcunit that is causing the issue.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-12T23:21:06Z", "contents": "More specifically, we're not actually using anything from FuncUnit in this test.  We're simply wrapping our QUnit test in a System.import of funcunit, and that in itself seems to cause QUnit to not behave as expected (namely, the beforeEach runs for the first test but not for the second).", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-12T23:28:31Z", "contents": "Oh, I see. steal-qunit will automatically run your tests once the main has finished loading. Since you are adding tests after the main has loaded, steal-qunit has already started QUnit before those tests are defined.\nI'm not really sure what a good workaround for that might be.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-12T23:31:28Z", "contents": "there's not a way to tell steal-qunit to wait?  something like\nimport QUnit from 'steal-qunit';\nQUnit.dontStartTestsUntil(System.import(\"funcunit\")).then((F) => { \n  /* ... */ \n});\n..maybe?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-12T23:46:45Z", "contents": "No, maybe steal-qunit could check if QUnit.config.autostart !== false before doing its thing, or something like that, in which case you would have to start the tests yourself.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-13T12:36:30Z", "contents": "Have you tried using start/stop in your test directly?\nimport QUnit from 'steal-qunit';\n\nQUnit.stop();\n\nSystem.import('funcunit').then(function(){\n  // add tests here\n  \n  QUnit.start();\n});", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-17T14:05:33Z", "contents": "I'll try that and let you know; thanks!", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-17T14:35:16Z", "contents": "That gets:", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-04-17T14:56:19Z", "contents": "I that case we need some feature added to steal-qunit like described here that will delay starting the tests until you tell it to.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 201, "url": "https://github.com/bitovi/funcunit/issues/201", "title": "Provide a range of jQuery versions", "contents": "We should provide a range of jQuery versions for our jQuery dependency so that it is more likely that FuncUnit can utilize the app's version.\nSomething like:\n\"dependencies\": {\n  \"jquery\": \">=1.9.0 <1.12.0 || >=2.1.0 <2.3.0\"\n},", "createdAt": "2017-04-17T16:55:17Z", "updatedAt": "2017-04-17T16:55:17Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "mickmcgrath13", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "mickmcgrath13", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 206, "url": "https://github.com/bitovi/funcunit/issues/206", "title": "Throws error when using the click method on the document", "contents": "If you use .click like this f.click(document), it throws the following error.\nsyn.js:173 Uncaught TypeError: Cannot read property 'jQuery' of undefined\n    at Function.jquery (https://unpkg.com/syn@0.5.0/dist/global/syn.js:173:49)\n    at Object.addOffset (https://unpkg.com/syn@0.5.0/dist/global/syn.js:326:30)\n    at init._click (https://unpkg.com/syn@0.5.0/dist/global/syn.js:515:25)\n    at new init (https://unpkg.com/syn@0.5.0/dist/global/syn.js:155:27)\n    at syn (https://unpkg.com/syn@0.5.0/dist/global/syn.js:131:20)\n    at Function.syn.(anonymous function) [as click] (https://unpkg.com/syn@0.5.0/dist/global/syn.js:578:24)\n    at HTMLDocument.<anonymous> (https://fiddle.jshell.net/0xxjv2o0/1/show/:49:5)\n    at fire (https://code.jquery.com/jquery-2.1.3.js:3094:30)\n    at Object.fireWith [as resolveWith] (https://code.jquery.com/jquery-2.1.3.js:3206:7)\n    at Function.ready (https://code.jquery.com/jquery-2.1.3.js:3412:13)\n\nJSfiddle", "createdAt": "2017-05-09T02:49:48Z", "updatedAt": "2017-05-12T00:36:30Z", "closedAt": "2017-05-12T00:36:30Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "imaustink", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "imaustink", "company": "@bitovi "}, {"login": "chasenlehara", "company": "@bitovi"}, {"login": "justinbmeyer", "company": "Bitovi"}], "comments_count": 3, "comments_data": [{"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2017-05-09T16:39:25Z", "contents": "That looks like an issue in Syn, is it not?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2017-05-09T16:51:31Z", "contents": "Try on the document.documentElement or document.body then.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "imaustink", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-05-12T00:36:30Z", "contents": "Issue moved to bitovi/syn #140 via ZenHub", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "help wanted", "p1"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 207, "url": "https://github.com/bitovi/funcunit/issues/207", "title": "Set up SauceLabs for browser testing", "contents": "We ran into an issue where Funcunit was throwing an error on Chrome 58 on Windows 10: canjs/canjs#3235. We should set up SauceLabs testing for funcunit so we can catch these issues earlier.\nSetting up SauceLabs is relatively easy using the test-saucelabs package like we are using in canjs here: https://github.com/canjs/canjs/blob/master/test/test-sauce-labs.js.", "createdAt": "2017-05-11T15:18:28Z", "updatedAt": "2017-05-31T14:29:08Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "phillipskevin", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "phillipskevin", "company": "Bitovi"}, {"login": "morrme", "company": null}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 3, "comments_data": [{"authorLogin": "morrme", "authorAssociation": "NONE", "createdAt": "2017-05-30T22:46:26Z", "contents": "@phillipskevin can I try this one?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "phillipskevin", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-05-31T14:26:57Z", "contents": "Yeah, definitely. I'll assign it to you, @morrme.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "phillipskevin", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-05-31T14:29:08Z", "contents": "Ok, I can't assign it to you, but it's all yours.", "reactions_count": 1, "reactions_data": ["THUMBS_UP"]}], "reactions_count": 0, "reactions_data": [], "labels": ["developer relations", "help wanted"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 208, "url": "https://github.com/bitovi/funcunit/issues/208", "title": "Add a Press Kit page", "contents": "It should be the last page under Guides.", "createdAt": "2017-06-27T14:04:12Z", "updatedAt": "2017-06-27T14:04:12Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}, {"login": "jamiemccue", "company": "Architexture"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["design", "developer relations"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 210, "url": "https://github.com/bitovi/funcunit/issues/210", "title": "CI Failing", "contents": "Travis fails for just about anything with an issue related to node-gyp.\nTests pass locally on OS X for funcunit@0.4.0.\nThis does not appear to be a Node 8 issue as the tests pass locally with Node 8 and Node 6. This should be confirmed by locking down the Node version. Currently, Travis runs Node 8 by default.", "createdAt": "2017-06-28T14:25:50Z", "updatedAt": "2017-06-28T16:11:36Z", "closedAt": "2017-06-28T16:11:36Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "andrejewski", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "andrejewski", "company": "@stripe"}], "comments_count": 1, "comments_data": [{"authorLogin": "andrejewski", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-06-28T16:11:36Z", "contents": "Closed by #212, however Node 8 should be supported so the issue #213 addresses that.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p0"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 211, "url": "https://github.com/bitovi/funcunit/issues/211", "title": "Function.caller does not work strict mode", "contents": "The QUnit2 change takes advantage of Function.caller which breaks people who are using 'strict mode';. We should look for alternatives or workarounds.", "createdAt": "2017-06-28T15:47:15Z", "updatedAt": "2017-06-28T18:39:03Z", "closedAt": "2017-06-28T18:39:03Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "andrejewski", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "andrejewski", "company": "@stripe"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 213, "url": "https://github.com/bitovi/funcunit/issues/213", "title": "Test against Node 8", "contents": "Currently, FuncUnit CI tests will run using Node 7. We should support Node 8.", "createdAt": "2017-06-28T16:11:11Z", "updatedAt": "2018-06-22T23:43:15Z", "closedAt": "2018-06-22T23:43:15Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "andrejewski", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "andrejewski", "company": "@stripe"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 215, "url": "https://github.com/bitovi/funcunit/issues/215", "title": "Set up Google Analytics", "contents": "", "createdAt": "2017-07-18T23:36:15Z", "updatedAt": "2017-07-20T15:47:06Z", "closedAt": "2017-07-20T15:47:06Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["developer relations", "website"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 218, "url": "https://github.com/bitovi/funcunit/issues/218", "title": "how can i install funcit from github?", "contents": "In a separate post, i found the link of funcit\nhttps://github.com/jupiterjs/funcit\nHow can i install(or use) it after downloading the project from github?", "createdAt": "2017-07-25T19:07:58Z", "updatedAt": "2017-07-25T20:44:38Z", "closedAt": "2017-07-25T20:44:38Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "debajyoti3061", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "debajyoti3061", "company": null}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2017-07-25T20:44:38Z", "contents": "Hi @debajyoti3061, https://github.com/jupiterjs/funcit is no longer actively maintained and no one is supporting it.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 219, "url": "https://github.com/bitovi/funcunit/issues/219", "title": "Advertise the community survey on funcunit.com", "contents": "", "createdAt": "2017-09-11T22:14:16Z", "updatedAt": "2017-09-18T01:44:57Z", "closedAt": "2017-09-18T01:44:57Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2017-09-18T01:44:57Z", "contents": "Closing this because we won\u2019t have questions on the survey related to this project.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["developer relations"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 220, "url": "https://github.com/bitovi/funcunit/issues/220", "title": "dist folder not included on npm", "contents": "I just tried republishing but it didn\u2019t include the dist folder. Nothing obvious sticks out to me as to why it\u2019s not being published.", "createdAt": "2017-10-16T18:52:44Z", "updatedAt": "2017-10-24T15:51:39Z", "closedAt": "2017-10-24T15:51:39Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 2, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}, {"login": "mckenna", "company": "Intercom"}], "comments_count": 4, "comments_data": [{"authorLogin": "mckenna", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-10-23T23:03:44Z", "contents": "I'd love to help with this. Currently blocked from upgrading from v3.0.0 (the last version to include dist/ in source). The preversion script should be run via the npm lifecycle hooks.\nI don't have a tonne of experience working with npm, but I cloned the repository and published  funcunit to my own namespace to see what happens. When I published, I noticed that the preversion script never ran. Do you have any visibility on whether this script runs for you on publish?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2017-10-23T23:23:27Z", "contents": "Thanks for the help @mckenna, it\u2019s really appreciated!\npreversionshould definitely run; I thought I did when I tried republishing last week.\nI\u2019ve been looking at can-param for reference because it does publish dist correctly. These npm scripts look the same to me as what FuncUnit has, but I just noticed that the repo has a .npmignore file and this FuncUnit repo doesn\u2019t.\nWould you mind adding that file to your test repo and republishing? If it works and you could submit a PR, I can get it merged and released today.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mckenna", "authorAssociation": "CONTRIBUTOR", "createdAt": "2017-10-24T06:25:35Z", "contents": "Good call. I added the .npmignore file to my test repo and when I deployed it, the dist/ folder was included. I've submitted a PR to include it.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2017-10-24T15:51:39Z", "contents": "Just published v3.4.4 with your fix. Thank you @mckenna!", "reactions_count": 1, "reactions_data": ["HOORAY"]}], "reactions_count": 0, "reactions_data": [], "labels": ["help wanted", "p1"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 223, "url": "https://github.com/bitovi/funcunit/issues/223", "title": "Failure while using F.attach(Qunit)", "contents": "The code below is taken from the QUnit homepage with just 1 addition of funcunit.js\nThe failure point is F.attach(QUnit). The error is\nReferenceError: arugments is not defined\nat Object. (https://rawgit.com/bitovi/funcunit/v3.4.2/dist/funcunit.js:8874:41)\nI am looking for a workaround for this as this biting me at many other places.\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>QUnit Example</title>\n  <link rel=\"stylesheet\" href=\"https://code.jquery.com/qunit/qunit-2.6.1.css\">\n</head>\n<body>\n  <div id=\"qunit\"></div>\n  <div id=\"qunit-fixture\"></div>\n  <script src=\"https://code.jquery.com/qunit/qunit-2.6.1.js\"></script>\n  <script type=\"text/javascript\" src=\"https://rawgit.com/bitovi/funcunit/v3.4.2/dist/funcunit.js\"></script>\n\n  <script type=\"text/javascript\">\n    F.attach(QUnit);\n    QUnit.test( \"hello test\", function( assert ) {\n      assert.ok( 1 == \"1\", \"Passed!\" );\n    });\n  </script>\n</body>\n</html>", "createdAt": "2018-05-18T09:08:47Z", "updatedAt": "2018-06-25T14:29:07Z", "closedAt": "2018-06-25T14:29:07Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "mgarg1", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "mgarg1", "company": null}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2018-05-18T15:57:32Z", "contents": "I think this is the line that needs to be updated: \n  \n    \n      funcunit/browser/adapters/qunit2.js\n    \n    \n         Line 17\n      in\n      7ec6932\n    \n    \n    \n    \n\n        \n          \n           return test.apply(this, arugments); \n        \n    \n  \n\n\n@mgarg1 Would you be willing to submit a PR that fixes that line?", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "mgarg1", "authorAssociation": "NONE", "createdAt": "2018-05-23T09:25:09Z", "contents": "@chasenlehara  The issue is very complex then fixing this line. After fixing that line to :\n return test.apply(this,(arguments === undefined ? assert : arguments));\nI am seeing the failure in the same module at line 8879 which is because of the currentTestAssert is not being assigned prior to the execution of before hook.\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>QUnit Example</title>\n  <link rel=\"stylesheet\" href=\"https://code.jquery.com/qunit/qunit-2.6.1.css\">\n</head>\n<body>\n  <div id=\"qunit\"></div>\n  <div id=\"qunit-fixture\"></div>\n  <script src=\"https://code.jquery.com/qunit/qunit-2.6.1.js\"></script>\n  <script type=\"text/javascript\" src=\"https://rawgit.com/bitovi/funcunit/v3.4.2/dist/funcunit.js\"></script>\n\n  <script type=\"text/javascript\">\n    F.attach(QUnit);\n\n    QUnit.module(\"MainTestModule\", {\n        before: function()\n        {\n            console.log(\"In Before\");\n            F.open(\"google.com\",function(){});\n        }\n    });\n    \n    QUnit.test( \"hello test\", function( assert ) {\n      assert.ok( 1 == \"1\", \"Passed!\" );\n    });\n  \n  </script>\n</body>\n</html>\n\nThe adapter is taking care of the case when a test is executed but it fails to capture the correct assert when hooks are executed.In order to fix this issue just changing the QUnit.test won't suffice. We need to somehow do the same for module hooks.", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 224, "url": "https://github.com/bitovi/funcunit/issues/224", "title": "FuncUnit + iframe: click() on link (<a>) tage produces false positive. ", "contents": "I am implementing a test where the PageUnderTest(PUT) will open and contains iframe in it which loads content dynamically with javascript. I was able to move into the iframe content, get ids and link tags. When I use click() on one of the links, code execution moves into success call back, but the page stays as is on the landing page. Sample code below\nF('iframe').contents().find(\"#nav_toggle button\").exists(\"button exist\").click(20000,function() {\n\t  \t\tconsole.log(\"ok\")\n},\"was able to click the button\");\n\nTried:\nF('iframe',0).contents()...\nF('#iframe_id').contents()...\nand without chaining.\nAnother code sample:\nF('iframe').contents().find(\"a[href='index.html']:first\").click(20000,function() {\n\t    \t\talert('ok')\n\t});\n\nBug? Any help is appreciated.\nFuncUnit version - 3.3  along with Qunit 1.17.1\nBrowser - Chrome - 67.0.3396.79\nComputer - iMac with 10.10.3 Yosemite", "createdAt": "2018-06-08T20:40:05Z", "updatedAt": "2018-06-13T20:12:56Z", "closedAt": "2018-06-13T20:12:56Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "pawanpe", "authorAssociation": "NONE", "participants_count": 1, "participants_data": [{"login": "pawanpe", "company": null}], "comments_count": 1, "comments_data": [{"authorLogin": "pawanpe", "authorAssociation": "NONE", "createdAt": "2018-06-13T20:12:56Z", "contents": "Closing this. I got this working with querying specific elements with index values.", "reactions_count": 1, "reactions_data": ["THUMBS_UP"]}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 228, "url": "https://github.com/bitovi/funcunit/issues/228", "title": "Remove the dependency on jquery", "contents": "I did a spike on seeing if we could remove jquery as a dependency: https://github.com/bitovi/funcunit/tree/no-jq\nIt didn't quite succeed. Some of the issues I ran into:\n\nThere are uses of .val() and .text(), etc. that we'd have to write our\nown versions of.\nThere are jqueryisms in the test and some dependencies on jquery-only\nselectors.", "createdAt": "2018-11-01T16:23:01Z", "updatedAt": "2018-11-01T16:23:01Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "participants_count": 1, "participants_data": [{"login": "matthewp", "company": "Bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 229, "url": "https://github.com/bitovi/funcunit/issues/229", "title": "Make FuncUnit use async/await rather than a queue system", "contents": "This is a future proposal that needs to be more fully thoroughly thought out.", "createdAt": "2018-11-01T16:23:51Z", "updatedAt": "2018-11-01T16:40:11Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "participants_count": 2, "participants_data": [{"login": "matthewp", "company": "Bitovi"}, {"login": "justinbmeyer", "company": "Bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "justinbmeyer", "authorAssociation": "MEMBER", "createdAt": "2018-11-01T16:40:11Z", "contents": "I'd also like to throw in making it very functional.\nimport FuncUnit as F from \"funcunit\"\n\ntest(async function(){\n  await F.click( querySelector(\"#button\") )\n  await F.textContent( querySelector(\"#details\"), \"Hi there\" )\n  assert(true, \"text is hi there\")\n})\nF would just expose functions that return promises.  await use would be expected.  We'd have functions that would be similar to what we have now, but more DOM-focused APIs and less jQuery-focused APIs:\n\ntextContent instead of text\ninnerHTML instead of html\nvalue instead val\n\nI think we could get rid of many traversal methods. For example\nawait F.click( querySelector(\"#button\") )\nawait F.textContent( querySelector(\"#details\").parentNode , \"Hi there\" )\nassert(true, \"text is hi there\")\nThough we still might want some form of \"wait\" with traversal:\nawait F.click( querySelector(\"#button\") )\n\ndetails = await F.querySelector(\"#details\")\nchild = await F.querySelector(child, \".someElement\"); // obviously this could be done with one call\nawait F.textContent( child, \"Hi there\" )\nassert(true, \"text is hi there\")", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 232, "url": "https://github.com/bitovi/funcunit/issues/232", "title": "dist folder not included on npm", "contents": "Dist folder is not included in latest version on npm.\nLooks like same issue as #220\nI recommend setting up prepublish script hook.", "createdAt": "2019-01-09T17:59:40Z", "updatedAt": "2019-01-25T16:08:36Z", "closedAt": "2019-01-25T16:08:36Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "danielhusar", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "danielhusar", "company": "@intercom"}, {"login": "cherifGsoul", "company": "Interactive Bits"}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "cherifGsoul", "authorAssociation": "CONTRIBUTOR", "createdAt": "2019-01-15T19:29:13Z", "contents": "Fixed and released", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["p1", "regression"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 234, "url": "https://github.com/bitovi/funcunit/issues/234", "title": "Can't do async operations in QUnit2 before/after hooks", "contents": "The current implementation of the qunit2 adaptor wraps up the QUnit.test method to cache away the assert object so that it can call it's \"async\" method. This needs to be generalized to allow such operations in all test context scopes, particularly in the before/beforeEach/after/afterEach module hooks; for example:\n    F.attach(QUnit);\n    QUnit.module(\"my mod\", {\n        before: () => {\n            F.wait(1, ()=>{});\n        }\n    });\n    QUnit.test(\"hello world\", (assert) => {\n        assert.ok(1); // trivial test\n    });\n\nWill throw the following:\nTypeError: Cannot read property 'async' of undefined\nI've tried out the following workaround in the qunit2 adapter (getting the current assert on-demand without caching), and it seems to work well:\n    module.exports = function (runner) {\n        var done;\n        var getCurrentAssert = function () {\n            if (runner.config.current) {\n                return runner.config.current.assert;\n            }\n            throw new Error(\"Outside of test context\");\n        }\n        return {\n            pauseTest: function () {\n                done = getCurrentAssert().async();\n            },\n            resumeTest: function () {\n                done();\n            },\n            assertOK: function (assertion, message) {\n                getCurrentAssert().ok(assertion, message);\n            },\n            equiv: function (expected, actual) {\n                return runner.equiv(expected, actual);\n            }\n        };\n    };\n\nOne gotcha that I'm not sure about is if we need a simple \"done\" variable, or if that should be a stack to push/pop.", "createdAt": "2019-02-08T15:51:23Z", "updatedAt": "2019-02-14T20:32:00Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "smcclure15", "authorAssociation": "NONE", "participants_count": 1, "participants_data": [{"login": "smcclure15", "company": "@MathWorks"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 236, "url": "https://github.com/bitovi/funcunit/issues/236", "title": "jQuery is not defined", "contents": "Upon funcunit import, we get... \"\nVM180:9958 Uncaught ReferenceError: jQuery is not defined\nat :9958:21\nat global.define (:73:36)\nat :9955:1\n(anonymous) @ VM180:9958\nglobal.define @ VM180:73\n(anonymous) @ VM180:9955\n\"\nThis could be a regression of #187 (similar syndrome), but I think jQuery is undefined prior to the failure moment described in 187.\nChasen suspects it might be related to changeset: #230\n... and I think he's on to something.", "createdAt": "2019-03-14T18:35:56Z", "updatedAt": "2019-03-15T12:51:52Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "kdillon", "authorAssociation": "CONTRIBUTOR", "participants_count": 3, "participants_data": [{"login": "kdillon", "company": "MathWorks"}, {"login": "chasenlehara", "company": "@bitovi"}, {"login": "matthewp", "company": "Bitovi"}], "comments_count": 4, "comments_data": [{"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2019-03-14T18:54:46Z", "contents": "A little more info\u2026 here\u2019s what the built file looks like:\ndefine('global', function (require, exports, module) {\n    require('funcunit');\n    var FuncUnit = window.FuncUnit || {};\n    window.jQuery = jQuery;\n    module.exports = FuncUnit;\n});\nI put a debugger statement before window.jQuery = jQuery to see the value of jQuery\n\n3.5.0: jQuery is undefined\n3.6.2: jQuery isn\u2019t defined, hence the reference error", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2019-03-14T20:13:40Z", "contents": "Sounds like the global module is wrong then. I don't know where this module is but if it wants to set jQuery on the window it should be importing it from within FuncUnit now.\nHaving jQuery be a global in the non-global build was a longstanding cause of pain for people.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2019-03-14T21:37:09Z", "contents": "Here\u2019s that issue I think: Do not set window.jQuery\nI think this is the global module: https://github.com/bitovi/funcunit/blob/master/global.js\nIs the solution to add var jQuery = require(\"funcunit/browser/jquery\"); to the global build?\nOr should this line: \n  \n    \n      funcunit/global.js\n    \n    \n         Line 4\n      in\n      bbc3c16\n    \n    \n    \n    \n\n        \n          \n           window.jQuery = jQuery; \n        \n    \n  \n\n\n\u2026be changed to:\nwindow.jQuery = FuncUnit.jQuery;\n\u2026or should the global build not set window.jQuery at all?\nI\u2019m not familiar with how FuncUnit is supposed to work with its own version of jQuery vs. imported versions, hence the uncertainty on my end. \ud83d\ude2c", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2019-03-15T12:51:52Z", "contents": "I'd say not set window.jQuery at all. FuncUnit uses it internally, but uses its own version now that is gets through the module loader. So I don't think setting window.jQuery is a good idea. The reason for getting rid of it was that it interfered with other jQuerys on the page.", "reactions_count": 2, "reactions_data": ["THUMBS_UP", "THUMBS_UP"]}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 238, "url": "https://github.com/bitovi/funcunit/issues/238", "title": "Lint all the files", "contents": "Right now only files in the browser/adapters/ folder are being linted: \n  \n    \n      funcunit/package.json\n    \n    \n         Line 34\n      in\n      c29154f\n    \n    \n    \n    \n\n        \n          \n           \"lint\": \"eslint browser/adapters/*.js *.js\", \n        \n    \n  \n\n\nThat glob should be expanded to something like: *.js browser/*.js browser/**/*.js\nThere are a bunch of linting errors in the browser/*.js files, so those will need to be fixed.", "createdAt": "2019-04-10T19:18:29Z", "updatedAt": "2019-04-10T19:18:29Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "participants_count": 1, "participants_data": [{"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 0, "comments_data": [], "reactions_count": 0, "reactions_data": [], "labels": ["cleanup", "help wanted"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 242, "url": "https://github.com/bitovi/funcunit/issues/242", "title": "You can't run getters after actions and waits. Please put your getters in a callback or at the beginning of the test.", "contents": "I am testing funcunit against facebook wall, I include funcunit :\nNow when i run\n$(document).ready(function() \n{\nF(\"#js_g > div > div > div\").visible(function(){\nconsole.log('found');\n})\n});\n\ni got this console error :\nYou can't run getters after actions and waits. Please put your getters in a callback or at the beginning of the test.\nplease advice", "createdAt": "2019-04-24T00:57:40Z", "updatedAt": "2019-04-25T01:21:58Z", "closedAt": "2019-04-24T15:39:35Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "beshoo", "authorAssociation": "NONE", "participants_count": 2, "participants_data": [{"login": "beshoo", "company": null}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2019-04-24T15:39:35Z", "contents": "That error is thrown here: \n  \n    \n      funcunit/browser/getters.js\n    \n    \n         Line 557\n      in\n      f9e31a3\n    \n    \n    \n    \n\n        \n          \n           console && console.error(\"You can't run getters after actions and waits. Please put your getters in a callback or at the beginning of the test.\") \n        \n    \n  \n\n\nFuncUnit is built for running tests for your own site, not simulating actions on another site. I believe the way you\u2019re trying to use it is unsupported.", "reactions_count": 1, "reactions_data": ["THUMBS_DOWN"]}, {"authorLogin": "beshoo", "authorAssociation": "NONE", "createdAt": "2019-04-25T01:21:58Z", "contents": "No that not the case, we are testing on our account...\nAnd i know that the  thrown place, but how to use gater in correct way?", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 246, "url": "https://github.com/bitovi/funcunit/issues/246", "title": "invalid usage of delete operator", "contents": "There is usage of the delete operator in the method add (browser/queue.js). This construction is not valid in the strict mode so it leads to fail when FuncUnit is imported as a ES6 module.\nadd = function(handler, error, context) {\n  if(handler instanceof Function) {\n    if(typeof error === 'object') {\n      context = error;\n      delete error;\n    }\n\n    error = (error && error.toString()) || 'Custom method has failed.';\nFound in the npm version 3.7.0", "createdAt": "2019-05-29T04:20:32Z", "updatedAt": "2019-05-30T17:31:52Z", "closedAt": null, "state": "OPEN", "closed": false, "locked": false, "activeLockReason": null, "authorLogin": "koalixCZ", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "koalixCZ", "company": null}, {"login": "matthewp", "company": "Bitovi"}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 1, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2019-05-29T10:22:22Z", "contents": "Probably should set it to null instead", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": ["bug", "help wanted", "p2"], "milestone": null}, {"repo_name": "bitovi/funcunit", "issue_id": 247, "url": "https://github.com/bitovi/funcunit/issues/247", "title": "funcunit.com is down with 502 \"Bad Gateway\"", "contents": "", "createdAt": "2019-07-02T13:47:48Z", "updatedAt": "2019-07-02T17:14:38Z", "closedAt": "2019-07-02T17:14:38Z", "state": "CLOSED", "closed": true, "locked": false, "activeLockReason": null, "authorLogin": "smcclure15", "authorAssociation": "NONE", "participants_count": 3, "participants_data": [{"login": "smcclure15", "company": "@MathWorks"}, {"login": "matthewp", "company": "Bitovi"}, {"login": "chasenlehara", "company": "@bitovi"}], "comments_count": 2, "comments_data": [{"authorLogin": "matthewp", "authorAssociation": "CONTRIBUTOR", "createdAt": "2019-07-02T14:07:48Z", "contents": "There's a Cloudflare outage, possibly related.", "reactions_count": 0, "reactions_data": []}, {"authorLogin": "chasenlehara", "authorAssociation": "MEMBER", "createdAt": "2019-07-02T17:14:38Z", "contents": "Closing this because Cloudflare is back up", "reactions_count": 0, "reactions_data": []}], "reactions_count": 0, "reactions_data": [], "labels": [], "milestone": null}]